(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"+QUr":function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("WXLG");function a(e,t){return Object(r.a)(e,t,"right")}},"+gpH":function(e,t,n){"use strict";n.d(t,"a",function(){return c}),n.d(t,"b",function(){return l});var r=n("+hG3"),a=n("fUNa"),s=n("0eCf"),i=n("kne7"),o=n("HdJO"),u=n("DPiU");function c(e){const{inputs:t,backend:n,attrs:l}=e,{x:d}=t,{dtype:h}=l;if("complex64"===h){if("complex64"===d.dtype)return Object(o.a)({inputs:{x:d},backend:n});const e=Object(s.a)(n,d.shape,d.dtype),t=c({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),r=Object(i.a)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===d.dtype){const e=Object(u.a)({inputs:{input:d},backend:n}),t=c({inputs:{x:e},backend:n,attrs:{dtype:h}});return n.disposeIntermediateTensorInfo(e),t}if(!r.util.hasEncodingLoss(d.dtype,h)){const e=Object(o.a)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:h}}if("int32"===h){const e=n.data.get(d.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(d.shape,"int32",t)}if("bool"===h){const e=n.data.get(d.dataId).values,t=r.util.toTypedArray([0],d.dtype),[s,i]=Object(a.a)((e,t)=>e!==t?1:0)(d.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${d.dtype} to ${h}`)}const l={kernelName:r.Cast,backendName:"cpu",kernelFunc:c}},"+hG3":function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",function(){return b.d}),n.d(t,"AdagradOptimizer",function(){return b.e}),n.d(t,"AdamOptimizer",function(){return b.f}),n.d(t,"AdamaxOptimizer",function(){return b.g}),n.d(t,"MomentumOptimizer",function(){return b.fc}),n.d(t,"Optimizer",function(){return b.qc}),n.d(t,"OptimizerConstructors",function(){return b.rc}),n.d(t,"RMSPropOptimizer",function(){return b.yc}),n.d(t,"SGDOptimizer",function(){return b.Qc}),n.d(t,"Tensor",function(){return b.vd}),n.d(t,"TensorBuffer",function(){return b.wd}),n.d(t,"Variable",function(){return b.Fd}),n.d(t,"Rank",function(){return b.Ac}),n.d(t,"sumOutType",function(){return b.bi}),n.d(t,"upcastType",function(){return b.zi}),n.d(t,"abs",function(){return b.Id}),n.d(t,"acos",function(){return b.Jd}),n.d(t,"acosh",function(){return b.Kd}),n.d(t,"add",function(){return b.Ld}),n.d(t,"addN",function(){return b.Md}),n.d(t,"all",function(){return b.Nd}),n.d(t,"any",function(){return b.Od}),n.d(t,"argMax",function(){return b.Pd}),n.d(t,"argMin",function(){return b.Qd}),n.d(t,"asin",function(){return b.Rd}),n.d(t,"asinh",function(){return b.Sd}),n.d(t,"atan",function(){return b.Td}),n.d(t,"atan2",function(){return b.Ud}),n.d(t,"atanh",function(){return b.Vd}),n.d(t,"avgPool",function(){return b.Wd}),n.d(t,"avgPool3d",function(){return b.Xd}),n.d(t,"basicLSTMCell",function(){return b.ae}),n.d(t,"batchToSpaceND",function(){return b.fe}),n.d(t,"batchNorm",function(){return b.be}),n.d(t,"batchNorm2d",function(){return b.ce}),n.d(t,"batchNorm3d",function(){return b.de}),n.d(t,"batchNorm4d",function(){return b.ee}),n.d(t,"bincount",function(){return b.ge}),n.d(t,"broadcastArgs",function(){return b.ie}),n.d(t,"broadcastTo",function(){return b.je}),n.d(t,"buffer",function(){return b.me}),n.d(t,"cast",function(){return b.ne}),n.d(t,"ceil",function(){return b.oe}),n.d(t,"clipByValue",function(){return b.pe}),n.d(t,"clone",function(){return b.qe}),n.d(t,"complex",function(){return b.re}),n.d(t,"concat",function(){return b.se}),n.d(t,"concat1d",function(){return b.te}),n.d(t,"concat2d",function(){return b.ue}),n.d(t,"concat3d",function(){return b.ve}),n.d(t,"concat4d",function(){return b.we}),n.d(t,"conv1d",function(){return b.xe}),n.d(t,"conv2d",function(){return b.ye}),n.d(t,"conv2dTranspose",function(){return b.ze}),n.d(t,"conv3d",function(){return b.Ae}),n.d(t,"conv3dTranspose",function(){return b.Be}),n.d(t,"cos",function(){return b.De}),n.d(t,"cosh",function(){return b.Ee}),n.d(t,"cumprod",function(){return b.Ge}),n.d(t,"cumsum",function(){return b.He}),n.d(t,"denseBincount",function(){return b.Je}),n.d(t,"depthToSpace",function(){return b.Le}),n.d(t,"depthwiseConv2d",function(){return b.Me}),n.d(t,"diag",function(){return b.Oe}),n.d(t,"dilation2d",function(){return b.Pe}),n.d(t,"div",function(){return b.Te}),n.d(t,"divNoNan",function(){return b.Ue}),n.d(t,"dot",function(){return b.Ve}),n.d(t,"einsum",function(){return b.Xe}),n.d(t,"elu",function(){return b.Ye}),n.d(t,"equal",function(){return b.ef}),n.d(t,"erf",function(){return b.ff}),n.d(t,"euclideanNorm",function(){return b.gf}),n.d(t,"exp",function(){return b.hf}),n.d(t,"expandDims",function(){return b.if}),n.d(t,"expm1",function(){return b.jf}),n.d(t,"eye",function(){return b.kf}),n.d(t,"fill",function(){return b.mf}),n.d(t,"floor",function(){return b.pf}),n.d(t,"floorDiv",function(){return b.qf}),n.d(t,"gather",function(){return b.sf}),n.d(t,"greater",function(){return b.Bf}),n.d(t,"greaterEqual",function(){return b.Cf}),n.d(t,"imag",function(){return b.Ef}),n.d(t,"isFinite",function(){return b.Jf}),n.d(t,"isInf",function(){return b.Kf}),n.d(t,"isNaN",function(){return b.Lf}),n.d(t,"leakyRelu",function(){return b.Of}),n.d(t,"less",function(){return b.Pf}),n.d(t,"lessEqual",function(){return b.Qf}),n.d(t,"linspace",function(){return b.Sf}),n.d(t,"localResponseNormalization",function(){return b.Tf}),n.d(t,"log",function(){return b.Uf}),n.d(t,"log1p",function(){return b.Vf}),n.d(t,"logSigmoid",function(){return b.Wf}),n.d(t,"logSoftmax",function(){return b.Xf}),n.d(t,"logSumExp",function(){return b.Yf}),n.d(t,"logicalAnd",function(){return b.Zf}),n.d(t,"logicalNot",function(){return b.ag}),n.d(t,"logicalOr",function(){return b.bg}),n.d(t,"logicalXor",function(){return b.cg}),n.d(t,"lowerBound",function(){return b.eg}),n.d(t,"matMul",function(){return b.fg}),n.d(t,"max",function(){return b.hg}),n.d(t,"maxPool",function(){return b.ig}),n.d(t,"maxPool3d",function(){return b.jg}),n.d(t,"maxPoolWithArgmax",function(){return b.kg}),n.d(t,"maximum",function(){return b.lg}),n.d(t,"mean",function(){return b.mg}),n.d(t,"meshgrid",function(){return b.og}),n.d(t,"min",function(){return b.pg}),n.d(t,"minimum",function(){return b.qg}),n.d(t,"mirrorPad",function(){return b.rg}),n.d(t,"mod",function(){return b.sg}),n.d(t,"moments",function(){return b.tg}),n.d(t,"mul",function(){return b.vg}),n.d(t,"multiRNNCell",function(){return b.wg}),n.d(t,"multinomial",function(){return b.xg}),n.d(t,"neg",function(){return b.yg}),n.d(t,"notEqual",function(){return b.Bg}),n.d(t,"oneHot",function(){return b.Cg}),n.d(t,"ones",function(){return b.Dg}),n.d(t,"onesLike",function(){return b.Eg}),n.d(t,"outerProduct",function(){return b.Gg}),n.d(t,"pad",function(){return b.Hg}),n.d(t,"pad1d",function(){return b.Ig}),n.d(t,"pad2d",function(){return b.Jg}),n.d(t,"pad3d",function(){return b.Kg}),n.d(t,"pad4d",function(){return b.Lg}),n.d(t,"pool",function(){return b.Mg}),n.d(t,"pow",function(){return b.Ng}),n.d(t,"prelu",function(){return b.Og}),n.d(t,"print",function(){return b.Pg}),n.d(t,"prod",function(){return b.Qg}),n.d(t,"rand",function(){return b.Sg}),n.d(t,"randomGamma",function(){return b.Tg}),n.d(t,"randomNormal",function(){return b.Ug}),n.d(t,"randomUniform",function(){return b.Vg}),n.d(t,"range",function(){return b.Wg}),n.d(t,"real",function(){return b.Yg}),n.d(t,"reciprocal",function(){return b.Zg}),n.d(t,"relu",function(){return b.dh}),n.d(t,"relu6",function(){return b.eh}),n.d(t,"reshape",function(){return b.gh}),n.d(t,"reverse",function(){return b.hh}),n.d(t,"reverse1d",function(){return b.ih}),n.d(t,"reverse2d",function(){return b.jh}),n.d(t,"reverse3d",function(){return b.kh}),n.d(t,"reverse4d",function(){return b.lh}),n.d(t,"round",function(){return b.nh}),n.d(t,"rsqrt",function(){return b.oh}),n.d(t,"scalar",function(){return b.ph}),n.d(t,"selu",function(){return b.th}),n.d(t,"separableConv2d",function(){return b.uh}),n.d(t,"setdiff1dAsync",function(){return b.yh}),n.d(t,"sigmoid",function(){return b.zh}),n.d(t,"sign",function(){return b.Ah}),n.d(t,"sin",function(){return b.Ch}),n.d(t,"sinh",function(){return b.Dh}),n.d(t,"slice",function(){return b.Eh}),n.d(t,"slice1d",function(){return b.Fh}),n.d(t,"slice2d",function(){return b.Gh}),n.d(t,"slice3d",function(){return b.Hh}),n.d(t,"slice4d",function(){return b.Ih}),n.d(t,"softmax",function(){return b.Kh}),n.d(t,"softplus",function(){return b.Lh}),n.d(t,"spaceToBatchND",function(){return b.Mh}),n.d(t,"fft",function(){return b.lf}),n.d(t,"ifft",function(){return b.Df}),n.d(t,"irfft",function(){return b.If}),n.d(t,"rfft",function(){return b.mh}),n.d(t,"split",function(){return b.Qh}),n.d(t,"sqrt",function(){return b.Rh}),n.d(t,"square",function(){return b.Sh}),n.d(t,"squaredDifference",function(){return b.Th}),n.d(t,"squeeze",function(){return b.Uh}),n.d(t,"stack",function(){return b.Vh}),n.d(t,"step",function(){return b.Wh}),n.d(t,"stridedSlice",function(){return b.Xh}),n.d(t,"sub",function(){return b.Zh}),n.d(t,"sum",function(){return b.ai}),n.d(t,"tan",function(){return b.ci}),n.d(t,"tanh",function(){return b.di}),n.d(t,"tensor",function(){return b.ei}),n.d(t,"tensor1d",function(){return b.fi}),n.d(t,"tensor2d",function(){return b.gi}),n.d(t,"tensor3d",function(){return b.hi}),n.d(t,"tensor4d",function(){return b.ii}),n.d(t,"tensor5d",function(){return b.ji}),n.d(t,"tensor6d",function(){return b.ki}),n.d(t,"tile",function(){return b.oi}),n.d(t,"topk",function(){return b.qi}),n.d(t,"truncatedNormal",function(){return b.ti}),n.d(t,"unique",function(){return b.ui}),n.d(t,"unsortedSegmentSum",function(){return b.xi}),n.d(t,"unstack",function(){return b.yi}),n.d(t,"upperBound",function(){return b.Ai}),n.d(t,"variable",function(){return b.Ei}),n.d(t,"where",function(){return b.Hi}),n.d(t,"whereAsync",function(){return b.Ii}),n.d(t,"zeros",function(){return b.Ji}),n.d(t,"zerosLike",function(){return b.Ki}),n.d(t,"booleanMaskAsync",function(){return b.he}),n.d(t,"transpose",function(){return b.si}),n.d(t,"norm",function(){return b.Ag}),n.d(t,"movingAverage",function(){return b.ug}),n.d(t,"scatterND",function(){return b.qh}),n.d(t,"searchSorted",function(){return b.sh}),n.d(t,"sparseToDense",function(){return b.Oh}),n.d(t,"gatherND",function(){return b.tf}),n.d(t,"dropout",function(){return b.We}),n.d(t,"enclosingPowerOfTwo",function(){return b.bf}),n.d(t,"cosineWindow",function(){return b.Fe}),n.d(t,"inTopKAsync",function(){return b.Gf}),n.d(t,"op",function(){return b.Fg}),n.d(t,"OP_SCOPE_SUFFIX",function(){return b.nc}),n.d(t,"image",function(){return b.Ff}),n.d(t,"linalg",function(){return b.Rf}),n.d(t,"losses",function(){return b.dg}),n.d(t,"spectral",function(){return b.Ph}),n.d(t,"fused",function(){return b.rf}),n.d(t,"signal",function(){return b.Bh}),n.d(t,"sparse",function(){return b.Nh}),n.d(t,"string",function(){return b.Yh}),n.d(t,"Reduction",function(){return b.Ec}),n.d(t,"train",function(){return b.ri}),n.d(t,"enableProdMode",function(){return b.af}),n.d(t,"enableDebugMode",function(){return b.Ze}),n.d(t,"disableDeprecationWarnings",function(){return b.Qe}),n.d(t,"deprecationWarn",function(){return b.Ke}),n.d(t,"disposeVariables",function(){return b.Se}),n.d(t,"engine",function(){return b.cf}),n.d(t,"memory",function(){return b.ng}),n.d(t,"profile",function(){return b.Rg}),n.d(t,"tidy",function(){return b.ni}),n.d(t,"dispose",function(){return b.Re}),n.d(t,"keep",function(){return b.Mf}),n.d(t,"time",function(){return b.pi}),n.d(t,"setBackend",function(){return b.wh}),n.d(t,"ready",function(){return b.Xg}),n.d(t,"getBackend",function(){return b.vf}),n.d(t,"removeBackend",function(){return b.fh}),n.d(t,"findBackend",function(){return b.nf}),n.d(t,"findBackendFactory",function(){return b.of}),n.d(t,"registerBackend",function(){return b.ah}),n.d(t,"backend",function(){return b.Yd}),n.d(t,"setPlatform",function(){return b.xh}),n.d(t,"getKernel",function(){return b.xf}),n.d(t,"getGradient",function(){return b.wf}),n.d(t,"getKernelsForBackend",function(){return b.yf}),n.d(t,"registerKernel",function(){return b.ch}),n.d(t,"registerGradient",function(){return b.bh}),n.d(t,"unregisterKernel",function(){return b.wi}),n.d(t,"unregisterGradient",function(){return b.vi}),n.d(t,"copyRegisteredKernels",function(){return b.Ce}),n.d(t,"customGrad",function(){return b.Ie}),n.d(t,"grad",function(){return b.zf}),n.d(t,"grads",function(){return b.Af}),n.d(t,"valueAndGrad",function(){return b.Ci}),n.d(t,"valueAndGrads",function(){return b.Di}),n.d(t,"variableGrads",function(){return b.Fi}),n.d(t,"Environment",function(){return b.gb}),n.d(t,"env",function(){return b.df}),n.d(t,"ENV",function(){return b.cb}),n.d(t,"version_core",function(){return b.Gi}),n.d(t,"nextFrame",function(){return b.zg}),n.d(t,"browser",function(){return b.le}),n.d(t,"io",function(){return b.Hf}),n.d(t,"math",function(){return b.gg}),n.d(t,"serialization",function(){return b.vh}),n.d(t,"test_util",function(){return b.mi}),n.d(t,"util",function(){return b.Bi}),n.d(t,"backend_util",function(){return b.Zd}),n.d(t,"broadcast_util",function(){return b.ke}),n.d(t,"tensor_util",function(){return b.li}),n.d(t,"slice_util",function(){return b.Jh}),n.d(t,"gather_util",function(){return b.uf}),n.d(t,"scatter_util",function(){return b.rh}),n.d(t,"device_util",function(){return b.Ne}),n.d(t,"kernel_impls",function(){return b.Nf}),n.d(t,"KernelBackend",function(){return b.Fb}),n.d(t,"DataStorage",function(){return b.S}),n.d(t,"Abs",function(){return b.a}),n.d(t,"Acos",function(){return b.b}),n.d(t,"Acosh",function(){return b.c}),n.d(t,"Add",function(){return b.h}),n.d(t,"AddN",function(){return b.i}),n.d(t,"All",function(){return b.j}),n.d(t,"Any",function(){return b.k}),n.d(t,"ArgMax",function(){return b.l}),n.d(t,"ArgMin",function(){return b.m}),n.d(t,"Asin",function(){return b.n}),n.d(t,"Asinh",function(){return b.o}),n.d(t,"Atan",function(){return b.p}),n.d(t,"Atanh",function(){return b.r}),n.d(t,"Atan2",function(){return b.q}),n.d(t,"AvgPool",function(){return b.s}),n.d(t,"AvgPoolGrad",function(){return b.v}),n.d(t,"AvgPool3D",function(){return b.t}),n.d(t,"AvgPool3DGrad",function(){return b.u}),n.d(t,"BatchMatMul",function(){return b.w}),n.d(t,"BatchToSpaceND",function(){return b.x}),n.d(t,"Bincount",function(){return b.y}),n.d(t,"BroadcastTo",function(){return b.A}),n.d(t,"BroadcastArgs",function(){return b.z}),n.d(t,"Cast",function(){return b.B}),n.d(t,"Ceil",function(){return b.C}),n.d(t,"ClipByValue",function(){return b.D}),n.d(t,"Complex",function(){return b.E}),n.d(t,"ComplexAbs",function(){return b.F}),n.d(t,"Concat",function(){return b.G}),n.d(t,"Conv2D",function(){return b.H}),n.d(t,"Conv2DBackpropFilter",function(){return b.I}),n.d(t,"Conv2DBackpropInput",function(){return b.J}),n.d(t,"Conv3D",function(){return b.K}),n.d(t,"Conv3DBackpropFilterV2",function(){return b.L}),n.d(t,"Conv3DBackpropInputV2",function(){return b.M}),n.d(t,"Cos",function(){return b.N}),n.d(t,"Cosh",function(){return b.O}),n.d(t,"Cumprod",function(){return b.Q}),n.d(t,"Cumsum",function(){return b.R}),n.d(t,"CropAndResize",function(){return b.P}),n.d(t,"DenseBincount",function(){return b.T}),n.d(t,"DepthToSpace",function(){return b.U}),n.d(t,"DepthwiseConv2dNative",function(){return b.V}),n.d(t,"DepthwiseConv2dNativeBackpropFilter",function(){return b.W}),n.d(t,"DepthwiseConv2dNativeBackpropInput",function(){return b.X}),n.d(t,"Diag",function(){return b.Y}),n.d(t,"Dilation2D",function(){return b.Z}),n.d(t,"Dilation2DBackpropInput",function(){return b.bb}),n.d(t,"Dilation2DBackpropFilter",function(){return b.ab}),n.d(t,"RealDiv",function(){return b.Cc}),n.d(t,"Einsum",function(){return b.db}),n.d(t,"Elu",function(){return b.eb}),n.d(t,"EluGrad",function(){return b.fb}),n.d(t,"Erf",function(){return b.ib}),n.d(t,"Equal",function(){return b.hb}),n.d(t,"Exp",function(){return b.jb}),n.d(t,"ExpandDims",function(){return b.kb}),n.d(t,"Expm1",function(){return b.lb}),n.d(t,"FFT",function(){return b.mb}),n.d(t,"Fill",function(){return b.nb}),n.d(t,"FlipLeftRight",function(){return b.ob}),n.d(t,"Floor",function(){return b.pb}),n.d(t,"FloorDiv",function(){return b.qb}),n.d(t,"FusedBatchNorm",function(){return b.sb}),n.d(t,"GatherV2",function(){return b.wb}),n.d(t,"GatherNd",function(){return b.vb}),n.d(t,"Greater",function(){return b.xb}),n.d(t,"GreaterEqual",function(){return b.yb}),n.d(t,"Identity",function(){return b.Ab}),n.d(t,"IFFT",function(){return b.zb}),n.d(t,"Imag",function(){return b.Bb}),n.d(t,"IsFinite",function(){return b.Cb}),n.d(t,"IsInf",function(){return b.Db}),n.d(t,"IsNan",function(){return b.Eb}),n.d(t,"LeakyRelu",function(){return b.Ib}),n.d(t,"Less",function(){return b.Jb}),n.d(t,"LessEqual",function(){return b.Kb}),n.d(t,"LinSpace",function(){return b.Lb}),n.d(t,"Log",function(){return b.Mb}),n.d(t,"Log1p",function(){return b.Nb}),n.d(t,"LogicalAnd",function(){return b.Pb}),n.d(t,"LogicalNot",function(){return b.Qb}),n.d(t,"LogicalOr",function(){return b.Rb}),n.d(t,"LogSoftmax",function(){return b.Ob}),n.d(t,"LowerBound",function(){return b.Sb}),n.d(t,"LRN",function(){return b.Gb}),n.d(t,"LRNGrad",function(){return b.Hb}),n.d(t,"Max",function(){return b.Tb}),n.d(t,"Maximum",function(){return b.Zb}),n.d(t,"MaxPool",function(){return b.Ub}),n.d(t,"MaxPoolGrad",function(){return b.Xb}),n.d(t,"MaxPool3D",function(){return b.Vb}),n.d(t,"MaxPool3DGrad",function(){return b.Wb}),n.d(t,"MaxPoolWithArgmax",function(){return b.Yb}),n.d(t,"Mean",function(){return b.ac}),n.d(t,"Min",function(){return b.bc}),n.d(t,"Minimum",function(){return b.cc}),n.d(t,"MirrorPad",function(){return b.dc}),n.d(t,"Mod",function(){return b.ec}),n.d(t,"Multinomial",function(){return b.gc}),n.d(t,"Multiply",function(){return b.hc}),n.d(t,"Neg",function(){return b.ic}),n.d(t,"NotEqual",function(){return b.mc}),n.d(t,"NonMaxSuppressionV3",function(){return b.jc}),n.d(t,"NonMaxSuppressionV4",function(){return b.kc}),n.d(t,"NonMaxSuppressionV5",function(){return b.lc}),n.d(t,"OnesLike",function(){return b.pc}),n.d(t,"OneHot",function(){return b.oc}),n.d(t,"Pack",function(){return b.sc}),n.d(t,"PadV2",function(){return b.tc}),n.d(t,"Pool",function(){return b.uc}),n.d(t,"Pow",function(){return b.vc}),n.d(t,"Prelu",function(){return b.wc}),n.d(t,"Prod",function(){return b.xc}),n.d(t,"Range",function(){return b.zc}),n.d(t,"Real",function(){return b.Bc}),n.d(t,"Reciprocal",function(){return b.Dc}),n.d(t,"Relu",function(){return b.Fc}),n.d(t,"Reshape",function(){return b.Hc}),n.d(t,"ResizeNearestNeighbor",function(){return b.Kc}),n.d(t,"ResizeNearestNeighborGrad",function(){return b.Lc}),n.d(t,"ResizeBilinear",function(){return b.Ic}),n.d(t,"ResizeBilinearGrad",function(){return b.Jc}),n.d(t,"Relu6",function(){return b.Gc}),n.d(t,"Reverse",function(){return b.Mc}),n.d(t,"Round",function(){return b.Oc}),n.d(t,"Rsqrt",function(){return b.Pc}),n.d(t,"ScatterNd",function(){return b.Rc}),n.d(t,"SearchSorted",function(){return b.Sc}),n.d(t,"Select",function(){return b.Tc}),n.d(t,"Selu",function(){return b.Uc}),n.d(t,"Slice",function(){return b.Zc}),n.d(t,"Sin",function(){return b.Xc}),n.d(t,"Sinh",function(){return b.Yc}),n.d(t,"Sign",function(){return b.Wc}),n.d(t,"Sigmoid",function(){return b.Vc}),n.d(t,"Softplus",function(){return b.bd}),n.d(t,"Sqrt",function(){return b.jd}),n.d(t,"Sum",function(){return b.sd}),n.d(t,"SpaceToBatchND",function(){return b.cd}),n.d(t,"SplitV",function(){return b.id}),n.d(t,"Softmax",function(){return b.ad}),n.d(t,"SparseFillEmptyRows",function(){return b.dd}),n.d(t,"SparseReshape",function(){return b.ed}),n.d(t,"SparseSegmentMean",function(){return b.fd}),n.d(t,"SparseSegmentSum",function(){return b.gd}),n.d(t,"SparseToDense",function(){return b.hd}),n.d(t,"SquaredDifference",function(){return b.ld}),n.d(t,"Square",function(){return b.kd}),n.d(t,"StridedSlice",function(){return b.nd}),n.d(t,"StringNGrams",function(){return b.od}),n.d(t,"StringSplit",function(){return b.pd}),n.d(t,"StringToHashBucketFast",function(){return b.qd}),n.d(t,"Sub",function(){return b.rd}),n.d(t,"Tan",function(){return b.td}),n.d(t,"Tanh",function(){return b.ud}),n.d(t,"Tile",function(){return b.xd}),n.d(t,"TopK",function(){return b.yd}),n.d(t,"Transform",function(){return b.zd}),n.d(t,"Transpose",function(){return b.Ad}),n.d(t,"Unique",function(){return b.Bd}),n.d(t,"Unpack",function(){return b.Cd}),n.d(t,"UnsortedSegmentSum",function(){return b.Dd}),n.d(t,"UpperBound",function(){return b.Ed}),n.d(t,"ZerosLike",function(){return b.Gd}),n.d(t,"Step",function(){return b.md}),n.d(t,"FromPixels",function(){return b.rb}),n.d(t,"RotateWithOffset",function(){return b.Nc}),n.d(t,"_FusedMatMul",function(){return b.Hd}),n.d(t,"FusedConv2D",function(){return b.tb}),n.d(t,"FusedDepthwiseConv2D",function(){return b.ub});var r=n("auKK"),a=(n("Kajj"),n("szMd")),s=n("x0IE"),i=n("7w+B"),o=n("VQjN");class u{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(a.c)().get("IS_BROWSER")){Object(a.c)().setPlatform("browser",new u);try{o.a.registerManager(i.a.URL_SCHEME,new i.b)}catch(g){}try{o.a.registerManager(s.a.URL_SCHEME,new s.b)}catch(g){}}let c;Object(a.c)().get("IS_NODE")&&!Object(a.c)().get("IS_BROWSER")&&Object(a.c)().setPlatform("node",new class{constructor(){this.util=n(2),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Object(a.c)().global.fetch?Object(a.c)().global.fetch(e,t):(null==c&&(c=n(1)),c(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var l=n("BD40"),d=n("3rNm"),h=n("8Km0"),p=n("dWjR"),f=n("NNfn");Object(r.b)();const m={buffer:l.a,cast:d.a,clone:h.a,print:p.a};Object(f.f)(m);var b=n("DvQV")},"+wyz":function(e,t,n){"use strict";n.d(t,"c",function(){return i}),n.d(t,"a",function(){return o}),n.d(t,"b",function(){return u});var r=n("+hG3"),a=n("zUqB"),s=n("iSpy");const i=Object(a.a)(e=>Math.exp(e)),o=Object(s.b)(r.Exp,i,"float32"),u={kernelName:r.Exp,backendName:"cpu",kernelFunc:o}},"/7N0":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sigmoid_:function(e){const t=Object(s.a)(e,"x","sigmoid","float32");return r.a.runKernel(a.Fc,{x:t})}})},"/8/o":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.cropTo=t.resizeMinTo=t.resizeMaxTo=t.resize=void 0;var r=function(){return document.createElement("canvas")};function a(e,t,n){return void 0===n&&(n=r()),n.width=e.width*t,n.height=e.height*t,n.getContext("2d").drawImage(e,0,0,n.width,n.height),n}t.resize=a,t.resizeMaxTo=function(e,t,n){return void 0===n&&(n=r()),a(e,t/Math.max(e.width,e.height),n)},t.resizeMinTo=function(e,t,n){return void 0===n&&(n=r()),a(e,t/Math.min(e.width,e.height),n)},t.cropTo=function(e,t,n,a){void 0===n&&(n=!1),void 0===a&&(a=r());var s=e.width,i=e.height;e instanceof HTMLVideoElement&&(s=e.videoWidth,i=e.videoHeight);var o=t/Math.min(s,i),u=Math.ceil(s*o),c=Math.ceil(i*o),l=u-t,d=c-t;a.width=a.height=t;var h=a.getContext("2d");return h.drawImage(e,-1*~~(l/2),-1*~~(d/2),u,c),n&&(h.scale(-1,1),h.drawImage(a,-1*t,0)),a}},"/AvP":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isFinite_:function(e){const t=Object(s.a)(e,"x","isFinite");return r.a.runKernel(a.vb,{x:t})}})},0:function(e,t,n){e.exports=n("zUnb")},"01bp":function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("zUqB"),s=n("iSpy");const i=Object(a.a)(e=>Math.floor(e)),o=Object(s.b)(r.Floor,i),u={kernelName:r.Floor,backendName:"cpu",kernelFunc:o}},"02mo":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({floor_:function(e){const t=Object(s.a)(e,"x","floor","float32");return r.a.runKernel(a.ib,{x:t})}})},"0I63":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({reverse_:function(e,t){const n=Object(s.a)(e,"x","reverse");return r.a.runKernel(a.xc,{x:n},{dims:t})}})},"0ahe":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({atanh_:function(e){const t=Object(s.a)(e,"x","atanh");return r.a.runKernel(a.n,{x:t})}})},"0eCf":function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("+hG3"),a=n("kne7");function s(e,t,n="float32"){if("complex64"===n){const n=s(e,t,"float32"),r=s(e,t,"float32");return Object(a.a)({inputs:{real:n,imag:r},backend:e})}const i=r.util.makeZerosTypedArray(r.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}},"0fRV":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("o/e8"),a=n("atXS"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({squeeze_:function(e,t){const n=Object(r.a)(e,"x","squeeze");return Object(i.a)(n,Object(a.Q)(n.shape,t).newShape)}})},"0l+w":function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("o/e8"),a=n("Um8L"),s=n("4zPZ"),i=n("7wDt"),o=n("8YN0"),u=n("VO80");const c=Object(u.b)({logicalXor_:function(e,t){const n=Object(r.a)(e,"a","logicalXor","bool"),u=Object(r.a)(t,"b","logicalXor","bool");return Object(a.assertAndGetBroadcastShape)(n.shape,u.shape),Object(s.a)(Object(o.a)(e,t),Object(i.a)(Object(s.a)(e,t)))}})},"0wrZ":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({tan_:function(e){const t=Object(s.a)(e,"x","tan","float32");return r.a.runKernel(a.dd,{x:t})}})},1:function(e,t){},"17CO":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({real_:function(e){const t=Object(s.a)(e,"input","real");return r.a.runKernel(a.nc,{input:t})}})},"1N4k":function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({notEqual_:function(e,t){let n=Object(i.a)(e,"a","notEqual","string_or_numeric"),u=Object(i.a)(t,"b","notEqual","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.dc,{a:n,b:u})}})},"1OSX":function(e,t,n){"use strict";n.d(t,"a",function(){return a}),n.d(t,"b",function(){return s}),n.d(t,"c",function(){return i});var r=n("YSVl");n("1WXW");class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s*=1/this.beta*this.d,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},"1U0N":function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({stack_:function(e,t=0){const n=Object(s.b)(e,"tensors","stack","string_or_numeric");return i.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&i.b(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),r.a.runKernel(a.gc,n,{axis:t})}})},"1WXW":function(e,t,n){"use strict";n.r(t),n.d(t,"TEST_EPSILON_FLOAT16",function(){return o}),n.d(t,"expectArraysClose",function(){return u}),n.d(t,"testEpsilon",function(){return c}),n.d(t,"expectPromiseToFail",function(){return d}),n.d(t,"expectArraysEqual",function(){return h}),n.d(t,"expectNumbersClose",function(){return p}),n.d(t,"expectValuesInRange",function(){return m}),n.d(t,"expectArrayBuffersEqual",function(){return b}),n.d(t,"encodeStrings",function(){return g});var r=n("auKK"),a=n("o/e8"),s=n("atXS"),i=n("6366");const o=.1;function u(e,t,n){return null==n&&(n=c()),l(e,t,(e,t)=>f(e,t,n))}function c(){return 32===r.a.backend.floatPrecision()?.001:o}function l(e,t,n){let r=!0;if((Object(s.A)(e)||Object(s.A)(t))&&(r=!1),Object(s.A)(e)&&Object(s.A)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(a.c)(e),r=Object(a.c)(t);if(!Object(s.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const i=Object(s.A)(e)?e:Object(s.m)(e),o=Object(s.A)(t)?t:Object(s.m)(t);if(i.length!==o.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${o.length}.\nActual:   ${i}.\nExpected: ${o}.`);for(let a=0;a<o.length;++a){const e=i[a],t=o[a];if(!n(e,t))throw new Error(`Arrays differ: actual[${a}] = ${e}, expected[${a}] = ${t}.\nActual:   ${i}.\nExpected: ${o}.`)}}function d(e,t){e().then(()=>t.fail(),()=>t())}function h(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Object(s.z)(e)||Object(s.z)(e[0])||Object(s.z)(t)||Object(s.z)(t[0])?l(e,n,(e,t)=>e==t):l(e,t,(e,t)=>f(e,t,0))}function p(e,t,n){if(null==n&&(n=c()),!f(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function f(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function m(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function b(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function g(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?g(n):e[t]=Object(i.encodeString)(n)}return e}},2:function(e,t){},"20lx":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({argMin_:function(e,t=0){const n=Object(s.a)(e,"x","argMin");return r.a.runKernel(a.i,{x:n},{axis:t})}})},"2lpH":function(e,t){e.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=c(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=c(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function u(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=f)return k}else{if(e<=-m)return S;if(e+1>=m)return O}return e<0?u(-e,t).neg():c(e%p|0,e/p|0,t)}function c(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=u,r.fromBits=c;var l=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=u(l(n,8)),s=g,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),c=parseInt(e.substring(i,i+o),n);if(o<8){var h=u(l(n,o));s=s.mul(h).add(u(c))}else s=(s=s.mul(a)).add(u(c))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?d(e,t):c(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=h;var p=4294967296,f=p*p,m=f/2,b=o(1<<24),g=o(0);r.ZERO=g;var y=o(0,!0);r.UZERO=y;var x=o(1);r.ONE=x;var v=o(1,!0);r.UONE=v;var w=o(-1);r.NEG_ONE=w;var O=c(-1,2147483647,!1);r.MAX_VALUE=O;var k=c(-1,-1,!0);r.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);r.MIN_VALUE=S;var I=r.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=u(l(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),c=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},I.neg=I.negate,I.add=function(e){a(e)||(e=h(e));var t=0,n=0,r=0,s=0;return r+=(s+=(65535&this.low)+(65535&e.low))>>>16,n+=(r+=(this.low>>>16)+(e.low>>>16))>>>16,t+=(n+=(65535&this.high)+(65535&e.high))>>>16,t+=(this.high>>>16)+(e.high>>>16),c((r&=65535)<<16|(s&=65535),(t&=65535)<<16|(n&=65535),this.unsigned)},I.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=h(e)),n)return c(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b)&&e.lt(b))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=65535&this.high,r=this.low>>>16,s=65535&this.low,i=65535&e.high,o=e.low>>>16,l=65535&e.low,d=0,p=0,f=0,m=0;return f+=(m+=s*l)>>>16,p+=(f+=r*l)>>>16,f&=65535,p+=(f+=s*o)>>>16,d+=(p+=t*l)>>>16,p&=65535,d+=(p+=r*o)>>>16,p&=65535,d+=(p+=s*i)>>>16,d+=(this.high>>>16)*l+t*o+r*i+s*(e.high>>>16),c((f&=65535)<<16|(m&=65535),(d&=65535)<<16|(p&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(S))return e.eq(x)||e.eq(w)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:l(2,i-48),d=u(t),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=u(t-=o,this.unsigned)).mul(e);d.isZero()&&(d=x),s=s.add(d),r=r.sub(p)}return s},I.div=I.divide,I.modulo=function(e){return a(e)||(e=h(e)),n?c((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return c(~this.low,~this.high,this.unsigned)},I.and=function(e){return a(e)||(e=h(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return a(e)||(e=h(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return a(e)||(e=h(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},"2ugP":function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({expandDims_:function(e,t=0){const n=Object(s.a)(e,"x","expandDims","string_or_numeric");return i.b(t<=n.rank,()=>"Axis must be <= rank of the tensor"),r.a.runKernel(a.db,{input:n},{dim:t})}})},3:function(e,t){},"34HJ":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({all_:function(e,t=null,n=!1){const i=Object(s.a)(e,"x","all","bool");return r.a.runKernel(a.f,{x:i},{axis:t,keepDims:n})}})},"3FnS":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({asinh_:function(e){const t=Object(s.a)(e,"x","asinh");return r.a.runKernel(a.k,{x:t})}})},"3X4V":function(e,t,n){"use strict";n.d(t,"a",function(){return l});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({conv2d_:function(e,t,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(e,"x","conv2d","float32"),f=Object(s.a)(t,"filter","conv2d","float32");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),i.b(4===f.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`),o.a("conv2d",u,h);const g="NHWC"===l?m.shape[3]:m.shape[1];i.b(g===f.shape[2],()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`),i.b(o.i(n,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const y=r.a.runKernel(a.D,{x:m,filter:f},{strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h});return b?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},"3hph":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({stridedSlice_:function(e,t,n,i,o=0,u=0,c=0,l=0,d=0){const h=Object(s.a)(e,"x","stridedSlice","string_or_numeric");return r.a.runKernel(a.Xc,{x:h},{begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d})}})},"3rNm":function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({cast_:function(e,t){const n=Object(s.a)(e,"x","cast");if(!i.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return r.a.runKernel(a.x,{x:n},{dtype:t})}})},4:function(e,t){},"4FMF":function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("3rNm"),o=n("VO80");const u=Object(o.b)({sum_:function(e,t=null,n=!1){let o=Object(s.a)(e,"x","sum");return"bool"===o.dtype&&(o=Object(i.a)(o,"int32")),r.a.runKernel(a.cd,{x:o},{axis:t,keepDims:n})}})},"4QEz":function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({localResponseNormalization_:function(e,t=5,n=1,o=1,c=.5){const l=Object(s.a)(e,"x","localResponseNormalization");i.b(4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),i.b(i.v(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let d=l,h=!1;3===l.rank&&(h=!0,d=Object(u.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p=r.a.runKernel(a.yb,{x:d},{depthRadius:t,bias:n,alpha:o,beta:c});return h?Object(u.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},"4f3O":function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({less_:function(e,t){let n=Object(i.a)(e,"a","less","string_or_numeric"),u=Object(i.a)(t,"b","less","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.Bb,{a:n,b:u})}})},"4iwy":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o=Object(s.a)(e,"indices","oneHot","int32");return r.a.runKernel(a.ec,{indices:o},{depth:t,onValue:n,offValue:i})}})},"4tfB":function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a){const s=Object(r.buffer)(e,t.dtype);for(let r=0;r<s.size;r++){const e=s.indexToLoc(r),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+a[t];s.set(t.get(...i),...e)}return s}},"4zPZ":function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("Um8L"),o=n("VO80");const u=Object(o.b)({logicalAnd_:function(e,t){const n=Object(s.a)(e,"a","logicalAnd","bool"),o=Object(s.a)(t,"b","logicalAnd","bool");return Object(i.assertAndGetBroadcastShape)(n.shape,o.shape),r.a.runKernel(a.Hb,{a:n,b:o})}})},5:function(e,t){},6:function(e,t){},6366:function(e,t,n){"use strict";n.r(t),n.d(t,"shuffle",function(){return a.M}),n.d(t,"shuffleCombo",function(){return a.N}),n.d(t,"clamp",function(){return a.i}),n.d(t,"nearestLargerEven",function(){return a.H}),n.d(t,"swap",function(){return a.S}),n.d(t,"sum",function(){return a.R}),n.d(t,"randUniform",function(){return a.J}),n.d(t,"distSquared",function(){return a.l}),n.d(t,"assert",function(){return a.b}),n.d(t,"assertShapesMatch",function(){return a.e}),n.d(t,"assertNonNull",function(){return a.d}),n.d(t,"flatten",function(){return a.m}),n.d(t,"sizeFromShape",function(){return a.O}),n.d(t,"isScalarShape",function(){return a.y}),n.d(t,"arraysEqual",function(){return a.a}),n.d(t,"isInt",function(){return a.v}),n.d(t,"tanh",function(){return a.T}),n.d(t,"sizeToSquarishShape",function(){return a.P}),n.d(t,"createShuffledIndices",function(){return a.k}),n.d(t,"rightPad",function(){return a.L}),n.d(t,"repeatedTry",function(){return a.K}),n.d(t,"inferFromImplicitShape",function(){return a.s}),n.d(t,"parseAxisParam",function(){return a.I}),n.d(t,"squeezeShape",function(){return a.Q}),n.d(t,"getTypedArrayFromDType",function(){return a.o}),n.d(t,"getArrayFromDType",function(){return a.n}),n.d(t,"checkConversionForErrors",function(){return a.h}),n.d(t,"isValidDtype",function(){return a.B}),n.d(t,"hasEncodingLoss",function(){return a.p}),n.d(t,"isTypedArray",function(){return a.A}),n.d(t,"bytesPerElement",function(){return a.g}),n.d(t,"bytesFromStringArray",function(){return a.f}),n.d(t,"isString",function(){return a.z}),n.d(t,"isBoolean",function(){return a.t}),n.d(t,"isNumber",function(){return a.w}),n.d(t,"inferDtype",function(){return a.r}),n.d(t,"isFunction",function(){return a.u}),n.d(t,"nearestDivisor",function(){return a.G}),n.d(t,"computeStrides",function(){return a.j}),n.d(t,"toNestedArray",function(){return a.U}),n.d(t,"makeOnesTypedArray",function(){return a.D}),n.d(t,"makeZerosTypedArray",function(){return a.F}),n.d(t,"makeZerosNestedTypedArray",function(){return a.E}),n.d(t,"assertNonNegativeIntegerDimensions",function(){return a.c}),n.d(t,"locToIndex",function(){return a.C}),n.d(t,"indexToLoc",function(){return a.q}),n.d(t,"isPromise",function(){return a.x}),n.d(t,"hexToLong",function(){return o}),n.d(t,"fingerPrint64",function(){return y}),n.d(t,"createScalarValue",function(){return x}),n.d(t,"toTypedArray",function(){return v}),n.d(t,"now",function(){return w}),n.d(t,"fetch",function(){return O}),n.d(t,"encodeString",function(){return k}),n.d(t,"decodeString",function(){return S});var r=n("szMd"),a=n("atXS"),s=n("2lpH");const i=n.n(s).a||s;function o(e){return i.fromString(e,!0,16)}const u=o("c3a5c85c97cb3127"),c=o("b492b66fbe98f273"),l=o("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function p(e,t){return h(e,t,8)}function f(e,t){return h(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function b(e,t,n=o("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function g(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=m(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(m(a,44)),[a.add(r),s.add(i)]}(p(e,t),p(e,t+8),p(e,t+16),p(e,t+24),n,r)}function y(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=l.add(2*t),r=p(e,0).add(l),a=p(e,t-8);return b(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(t>=4){const n=l.add(2*t);return b(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=t+(e[t-1]<<2);return d(l.mul(e[0]+(e[t>>1]<<8)).xor(u.mul(n))).mul(l)}return l}(e,t):function(e,t=e.length){const n=l.add(2*t),r=p(e,0).mul(c),a=p(e,8),s=p(e,t-8).mul(n),i=p(e,t-16).mul(l);return b(m(r.add(a),43).add(m(s,30)).add(i),r.add(m(a.add(l),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=l.add(2*t),r=p(e,0).mul(l),a=p(e,8),s=p(e,t-8).mul(n),i=p(e,t-16).mul(l),o=m(r.add(a),43).add(m(s,30)).add(i),u=b(o,r.add(m(a.add(l),18)).add(s),n),c=p(e,16).mul(n),d=p(e,24),h=o.add(p(e,t-32)).mul(n),f=u.add(p(e,t-24)).mul(n);return b(m(c.add(d),43).add(m(h,30)).add(f),c.add(m(d.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(c).add(113),s=d(a.mul(l).add(113)).mul(l),o=[i.UZERO,i.UZERO],h=[i.UZERO,i.UZERO];r=r.mul(l).add(p(e,0));let y=0;const x=64*(t-1>>6),v=x+(t-1&63)-63;do{r=m(r.add(a).add(o[0]).add(p(e,y+8)),37).mul(c),a=m(a.add(o[1]).add(p(e,y+48)),42).mul(c),r=r.xor(h[1]),a=a.add(o[0]).add(p(e,y+40)),s=m(s.add(h[0]),33).mul(c),o=g(e,y,o[1].mul(c),r.add(h[0])),h=g(e,y+32,s.add(h[1]),a.add(p(e,y+16))),[s,r]=[r,s],y+=64}while(y!==x);const w=c.add(s.and(255).shl(1));return y=v,h[0]=h[0].add(t-1&63),o[0]=o[0].add(h[0]),h[0]=h[0].add(o[0]),r=m(r.add(a).add(o[0]).add(p(e,y+8)),37).mul(w),a=m(a.add(o[1]).add(p(e,y+48)),42).mul(w),r=r.xor(h[1].mul(9)),a=a.add(o[0].mul(9).add(p(e,y+40))),s=m(s.add(h[0]),33).mul(w),o=g(e,y,o[1].mul(w),r.add(h[0])),h=g(e,y+32,s.add(h[1]),a.add(p(e,y+16))),[s,r]=[r,s],b(b(o[0],h[0],w).add(d(a).mul(u)).add(s),b(o[1],h[1],w).add(r),w)}function x(e,t){return"string"===t?k(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.m(e)),Object(r.c)().getBool("DEBUG")&&a.h(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return Object(r.c)().platform.now()}function O(e,t){return Object(r.c)().platform.fetch(e,t)}function k(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.decode(e,t)}},"6J+n":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({argMax_:function(e,t=0){const n=Object(s.a)(e,"x","argMax");return r.a.runKernel(a.h,{x:n},{axis:t})}})},"6vQL":function(e,t,n){"use strict";n.d(t,"a",function(){return h});var r=n("o/e8"),a=n("atXS"),s=n("l0gX"),i=n("OygE"),o=n("uBja"),u=n("n+ZZ"),c=n("VO80"),l=n("NclT"),d=n("dYAU");const h=Object(c.b)({pool_:function(e,t,n,c,h,p,f){null==h&&(h=[1,1]),null==p&&(p=1),0===c&&(c="valid");const m=Object(r.a)(e,"x","maxPool");let b=m,g=!1;3===m.rank&&(g=!0,b=Object(l.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),a.b(o.i(p,h),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`);const y=o.f(b.shape,t,p,h,c),x=[y.dilationHeight,y.dilationWidth];let v;v="same"===c?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}([y.filterHeight,y.filterWidth],x):[[0,0],[0,0]];const w=1===x[0]&&1===x[1],[O,k]=function(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([y.inHeight,y.inWidth],x,v),S=w?c:"valid",I=w?b:Object(d.a)(b,x,O),N=("avg"===n?()=>Object(s.a)(I,t,p,S,f):()=>Object(u.a)(I,t,p,S,f))(),T=w?N:Object(i.a)(N,x,k);return g?Object(l.a)(T,[T.shape[1],T.shape[2],T.shape[3]]):T}})},"7/dO":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cos_:function(e){const t=Object(s.a)(e,"x","cos","float32");return r.a.runKernel(a.J,{x:t})}})},"74aC":function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n){const a=(t-e)/(n-1),s=r.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let r=1;r<s.length;r++)s[r]=s[r-1]+a;return s}},"7n2I":function(e,t,n){"use strict";n.d(t,"a",function(){return It});var r=n("+hG3");const a={},s={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(e,t){if(!(e in a)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete a[e]},!1),1===e?n.getContext("webgl",s)||n.getContext("experimental-webgl",s):n.getContext("webgl2",s)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;a[e]=n}const n=a[e];return null==n||n.isContextLost()?(delete a[e],i(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),a[e])}var o,u,c;function l(e,t){return[t,e]}function d(e){const t=r.util.sizeFromShape(e),n=Math.ceil(t/4);return r.util.sizeToSquarishShape(n)}function h(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function p(e,t){const n=e;let a,s,i,o,u,c,l,d,h,p;return 2===Object(r.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,u=n.RED,l=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,c=n.RGBA8):(a=e.RGBA,s=e.RGBA,i=e.RGBA,o=n.RGBA,u=e.RGBA,l=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,c=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function f(e,t){const n=t();return Object(r.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function m(e){return!!(Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function b(e,t){return S(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(o||(o={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(u||(u={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));const g=/ERROR: [0-9]+:([0-9]+):/g;function y(e,t){const n=g.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],s=e.split("\n"),i=s.length.toString().length+2,o=s.map((e,t)=>r.util.rightPad((t+1).toString(),i)+e);let u=0;for(let r=0;r<o.length;r++)u=Math.max(o[r].length,u);const c=o.slice(0,a-1),l=o.slice(a-1,a),d=o.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.util.rightPad(l[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function x(e,t){if(f(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function v(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(f(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),f(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),f(e,()=>e.enableVertexAttribArray(o)),!0)}function w(e,t,n){f(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),f(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function O(e,t){f(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),f(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function k(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function S(e,t,n){const r=f(e,()=>t());if(null==r)throw new Error(n);return r}function I(e,t=2){return r.util.sizeFromShape(e.slice(0,e.length-t))}function N(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function T(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[I(e),...N(e)]),t}function C(e){return e%2==0}function j(e,t){if(e=e.slice(-2),t=t.slice(-2),r.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(C(n)&&C(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&C(e[0])&&C(t[0])}let E,A;function _(e,t){return null!=e.getExtension(t)}function $(e){try{if(null!=i(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function R(e){const t=p(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function F(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.util.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const D=Object(r.env)();function M(){let e,t,n,a,s,i,o,u,c,l;return 2===Object(r.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",s="texture",i="outputColor",o="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",s="texture2D",i="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}function z(e,t,n="index"){const a=r.util.computeStrides(t);return a.map((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`).join("")}function L(e,t,n="index"){const a=r.util.computeStrides(t);return a.map((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`).join("")}function P(e){const t=r.util.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}D.registerFlag("HAS_WEBGL",()=>D.getNumber("WEBGL_VERSION")>0),D.registerFlag("WEBGL_VERSION",()=>$(2)?2:$(1)?1:0),D.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),D.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===D.get("WEBGL_VERSION")),D.registerFlag("WEBGL_CPU_FORWARD",()=>!0),D.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),D.registerFlag("WEBGL_PACK",()=>D.getBool("HAS_WEBGL")),D.registerFlag("WEBGL_PACK_NORMALIZATION",()=>D.getBool("WEBGL_PACK")),D.registerFlag("WEBGL_PACK_CLIP",()=>D.getBool("WEBGL_PACK")),D.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>D.getBool("WEBGL_PACK")),D.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>D.getBool("WEBGL_PACK")),D.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>D.getBool("WEBGL_PACK")),D.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>D.getBool("WEBGL_PACK")),D.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>D.getBool("WEBGL_PACK")),D.registerFlag("WEBGL_PACK_REDUCE",()=>D.getBool("WEBGL_PACK")),D.registerFlag("WEBGL_LAZILY_UNPACK",()=>D.getBool("WEBGL_PACK")),D.registerFlag("WEBGL_CONV_IM2COL",()=>D.getBool("WEBGL_PACK")),D.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==E){const t=i(e);E=t.getParameter(t.MAX_TEXTURE_SIZE)}return E}(D.getNumber("WEBGL_VERSION"))),D.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==A){const t=i(e);A=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,A)}(D.getNumber("WEBGL_VERSION"))),D.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=D.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=i(e);return t=_(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:_(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),D.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>D.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.device_util.isMobile()),D.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=i(e);if(1===e){if(!_(t,"OES_texture_float"))return!1}else if(!_(t,"EXT_color_buffer_float"))return!1;return R(t)}(D.getNumber("WEBGL_VERSION"))),D.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!D.getBool("WEBGL_FORCE_F16_TEXTURES")&&D.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),D.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(e){if(0===e)return!1;const t=i(e);if(1!==e){if(_(t,"EXT_color_buffer_float"))return R(t);const e="EXT_color_buffer_half_float";if(_(t,e)){const n=t.getExtension(e);return function(e,t){const n=p(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!_(t,"OES_texture_float")&&!!_(t,"WEBGL_color_buffer_float")&&R(t)}(D.getNumber("WEBGL_VERSION"))),D.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=D.getNumber("WEBGL_VERSION"))&&null!=i(e).fenceSync;var e}),D.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>D.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),D.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),D.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>r.device_util.isMobile()?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),D.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),D.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),D.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),D.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);const B="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:V}=r.backend_util;function W(e,t,n){const a=[];if(e.forEach(e=>{const t=r.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=Q(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});const s=a.join("\n"),i=e.map(e=>function(e,t,n=!1,a){let s="";return s+=n?G(e,a):U(e,a),e.shapeInfo.logicalShape.length<=t.logicalShape.length&&(s+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=V(e.shapeInfo.logicalShape,t.logicalShape),c=J(o),l=o-i;let d;const h=["x","y","z","w","u","v"];d=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map(e=>`coords.${h[e+l]} = 0;`).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${h[t+l]}`).join(", ");let f="return outputValue;";const m=1===r.util.sizeFromShape(e.shapeInfo.logicalShape),b=1===r.util.sizeFromShape(t.logicalShape);if(1!==i||m||b){if(m&&!b)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=i-2,t=i-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${a}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===o&&null==e.shapeInfo.flatOffset&&r.util.arraysEqual(e.shapeInfo.texShape,t.texShape))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=J(o),c=V(e.shapeInfo.logicalShape,t.logicalShape),l=o-i;let d;const h=["x","y","z","w","u","v"];d=0===i?"":o<2&&c.length>=1?"coords = 0;":c.map(e=>`coords.${h[e+l]} = 0;`).join("\n");let p="";return p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${h[t+l]}`).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${a}(${p});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),o=t.texShape,u=M(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let l,d,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${H}\n    ${K}\n    ${q}\n  `}(u);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let c=2;c<e.length-1;c++)i*=e[e.length-c-1],o=`\n      int b${c} = index / ${i};\n      index -= b${c} * ${i};\n    `+o,u=`b${c}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return r.util.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${L(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=z(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${L(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=z(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=z(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=z(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(h+=X),[h,c,d,s,l,i,n.userCode].join("\n")}function U(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Z(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Y(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Z(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape;if(null!=i&&r.util.arraysEqual(n,i))return t?`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${i[0]}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const{newShape:o,keptDims:u}=r.util.squeezeShape(n);if(o.length<n.length){const n=["row","col"];return`\n      ${U(ee(e,o),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${te(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Y(e)}\n      }\n    `;const c=i[0],l=i[1],d=Z(a);return 1===l?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[1]*n[2],o=n[2],{newShape:u,keptDims:c}=r.util.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth"];return`\n        ${U(ee(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${te(n,c)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${Y(e)}\n      }\n    `;const l=e.shapeInfo.texShape,d=l[0],h=l[1],p=e.shapeInfo.flatOffset;if(h===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(h===o&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const f=Z(a);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * ${i} + col * ${o} + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[3],o=n[2]*i,u=n[1]*o,{newShape:c,keptDims:l}=r.util.squeezeShape(n);if(c.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${U(ee(e,c),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${te(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${o}, ${i}, 1)));\n        ${Y(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1],m=`int stride2 = ${a}Shape[3];`,b=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(f===u&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${b}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(f===i&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const y=Z(a);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${b}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${f}, index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,o=t[2]*i,u=t[1]*o,{newShape:c,keptDims:l}=r.util.squeezeShape(t);if(c.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${U(ee(e,c))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${te(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${Y(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];return f===u&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===s&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${Z(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=r.util.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${U(ee(e,s))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${te(t,i)});\n      }\n    `}const o=t[5],u=t[4]*o,c=t[3]*u,l=t[2]*c,d=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${l}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${Y(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];return m===d&&null==h?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:m===o&&null==h?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${l} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${Z(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function G(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${M().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=M();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape,o=i[0],u=i[1],c=M();if(null!=i&&r.util.arraysEqual(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${c.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${o}.0);\n\n        return ${c.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${c.texture2D}(${a}, uv);\n    }\n  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${c.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${G(ee(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${te(s,r)});\n        }\n      `}const o=M();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],c=i[1],l=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${c}, ${l*Math.ceil(n[1]/2)}, ${l}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=M();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=u[0],l=u[1],d=Math.ceil(s[i-1]/2);let h=d*Math.ceil(s[i-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,h*=s[i-m-1],f=`b${m} * ${h} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const H="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",K="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",q="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",X="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Z(e){return`offset${e}`}function Y(e){const t=e.name,n=r.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function J(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Q(e,t,n){const{newShape:a,keptDims:s}=r.util.squeezeShape(t),i=t.length,o=e&&3===i&&1===t[0],u=o?t.slice(1):a,c=!e&&i>1&&!r.util.arraysEqual(t,n)&&a.length<i||o;return{useSqueezeShape:c,uniformShape:c?u:t,keptDims:s}}function ee(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function te(e,t){return t.map(t=>e[t]).join(", ")}function ne(e,t,n){const a={},s={},i={},o=[];let u,c,l,d=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===Object(r.env)().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let r=0;r<t.variableNames.length;r++){const o=t.variableNames[r];a[o]=e.getUniformLocation(n,o,p),a[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,p),t.enableShapeUniforms&&(s[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,p),i[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,p))}return t.enableShapeUniforms&&(u=e.getUniformLocation(n,"outShape",p),l=e.getUniformLocation(n,"outShapeStrides",p),c=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach((t,r)=>{o[r]=e.getUniformLocation(n,t.name,p)}),{uniformLocations:a,customUniformLocations:o,infLoc:d,nanLoc:h,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:u,outShapeStridesLocation:l,outTexShapeLocation:c}}function re(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const a=e.logicalShape,s=t[n],i=s.shape;if(!r.util.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!r.util.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}function ae(e){return Object(r.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class se{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=o.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=M();this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?L(["r","c","d"],e):z(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class ie{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=o.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=M();this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?L(["r","c","d"],e):z(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class oe{constructor(e){this.variableNames=["A"],this.outTexUsage=u.DOWNLOAD;const t=M();this.outputShape=e,this.userCode=`\n      ${B}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ue{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=u.DOWNLOAD;const t=M();this.outputShape=e,this.userCode=`\n      ${B}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class ce{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=M();this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":P(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class le{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=M();this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const a=2*s+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":P(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function de(e,t,n,a,s,i){!function(e,t){const n=Object(r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return S(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return f(e,()=>e.bindTexture(u,o)),f(e,()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),f(e,()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),f(e,()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST)),f(e,()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===Object(r.env)().getNumber("WEBGL_VERSION")?f(e,()=>e.texImage2D(u,0,a,t,n,0,s,i,null)):f(e,()=>e.texStorage2D(u,1,a,t,n)),f(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:o,texShape:[n,t]}}function he(e){return e.internalFormatFloat}function pe(e){return e.internalFormatHalfFloat}function fe(e){return e.downloadTextureFormat}function me(e){return e.internalFormatPackedFloat}function be(e){return e.internalFormatPackedHalfFloat}class ge{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(r.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){a[e]=t}(t,e)):this.gl=i(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Object(r.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_half_float";if(this.textureFloatExtension=b(this.gl,"OES_texture_float"),_(this.gl,e))this.textureHalfFloatExtension=b(this.gl,e);else if(Object(r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),_(this.gl,s))this.colorBufferHalfFloatExtension=b(this.gl,s);else if(Object(r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",_(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!_(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=S(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return f(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),f(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=S(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return f(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),f(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return S(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=p(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(r.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;f(e,()=>e.finish()),f(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),f(e,()=>e.deleteFramebuffer(this.framebuffer)),f(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),f(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),f(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=l(t,n);return de(e,a,s,he(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=l(t,n);return de(e,a,s,pe(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=l(t,n);return de(e,a,s,fe(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){f(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===Object(r.env)().getNumber("WEBGL_VERSION")?f(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):f(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===Object(r.env)().getNumber("WEBGL_VERSION")?f(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):f(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),f(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,s,i){let o,u,c;f(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(o=new Uint8Array(n*a*4),u=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*a*4),u=e.FLOAT,c=i.internalFormatPackedFloat),o.set(s),2===Object(r.env)().getNumber("WEBGL_VERSION")?f(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,u,o)):f(e,()=>e.texImage2D(e.TEXTURE_2D,0,c,n,a,0,e.RGBA,u,o)),f(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=h(t,n);return de(e,a,s,be(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=h(t,n);return de(e,a,s,me(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(O(this.gl,this.framebuffer),this.outputTexture=null),f(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[a,s]=l(t,n),i=new Uint8Array(t*n*4);return f(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i,o){const u=e,c=new Float32Array(function(e,t){const[n,r]=h(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}(this.gl,e,0,0,0,a,s)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();f(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const s=16*t*n;return f(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),f(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),f(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(r.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return f(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=M();return function(e,t){const n=S(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(f(e,()=>e.shaderSource(n,t)),f(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return S(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return f(t,()=>t.attachShader(n,this.vertexShader)),f(t,()=>t.attachShader(n,e)),function(e,t){if(f(e,()=>e.linkProgram(t)),!Object(r.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&x(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return f(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),v(e,t,"clipSpacePos",n,3,20,0)&&v(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&f(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&x(this.gl,this.program),f(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return S(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),f(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){f(e,()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),f(e,()=>e.activeTexture(e.TEXTURE0+n)),f(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),f(e,()=>e.uniform1i(n,r))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=h(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&x(this.gl,this.program),k(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),f(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),f(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=b(this.gl,2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),w(this.gl,e,this.framebuffer),this.debug&&k(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(w(this.gl,this.outputTexture,this.framebuffer),this.debug&&k(this.gl)):O(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;w(r,e,this.framebuffer),this.debug&&k(r),this.outputTexture=e,f(r,()=>r.viewport(0,0,t,n)),f(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),f(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var ye=n("q5jb");const{addImpl:xe,bincountImpl:ve,bincountReduceImpl:we,ceilImpl:Oe,concatImpl:ke,equalImpl:Se,expImpl:Ie,expm1Impl:Ne,floorImpl:Te,gatherNdImpl:Ce,gatherV2Impl:je,greaterImpl:Ee,greaterEqualImpl:Ae,lessImpl:_e,lessEqualImpl:$e,linSpaceImpl:Re,logImpl:Fe,maxImpl:De,maximumImpl:Me,minimumImpl:ze,multiplyImpl:Le,negImpl:Pe,notEqualImpl:Be,prodImpl:Ve,rangeImpl:We,rsqrtImpl:Ue,scatterImpl:Ge,sigmoidImpl:He,simpleAbsImpl:Ke,sliceImpl:qe,sparseFillEmptyRowsImpl:Xe,sparseReshapeImpl:Ze,sparseSegmentReductionImpl:Ye,sqrtImpl:Je,stridedSliceImpl:Qe,stringNGramsImpl:et,stringSplitImpl:tt,stringToHashBucketFastImpl:nt,subImpl:rt,tileImpl:at,topKImpl:st,transposeImpl:it,uniqueImpl:ot}=ye;function ut(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function ct(e,t){return 1===t?[e]:ut(e,t)}class lt{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ae(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=ct("rc",this.rank),t=J(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2);return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class dt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2==1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map(e=>`${t}[${e}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}(e.map((e,t)=>t),t);return r.map((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`).join("")}(["r","c","d"],"inputShape"):z(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":P(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class ht{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=ft(t,n),a=mt(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=pt(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===c.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===c.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===c.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const s=ft(n,a),i=mt(t,s,a);i in this.freeTextures||(this.freeTextures[i]=[]);const o=pt(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,a),u=Object(r.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[i],l=c.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function pt(e,t,n,r,a){const s=function(e,t){switch(e){case c.PACKED_2X2_FLOAT32:return me(t);case c.PACKED_2X2_FLOAT16:return be(t);case c.UNPACKED_FLOAT32:return he(t);case c.UNPACKED_FLOAT16:return pe(t);case c.PACKED_4X1_UNSIGNED_BYTE:return fe(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=h(e[0],e[1]);i=t*n}else{const[t,n]=l(e[0],e[1]);i=t*n}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s)}function ft(e,t){if(e===u.UPLOAD)return c.PACKED_2X2_FLOAT32;if(e===u.RENDER||null==e)return function(e){return Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:e?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(t);if(e===u.DOWNLOAD||e===u.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function mt(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class bt{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const gt="return abs(x);",yt="return x;";class xt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class vt{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length);const t=e.length,n=ct("rc",t),r=J(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const wt=r.kernel_impls.whereImpl,Ot={},kt=Object(r.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class St extends r.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(r.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof ge)t=e;else{const n=i(Object(r.env)().getNumber("WEBGL_VERSION"),e);t=new ge(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=i(Object(r.env)().getNumber("WEBGL_VERSION"));t=new ge(e),this.binaryCache=((n=Object(r.env)().getNumber("WEBGL_VERSION"))in Ot||(Ot[n]={}),Ot[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ht(this.gpgpu),this.numMBBeforeWarning=null==Object(r.env)().global.screen?1024:Object(r.env)().global.screen.height*Object(r.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.DataStorage(this,Object(r.engine)())}nextDataId(){return St.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(r.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(r.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:u.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,a,s){if(Object(r.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:u.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:s,slice:i,shape:o,isPacked:u}=t;if(null!=i){let t;t=u?new xt(o,yt):new bt(o,yt);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let l,d;if(c&&(l=r.util.now()),"complex64"===a){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=r.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=r.util.now()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:a,slice:s,dtype:i,complexTensorInfos:o,isPacked:u}=t;if(null!=s){let t;t=u?new xt(a,yt):new bt(a,yt);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Object(r.env)().getBool("DEBUG")&&!Object(r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(r.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,h=null;if("complex64"!==i&&Object(r.env)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);h=this.gpgpu.createBufferFromTexture(t.texture.texture,...d(a))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=r.backend_util.mergeRealAndImagArrays(e[0],e[1])}else if(null==h)l=this.getValuesFromTexture(e);else{const e=r.util.sizeFromShape(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=h){const e=this.gpgpu.gl;f(e,()=>e.deleteBuffer(h))}const p=this.convertAndCacheOnCPU(e,l),m=this.pendingRead.get(e);return this.pendingRead.delete(e),m.forEach(e=>e(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(r.engine)().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){const n=this.texData.get(e),{values:a,shape:s,slice:i,dtype:o,isPacked:u,texture:c}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=u?new xt(s,yt):new bt(s,yt);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:o}],o),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),d=Object(r.engine)().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>r.util.decodeString(e));return Object(r.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!m(n)){if(Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),s=r.util.sizeFromShape(t);if(Object(r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...d(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const i=Object(r.env)().getBool("WEBGL_PACK")&&!0===a,o=i?T(t):t,u=i?new ue(o):new oe(o),c=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=r.util.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=r.util.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=r.util.sum(e),o.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.util.now(),endMs:null}}endTimer(e){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.util.now(),e)}async getQueryTime(e){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=kt){return Object(r.env)().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&r.util.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){r.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return wt(e.shape,t)}packedUnaryOp(e,t,n){const a=new xt(e.shape,t),s=this.compileAndRun(a,[e],n);return Object(r.engine)().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Ke(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,gt,e.dtype);const t=new bt(e.shape,gt),n=this.compileAndRun(t,[e]);return Object(r.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map(e=>r.util.encodeString(e));a=this.write(s,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return Object(r.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new vt(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new lt(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[I(e.shape),...N(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[I(t),...N(t)],s=new dt(a,n),i=this.runWebGLProgram(s,[r],e.dtype,[n],!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:s,dtype:i}=n;if(null!=t){const e=r.util.sizeFromShape(s);r.util.assert(e<=t[0]*t[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=T(s);let u;u=a?new ie(o):new se(o);const c=[null!=t?t:d(o)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(u,[{shape:o,dtype:i,dataId:e}],i,c,!0,t).dataId}}runWebGLProgram(e,t,n,a,s=!1,i){const u=this.makeTensorInfo(e.outputShape,n),c=this.texData.get(u.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===o.DENSE){const t=null!=i?i:d(e.outputShape);c.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(c.usage=e.outTexUsage),0===r.util.sizeFromShape(u.shape))return c.values=r.util.getTypedArrayFromDType(u.dtype,0),u;const l=[],h=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.util.sizeFromShape(t.shape)<=Object(r.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!j(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(u.dataId);const p={shape:u.shape,texData:c,isUniform:!1},m=function(e,t,n){let a="";t.concat(n).forEach(t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:o,uniformShape:u,keptDims:c}=Q(e.packedInputs,t.shape,i);let l="",d="",h="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=r.util.computeStrides(u);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${u[0]>1}_${u[1]>1}`;const p=t.shape.length,f=2===u.length&&r.util.arraysEqual(t.shape,i),m=1===r.util.sizeFromShape(t.shape),b=r.backend_util.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&r.util.arraysEqual(i,n.texData.texShape);a+=`${p}_${g}_${o?c:""}_${u.length}_${m}_${b}_${f}_${l}_${d}_${h}_${e.packedInputs||u.length>2?"":`${i[0]>1}_${i[1]>1}`}_${s}`}else a+=`${t.shape}_${t.isUniform?"uniform":t.texData.texShape}_${s}`});let s=e.constructor.name;return s+="_"+a+"_"+e.userCode+`${Object(r.env)().getNumber("WEBGL_VERSION")}`,s}(e,h,p),b=this.getAndSaveBinary(m,()=>function(e,t,n,a){const s=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=s.map(e=>e.shapeInfo),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},u=W(s,o,t),c=function(e,t){const n=S(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(f(e,()=>e.shaderSource(n,t)),f(e,()=>e.compileShader(n)),Object(r.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw y(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,u),l=e.createProgram(c);return Object(r.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:u,webGLProgram:l,inShapeInfos:i,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:c,source:u,webGLProgram:l,inShapeInfos:i,outShapeInfo:o},ne(e,t,l))}(this.gpgpu,e,h,p)),g=null!=this.activeTimers;let x;g&&(x=this.startTimer()),Object(r.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,s){t.program.enableShapeUniforms||(re(t.inShapeInfos,n),re([t.outShapeInfo],[a]));const i=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):e.setOutputMatrixTexture(i.texture,o[0],o[1]),e.setProgram(t.webGLProgram),1===Object(r.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,a)=>{const s=t.program.variableNames[a],i=t.uniformLocations[s],o=t.uniformLocations[`offset${s}`],u=t.inShapesLocations[`${s}Shape`],c=t.inTexShapesLocations[`${s}TexShape`];if(u){const{uniformShape:r}=Q(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(c&&e.gl.uniform2i(c,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(r.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,i,a)});const u=t.outShapeLocation;if(u)switch(a.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=r.util.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach((n,r)=>{const a=t.customUniformLocations[r],i=s[r];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}),e.executeProgram()}(this.gpgpu,b,h,p,a),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),g&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));const v=Object(r.env)().get("WEBGL_FLUSH_THRESHOLD");if(v>0){const e=r.util.now();e-this.lastGlFlushTime>v&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(r.env)().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&!1===s){const e=this.unpackTensor(u);return this.disposeIntermediateTensorInfo(u),e}return u}compileAndRun(e,t,n,r,a=!1){return this.runWebGLProgram(e,t,n=n||t[0].dtype,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Object(r.env)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(r.tidy)(()=>{if(!Object(r.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(r.env)().getBool("DEBUG");Object(r.env)().set("DEBUG",!1);const t=this.abs(Object(r.scalar)(1e-8)).dataSync()[0];if(Object(r.env)().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:s,texture:i,usage:o,isPacked:c}=t;if(null!=i)return;const l=null!=this.activeTimers;let d;l&&(d=r.util.now());let p=t.texShape;if(null==p&&(p=function(e,t=!1){let n=Object(r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?r.util.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=r.util.squeezeShape(e);e=t.newShape}let a=r.util.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=I(e);let n=2,s=2;return e.length&&([n,s]=N(e)),a=t*(n/2)*(s/2),r.util.sizeToSquarishShape(a).map(e=>2*e)}return r.util.sizeToSquarishShape(a)}(n,c),t.texShape=p),null!=s){const e=T(n);let i,o=p[1],f=p[0];const m=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!c&&m||([o,f]=h(p[0],p[1])),i=c?new le(e,m):new ce(e,m);const b=m?[f,o]:p,g=this.makeTensorInfo(b,a),y=this.texData.get(g.dataId);y.usage=m?u.PIXELS:u.UPLOAD,y.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),o,f,s);const x=this.runWebGLProgram(i,[g],a,[[f,o]],!0),v=this.texData.get(x.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,Object(r.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(g),l&&(this.uploadWaitMs+=r.util.now()-d)}else{const e=this.acquireTexture(p,o,a,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Object(r.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw y(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:c}=ne(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=u,e.outTexShapeLocation=c}}}St.nextDataId=0;const It="3.18.0";r.device_util.isBrowser()&&Object(r.registerBackend)("webgl",()=>new St,2);class Nt{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ae(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Tt{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=ae(s);let i="";if(a)if(0===s||1===r.util.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${J(s)} coords = getOutputCoords();\n        `,1===s)i+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=ct("coords",s);i+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function Ct(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const jt={kernelName:r.Identity,backendName:"webgl",kernelFunc:Ct};function Et(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Ct({inputs:{x:r},backend:n}),u=Ct({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const At={kernelName:r.Complex,backendName:"webgl",kernelFunc:Et},_t="return (a < 0.) ? b * a : a;",$t="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Rt={kernelName:r.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:i}=a,o=n.makeTensorInfo([],"float32",r.util.createScalarValue(i,"float32")),u=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Tt($t,s.shape,o.shape):new Nt(_t,s.shape,o.shape),c=n.runWebGLProgram(u,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),c}},Ft="return (a < 0.) ? b * a : a;",Dt="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Mt={kernelName:r.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:s}=t,i=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Tt(Dt,a.shape,s.shape):new Nt(Ft,a.shape,s.shape);return n.runWebGLProgram(i,[a,s],"float32")}};function zt({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:s,backend:i})=>{const{x:o}=s,u=i,c=a||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const e=u.texData.get(o.dataId),t=n(e.values,c);return u.makeTensorInfo(o.shape,c,t)}let l;return l=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new xt(o.shape,t):new bt(o.shape,e),u.runWebGLProgram(l,[o],c)}}function Lt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:i}){return({inputs:o,backend:u})=>{const{a:c,b:l}=o,d=u;if(a&&"complex64"===c.dtype){const t=d.texData.get(c.dataId),n=d.texData.get(l.dataId),[a,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,a]=t,s={dataId:n.dataId,dtype:n.dtype,shape:c.shape},i={dataId:a.dataId,dtype:a.dtype,shape:l.shape},o=new Nt(e,c.shape,l.shape);return d.runWebGLProgram(o,[s,i],Object(r.upcastType)(n.dtype,a.dtype))}),i=Et({inputs:{real:a,imag:s},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(s),i}const h=i||Object(r.upcastType)(c.dtype,l.dtype);if(("string"===c.dtype||"string"===l.dtype||d.shouldExecuteOnCPU([c,l]))&&null!=s){const e=d.texData.get(c.dataId).values,t=d.texData.get(l.dataId).values,n="string"===c.dtype?r.backend_util.fromUint8ToStringArray(e):e,a="string"===c.dtype?r.backend_util.fromUint8ToStringArray(t):t,[i,o]=s(c.shape,l.shape,n,a,h),u=d.makeTensorInfo(o,h);return d.texData.get(u.dataId).values=i,u}let p;return p=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Tt(t,c.shape,l.shape,n):new Nt(e,c.shape,l.shape),d.runWebGLProgram(p,[c,l],h)}}function Pt(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Dt:Ft;if("leakyrelu"===e)return t?$t:_t;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Bt{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ae(this.outputShape.length);const c=Math.ceil((r?e[1]:e[2])/2),l=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let g="rc.x",y="rc.x";e[0]<t[0]?g=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${g};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${l});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${p[0]});\n          result += (${h[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class Vt{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Wt="return a * b;";function Ut(e){const{inputs:t,backend:n}=e,{a:a,b:s}=t,i=r.backend_util.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),r=new Vt("return areal * breal - aimag * bimag;",a.shape,s.shape),i=new Vt("return areal * bimag + aimag * breal;",a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(r,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=Et({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([a,s])){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),[r,o]=Le(a.shape,s.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=r,u}let o;return o=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Tt(Wt,a.shape,s.shape):new Nt(Wt,a.shape,s.shape),n.runWebGLProgram(o,[a,s],i)}const Gt={kernelName:r.Multiply,backendName:"webgl",kernelFunc:Ut};function Ht(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:i}=a,o=n,u=r.util.sizeFromShape(s.shape),c=r.util.inferFromImplicitShape(i,u),l=r.util.sizeFromShape(c);r.util.assert(u===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${s.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`);const d=o.texData.get(s.dataId);return!d.isPacked||j(s.shape,c)||null!==d.texture&&j(d.shape,c)?(o.incRef(s.dataId),{dataId:s.dataId,shape:c,dtype:s.dtype}):function(e,t,n){const r=[I(e.shape),...N(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[I(t),...N(t)],i=new dt(s,r),o=n.runWebGLProgram(i,[a],e.dtype,[r],!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,c,o)}const Kt={kernelName:r.Reshape,backendName:"webgl",kernelFunc:Ht};class qt{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:i}=e;this.outputShape=[a,i];const o=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c=`sumValue += dot(values * ${r.util.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Xt{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function Zt(e,t,n,a){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=r.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let i=e;for(let r=0;r<s.length;r++){const{inSize:o,windowSize:u,outSize:c}=s[r];let l,d;l="mean"===n?0===r?new qt({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},o):new qt({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c}):new Xt({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},n),d=i,i=a.runWebGLProgram(l,[i],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return i}class Yt{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=J(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Jt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=J(this.rank),a=ut("rc",this.rank),s=new Array(this.rank);for(let c=0;c<t.length;c++)s[t[c]]=a[c];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Qt(e,t,n){const a=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Jt(e.shape,t):new Yt(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function en(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a;return function(e,t,n,a){const s=e.shape.length,i=r.util.parseAxisParam(t,e.shape);let o=i;const u=r.backend_util.getAxesPermutation(o,s),c=null!=u;let l=e;c&&(l=Qt(e,u,a),o=r.backend_util.getInnerMostAxes(o.length,s)),r.backend_util.assertAxesAreInnerMostDims("sum",o,s);const[d,h]=r.backend_util.computeOutAndReduceShapes(l.shape,o);let p=d;n&&(p=r.backend_util.expandShapeToKeepDim(d,i));const f=r.util.sizeFromShape(h),m=Ht({inputs:{x:l},attrs:{shape:[r.util.sizeFromShape(e.shape)/f,f]},backend:a}),b=Zt(m,Object(r.sumOutType)(e.dtype),"sum",a),g=Ht({inputs:{x:b},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(b),c&&a.disposeIntermediateTensorInfo(l),g}(s,i,o,n)}const tn={kernelName:r.Sum,backendName:"webgl",kernelFunc:en};function nn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=new Array(a.shape.length);for(let c=0;c<o.length;c++)o[c]=a.shape[s[c]];let u;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId),t=it(e.values,a.shape,a.dtype,s,o);u=i.makeTensorInfo(o,a.dtype),i.texData.get(u.dataId).values=t}else u=Qt(a,s,i);return u}const rn={kernelName:r.Transpose,backendName:"webgl",kernelFunc:nn};function an({a:e,b:t,transposeA:n,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:c=null}){const l=e.shape.length,d=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=a?t.shape[d-1]:t.shape[d-2],f=n?e.shape[l-1]:e.shape[l-2],m=a?t.shape[d-2]:t.shape[d-1],b=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=r.util.sizeFromShape(b),x=r.util.sizeFromShape(g),v=r.broadcast_util.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);r.util.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`);const w=n?[y,h,f]:[y,f,h],O=a?[x,m,p]:[x,p,m],k=Ht({inputs:{x:e},backend:s,attrs:{shape:w}}),S=Ht({inputs:{x:t},backend:s,attrs:{shape:O}}),I=[k,S],N=Math.max(y,x),T=n?k.shape[1]:k.shape[2],C=null!=i,j=null!=o,E="leakyrelu"===c,A=null!=c?Pt(c,!0):null;let _;if((1===f||1===m)&&T>1e3&&!1===(C||j||E||null!=A)){let e=k,t=S;n&&(e=nn({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),a&&(t=nn({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const r=1===m;let i=e;1!==m&&(i=Ht({inputs:{x:e},backend:s,attrs:{shape:[N,T,1]}}),I.push(i));const o=1===m?2:1;let u=t;r&&(u=Ht({inputs:{x:t},backend:s,attrs:{shape:[N,1,T]}}),I.push(u));const c=Ut({inputs:{a:i,b:u},backend:s});_=en({inputs:{x:c},backend:s,attrs:{axis:o,keepDims:!0}}),I.push(c)}else{const c=Object(r.upcastType)(e.dtype,t.dtype),l=new Bt(w,O,[N,f,m],n,a,C,A,j,E),d=[k,S];if(null!=i&&d.push(i),j&&d.push(o),E){const e=s.makeTensorInfo([],"float32",r.util.createScalarValue(u,"float32"));d.push(e),I.push(e)}_=s.runWebGLProgram(l,d,c)}const $=Ht({inputs:{x:_},backend:s,attrs:{shape:v}});I.push(_);for(const r of I)s.disposeIntermediateTensorInfo(r);return $}const sn={kernelName:r._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return an({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}},on="return abs(x);",un={kernelName:r.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=Ke(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let s;return s=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new xt(a.shape,on):new bt(a.shape,on),n.runWebGLProgram(s,[a],a.dtype)}},cn=zt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ln={kernelName:r.Acos,backendName:"webgl",kernelFunc:cn},dn=zt({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),hn={kernelName:r.Acosh,backendName:"webgl",kernelFunc:dn},pn="return a + b;",fn=Lt({opSnippet:pn,packedOpSnippet:pn,supportsComplex:!0,cpuKernelImpl:xe}),mn={kernelName:r.Add,backendName:"webgl",kernelFunc:fn};class bn{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class gn{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const yn={kernelName:r.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,s=n;if(1===s.length)return Ct({inputs:{x:s[0]},backend:a});if(s.length>Object(r.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:a}),r=e({inputs:s.slice(t),backend:a});return e({inputs:[n,r],backend:a})}const i=s.map(e=>e.dtype).reduce((e,t)=>Object(r.upcastType)(e,t)),o=s.map(e=>e.shape),u=Object(r.env)().getBool("WEBGL_PACK")?new gn(s[0].shape,o):new bn(s[0].shape,o);return a.runWebGLProgram(u,s,i)}},xn={kernelName:r.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let h=s;null!=d&&(h=nn({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,u)),r.backend_util.assertAxesAreInnerMostDims("all",l,u);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=Ht({inputs:{x:h},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=Zt(m,m.dtype,"all",n);let g;return g=Ht(o?{inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}}:{inputs:{x:b},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}},vn={kernelName:r.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let h=s;null!=d&&(h=nn({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,u)),r.backend_util.assertAxesAreInnerMostDims("any",l,u);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=Ht({inputs:{x:h},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=Zt(m,m.dtype,"any",n);let g;return g=Ht(o?{inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}}:{inputs:{x:b},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}};class wn{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class On{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.util.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=J(o),c=ct("coords",o);let l,d;if(1===s){d=o+1;const e=J(d);l=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[o-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[o-2]};`}else d=o,l=`\n        ${u} sourceLocR = coords;\n        ++${c[o-1]};\n        ${u} sourceLocG = coords;\n        ++${c[o-2]};\n        ${u} sourceLocA = coords;\n        --${c[o-1]};\n        ${u} sourceLocB = coords;\n        --${c[o-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map(e=>"int "+e),m=ct("sourceLocR",d-1).concat("inIdx.r"),b=ct("sourceLocG",d-1).concat("inIdx.g"),g=ct("sourceLocB",d-1).concat("inIdx.b"),y=ct("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${g.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,O=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${O}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function kn(e,t,n,a=null){let s=t.shape[0],i=t.shape[1];null!=a&&(s=a.shape[0],i=a.shape[1]);const o=r.backend_util.computeOptimalWindowSize(i),u={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},c=new wn(u,n,null==a),l=[t];null!=a&&l.push(a);const d=e.runWebGLProgram(c,l,"int32");if(1===d.shape[1])return d;const h=kn(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function Sn(e,t,n,a=null){const s=null!=a?a.shape:t.shape,i=r.backend_util.computeOptimalWindowSize(s[s.length-1]),o=new On(s,i,n,null==a),u=e.runWebGLProgram(o,null==a?[t]:[t,a],"int32");if(u.shape.length===t.shape.length){const r=Sn(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function In(e,t,n,a){const s=[n];if(r.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),s,t.shape.length),!Object(r.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let o=t;null!==i&&i.isPacked&&(o=e.unpackTensor(t),n.push(o));const[u,c]=r.backend_util.computeOutAndReduceShapes(o.shape,s),l=r.util.sizeFromShape(c),d=Ht({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(d);const h=kn(e,d,a);n.push(h);const p=Ht({inputs:{x:h},backend:e,attrs:{shape:u}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),p}return Sn(e,t,a)}const Nn={kernelName:r.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;let o=r.util.parseAxisParam(i,s.shape);const u=r.backend_util.getAxesPermutation(o,s.shape.length);let c=s;const l=[];null!=u&&(c=nn({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),o=r.backend_util.getInnerMostAxes(o.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],c.shape.length);const d=In(n,c,o[0],"max");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},Tn={kernelName:r.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;let o=r.util.parseAxisParam(i,s.shape);const u=r.backend_util.getAxesPermutation(o,s.shape.length);let c=s;const l=[];null!=u&&(c=nn({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),o=r.backend_util.getInnerMostAxes(o.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],c.shape.length);const d=In(n,c,o[0],"min");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},Cn=zt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),jn={kernelName:r.Asin,backendName:"webgl",kernelFunc:Cn},En=zt({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),An={kernelName:r.Asinh,backendName:"webgl",kernelFunc:En},_n=zt({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),$n={kernelName:r.Atan,backendName:"webgl",kernelFunc:_n},Rn=Lt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Fn={kernelName:r.Atan2,backendName:"webgl",kernelFunc:Rn},Dn=zt({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Mn={kernelName:r.Atanh,backendName:"webgl",kernelFunc:Dn};class zn{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t;let m="0.0";if(f||(m="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const g=4*Math.floor(s/4),y=s%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${g}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${g};\n          if (${1===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Ln{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,b=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),O=s%4,k=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const Pn={kernelName:r.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;F(s,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=r.backend_util.computePool2DInfo(s.shape,i,o,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return Ct({inputs:{x:s},backend:n});const d=new zn(l,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}},Bn={kernelName:r.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c,dataFormat:l}=a,d=r.backend_util.computePool3DInfo(s.shape,i,o,[1,1,1],u,c,l),h=new Ln(d,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class Vn{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Wn{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Un={kernelName:r.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,o=i,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=a,h=r.backend_util.computePool3DInfo(o.shape,u,c,[1,1,1],l,d),p=new Wn(h);return n.runWebGLProgram(p,[s],o.dtype)}},Gn={kernelName:r.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,o=i;F([s,i],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=a,d=r.backend_util.computePool2DInfo(o.shape,u,c,1,l),h=new Vn(d);return n.runWebGLProgram(h,[s],o.dtype)}},Hn={kernelName:r.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return an({a:a,b:s,transposeA:i,transposeB:o,backend:n})}};class Kn{constructor(e,t,n,a,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class qn{constructor(e,t,n,a,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Xn={kernelName:r.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:s,variance:i,offset:o,scale:u}=e;r.util.assert(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.util.assert(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.util.assert(null==u||s.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[a,s,i];let d=null;null!=o&&(d=o.shape,l.push(o));let h=null;null!=u&&(h=u.shape,l.push(u));const p=Object(r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new qn(a.shape,s.shape,i.shape,d,h,c):new Kn(a.shape,s.shape,i.shape,d,h,c);return t.runWebGLProgram(p,l,l[0].dtype)}};class Zn{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=J(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Yn.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${Yn[t]} = start[${t}] + coords.${Yn[t]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Yn=["x","y","z","w","u","v"];class Jn{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=J(this.rank),n=ct("coords",this.rank),r=ct("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Qn(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,size:o}=a,[u,c]=r.slice_util.parseSliceParams(s,i,o);if(r.slice_util.assertParamsValid(s,u,c),0===r.util.sizeFromShape(c))return n.makeTensorInfo(c,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=qe(e.values,u,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),d=r.slice_util.isSliceContinous(s.shape,u,c);if(l||!d){const e=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Jn(c):new Zn(c);return n.runWebGLProgram(e,[s],s.dtype,[u])}return n.uploadToGPU(s.dataId),function(e,t,n,a){const s=a.texData.get(e.dataId),i=a.makeTensorInfo(n,e.dtype),o=a.texData.get(i.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=r.slice_util.computeFlatOffset(t,r.util.computeStrides(e.shape));s.slice&&(u+=s.slice.flatOffset),o.slice={flatOffset:u,origDataId:s.slice&&s.slice.origDataId||e.dataId};const c=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,c+1),i}(s,u,c,n)}const er={kernelName:r.Slice,backendName:"webgl",kernelFunc:Qn},tr={kernelName:r.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,crops:o}=a;r.util.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const u=i.reduce((e,t)=>e*t),c=r.backend_util.getReshaped(s.shape,i,u),l=r.backend_util.getPermuted(c.length,i.length),d=r.backend_util.getReshapedPermuted(s.shape,i,u),h=r.backend_util.getSliceBeginCoords(o,i.length),p=r.backend_util.getSliceSize(d,o,i.length),f=[],m=Ht({inputs:{x:s},backend:n,attrs:{shape:c}}),b=nn({inputs:{x:m},backend:n,attrs:{perm:l}}),g=Ht({inputs:{x:b},backend:n,attrs:{shape:d}}),y=Qn({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(b),f.push(g),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},nr={kernelName:r.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),c=ve(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}},rr={kernelName:r.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,i=n.readSync(a.dataId),o=n.readSync(s.dataId),u=r.backend_util.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},ar=Lt({opSnippet:"return float(a != b);",cpuKernelImpl:Be,dtype:"bool"}),sr={kernelName:r.NotEqual,backendName:"webgl",kernelFunc:ar};function ir(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ct({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const or={kernelName:r.Real,backendName:"webgl",kernelFunc:ir},ur={kernelName:r.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:s}=t,{x:i}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return Ct({inputs:{x:i},backend:a});const t=r.zeros(i.shape),n=e({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),s=Et({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const t=ir({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!r.util.hasEncodingLoss(i.dtype,o)){const e=Ct({inputs:{x:i},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new bt(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",r.util.getTypedArrayFromDType("bool",1)),t=ar({inputs:{a:i,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},cr="return ceil(x);",lr=zt({opSnippet:cr,packedOpSnippet:cr,cpuKernelImpl:Oe}),dr={kernelName:r.Ceil,backendName:"webgl",kernelFunc:lr};class hr{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class pr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const fr={kernelName:r.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{clipValueMin:i,clipValueMax:o}=a;let u;return u=Object(r.env)().getBool("WEBGL_PACK_CLIP")?new pr(s.shape):new hr(s.shape),n.runWebGLProgram(u,[s],s.dtype,[[i],[o]])}};class mr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function br(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const gr={kernelName:r.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new mr(r.shape),i=[br(r,a.complexTensorInfos.real),br(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class yr{constructor(e){this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++)n.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${t[r-1]}));`);n.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class xr{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,s=J(a),i=ct("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((e,t)=>`T${t}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let r=1;r<u.length;r++)u[r]=u[r-1]+e[r][t];const c=o[t],l=o.slice(-2),d=o.join();let h=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let r=1;r<u.length;r++){const e=u[r-1];h+=`\n        if (${c} < ${u[r]}  && ${c} >= ${u[r-1]}) {\n          return getChannel(\n            getT${r}(${vr(o,c,e)}),\n            vec2(${vr(l,c,e)}));\n        }`}const p=u[u.length-1];h+=`\n        return getChannel(\n          getT${u.length}(${vr(o,c,p)}),\n          vec2(${vr(l,c,p)}));`,this.userCode=`\n      float getValue(${o.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[a-1]} = ${i[a-1]} + 1;\n        if (${i[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[a-2]} = ${i[a-2]} + 1;\n        if (${i[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[a-1]} = ${i[a-1]} - 1;\n        if (${i[a-2]} < ${n[a-2]} &&\n            ${i[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function vr(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function wr(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ct({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Or={kernelName:r.Imag,backendName:"webgl",kernelFunc:wr};function kr(e,t,n){const a=e[0].dtype;if("complex64"===a){const r=e.map(e=>ir({inputs:{input:e},backend:n})),a=e.map(e=>wr({inputs:{input:e},backend:n})),s=kr(r,t,n),i=kr(a,t,n),o=Et({inputs:{real:s,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===a&&(s=!0),s){const s=e.map(e=>{const a=r.util.sizeFromShape(e.shape.slice(t));return Ht({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})}),i=s.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),o=r.backend_util.computeOutShape(s.map(e=>e.shape),1),u=ke(i,o,a,1===s[0].shape[0]),c=r.backend_util.computeOutShape(e.map(e=>e.shape),t),l=n.makeTensorInfo(c,a,u);return s.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}if(e.length>Object(r.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=kr(e.slice(0,r),t,n),s=kr(e.slice(r),t,n),i=kr([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new xr(e.map(e=>e.shape),t);return n.runWebGLProgram(r,e,a)}const{tensors2D:i,outShape:o}=function(e,t,n){const a=r.backend_util.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>Ht({inputs:{x:e},attrs:{shape:[-1,r.util.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:a}}(e,t,n),u=new yr(i.map(e=>e.shape)),c=n.runWebGLProgram(u,i,a);i.forEach(e=>n.disposeIntermediateTensorInfo(e));const l=Ht({inputs:{x:c},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(c),l}function Sr(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,i=r.util.parseAxisParam(s,t[0].shape)[0],o=r.backend_util.computeOutShape(t.map(e=>e.shape),i);if(0===r.util.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter(e=>r.util.sizeFromShape(e.shape)>0);if(1===u.length)return Ct({inputs:{x:u[0]},backend:n});const c=u.map(e=>e.shape);return r.backend_util.assertParamsConsistent(c,i),kr(u,i,n)}const Ir={kernelName:r.Concat,backendName:"webgl",kernelFunc:Sr};class Nr{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class Tr{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Cr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length);const{dataFormat:n}=t,r=M(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let c=0;c<=1;c++)for(let e=0;e<=1;e++)u+=`\n          blockIndex = rc.y + ${e};\n          pos = rc.x + ${c};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*c+e}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*c+e}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function jr({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const c=e.shape,l=a.texData.get(e.dataId),d=n.inChannels,h=c[0]*c[1]*c[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let m;const b=[];if(null!=i&&!f&&3===i.shape.length){const e=nn({inputs:{x:i},backend:a,attrs:{perm:[1,2,0]}});b.push(e),i=e}if((1!==h&&1!==p||!(d>1e3))&&l.isPacked&&f&&null!=l.texture&&c[2]%2!=0&&r.util.arraysEqual(l.shape.slice(-3),c.slice(-3))){const d={dataId:e.dataId,shape:[1,c[0]*c[1]*(c[2]+1),n.inChannels],dtype:e.dtype},h=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,r.util.assert(j(l.shape,d.shape),()=>`packed reshape ${l.shape} to ${d.shape} isn't free`);const p=Ht({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(p);const f=an({a:d,b:p,backend:a,transposeA:!1,transposeB:!1,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),g=a.texData.get(f.dataId);r.util.assert(g.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=h,g.shape=n.outShape,m=Ct({inputs:{x:f},backend:a}),m.shape=n.outShape,b.push(f)}else{const r=f?e:nn({inputs:{x:e},backend:a,attrs:{perm:[0,2,3,1]}}),c=r.shape,l=Ht({inputs:{x:r},backend:a,attrs:{shape:[1,c[0]*c[1]*c[2],n.inChannels]}}),d=Ht({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=an({a:l,b:d,transposeA:!1,transposeB:!1,backend:a,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),p=Ht({inputs:{x:h},backend:a,attrs:{shape:[n.batchSize,n.outHeight,n.outWidth,n.outChannels]}});m=f?p:nn({inputs:{x:p},backend:a,attrs:{perm:[0,3,1,2]}}),f||(b.push(r),b.push(p)),b.push(l),b.push(d),b.push(h)}for(const r of b)a.disposeIntermediateTensorInfo(r);return m}function Er({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:c,filterHeight:l,inChannels:d,outWidth:h,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,b=c*l*d,g=p*h,y=[b,g],x=[];if(null!=i&&!m&&3===i.shape.length){const e=nn({inputs:{x:i},backend:a,attrs:{perm:[1,2,0]}});x.push(e),i=e}const v=Ht({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),w=Ht({inputs:{x:t},backend:a,attrs:{shape:[1,b,r.util.sizeFromShape(t.shape)/b]}});x.push(v),x.push(w);const O=new Cr(y,n),k=a.runWebGLProgram(O,[v],"float32",[v.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]]),S=Ht({inputs:{x:k},backend:a,attrs:{shape:[1,y[0],y[1]]}});x.push(k),x.push(S);const I=null!=s,N=null!=i,T="leakyrelu"===u,C=u?Pt(u,!0):null,j=new Bt(S.shape,w.shape,[1,g,n.outChannels],!0,!1,I,C,N,T),E=[S,w];if(s&&E.push(s),N&&E.push(i),T){const e=a.makeTensorInfo([],"float32",r.util.createScalarValue(o,"float32"));E.push(e),x.push(e)}const A=a.runWebGLProgram(j,E,"float32"),_=Ht({inputs:{x:A},backend:a,attrs:{shape:[1,p,h,n.outChannels]}}),$=m?_:nn({inputs:{x:_},backend:a,attrs:{perm:[0,3,1,2]}});m||x.push(_),x.push(A);for(const r of x)a.disposeIntermediateTensorInfo(r);return $}const Ar={kernelName:r.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=a,h=r.backend_util.convertConv2DDataFormat(c),p=r.backend_util.computeConv2DInfo(s.shape,i.shape,o,l,u,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Object(r.env)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])f=Er({x:s,filter:i,convInfo:p,backend:n});else{const e=new Nr(p);f=n.runWebGLProgram(e,[s,i],"float32")}else f=jr({x:s,filter:i,convInfo:p,backend:n});const m=Ht({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class _r{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===e.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $r{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Rr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Dr={kernelName:r.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:o,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=a,h=r.backend_util.convertConv2DDataFormat(c),p=r.backend_util.computeConv2DInfo(s.shape,d,o,1,u,l,!1,h),f=new _r(p);return n.runWebGLProgram(f,[s,i],"float32")}},Mr={kernelName:r.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{inputShape:o,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=a,h=r.backend_util.convertConv2DDataFormat(l),p=r.backend_util.computeConv2DInfo(o,i.shape,u,1,c,d,!1,h),f=new $r(p);return n.runWebGLProgram(f,[s,i],"float32")}},zr={kernelName:r.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:c}=a,l=r.backend_util.computeConv3DInfo(s.shape,i.shape,o,c,u),d=new Tr(l);return n.runWebGLProgram(d,[s,i],"float32")}},Lr={kernelName:r.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:o,pad:u,filterShape:c}=a,l=r.backend_util.computeConv3DInfo(s.shape,c,o,1,u),d=new Rr(l);return n.runWebGLProgram(d,[s,i],"float32")}},Pr={kernelName:r.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{pad:o,strides:u,inputShape:c}=a,l=r.backend_util.computeConv3DInfo(c,i.shape,u,1,o),d=new Fr(l);return n.runWebGLProgram(d,[s,i],"float32")}},Br=zt({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),Vr={kernelName:r.Cos,backendName:"webgl",kernelFunc:Br},Wr=zt({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Ur={kernelName:r.Cosh,backendName:"webgl",kernelFunc:Wr};class Gr{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,b,g]=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Hr={kernelName:r.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,l=new Gr(a.shape,s.shape,o,u,c);return n.runWebGLProgram(l,[a,s,i],"float32")}};var Kr;!function(e){e.Prod="*",e.Sum="+"}(Kr||(Kr={}));class qr{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,s=n?this.op===Kr.Prod?"1.0":"0.0":`getX(${Xr(a,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let o="",u="";n?(o=r?"end != "+(i-1):"end != 0",u=r?"end + 1":"end - 1"):(o=r?`end + pow2 < ${i}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${J(a)} coords = getOutputCoords();\n        int end = ${Zr(a,"coords",this.op)};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${u};\n          ${Zr(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Xr(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function Xr(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Zr(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Yr(e,t,n,a,s,i){const o=t.shape.length,u=r.backend_util.getAxesPermutation([a],o);let c=t;null!=u&&(c=nn({inputs:{x:t},backend:n,attrs:{perm:u}}));const l=r.backend_util.getInnerMostAxes(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);const d=c.shape[l];let h=Ct({inputs:{x:c},backend:n});for(let r=0;r<=Math.ceil(Math.log2(d))-1;r++){const t=new qr(e,c.shape,!1,i),a=h;h=n.runWebGLProgram(t,[h],h.dtype,[[r]]),n.disposeIntermediateTensorInfo(a)}if(s){const t=new qr(e,c.shape,s,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=u){const e=nn({inputs:{x:h},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),e}return h}const Jr={kernelName:r.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return Yr(Kr.Prod,a,n,s,i,o)}},Qr={kernelName:r.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return Yr(Kr.Sum,a,n,s,i,o)}},ea={kernelName:r.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=ve(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=we(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class ta{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const na={kernelName:r.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,c=("NHWC"===i?a.shape[2]:a.shape[3])*s,l=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d=new ta("NHWC"===i?[o,u,c,l]:[o,l,u,c],s,i);return n.runWebGLProgram(d,[a],a.dtype)}};class ra{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ae(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",c="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,c="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${l}\n        ${c}\n        setOutput(result);\n      }\n    `}}class aa{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ae(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let r=0;r<d;r++)p+=`\n          vec4 xTexelC${2*r};\n          int xTexelC${2*r}Ready;\n          vec4 xTexelC${2*r+1};\n          int xTexelC${2*r+1}Ready;\n          vec4 xC${r};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let r=0;r<d;r++)p+=`\n          xTexelC${2*r} = vec4(0.0);\n          xTexelC${2*r}Ready = 0;\n          xTexelC${2*r+1} = vec4(0.0);\n          xTexelC${2*r+1}Ready = 0;\n          xC${r} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(p+=`\n          xC = xCCorner + ${e*c};\n          `,1===u){if(e<d&&(o%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===c&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<d)){const t=o%2==0?r.util.nearestLargerEven(c):c;c%2==0&&o%2==1||c%2!=0&&o%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,c>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                      xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${e}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                  `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<d&&(o%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<d&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<d&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<d&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<d&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${b}\n        ${m}\n        setOutput(result);\n      }\n    `}}const sa={kernelName:r.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:c,dimRoundingMode:l}=a;let d=c;null==d&&(d=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const h=r.backend_util.computeConv2DInfo(s.shape,i.shape,o,d,u,l,!0);let p;return p=Object(r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new aa(h):new ra(h),n.runWebGLProgram(p,[s,i],"float32",[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]])}};class ia{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oa{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ua={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:o,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=a,h=r.backend_util.computeConv2DInfo(s.shape,d,o,u,c,l,!0),p=new ia(h);return n.runWebGLProgram(p,[s,i],"float32")}},ca={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{strides:o,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=a,h=r.backend_util.computeConv2DInfo(d,i.shape,o,u,c,l,!0),p=new oa(h);return n.runWebGLProgram(p,[s,i],"float32")}};class la{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const da={kernelName:r.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=[...a.shape,...a.shape],i=r.util.sizeFromShape(a.shape),o=Ht({inputs:{x:a},backend:n,attrs:{shape:[i]}}),u=new la(i),c=n.runWebGLProgram(u,[o],o.dtype),l=Ht({inputs:{x:c},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};class ha{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const pa={kernelName:r.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:c}=a,l=r.backend_util.computeDilation2DInfo(s.shape,i.shape,o,u,"NHWC",c);let d;const h=new ha(l);d=n.runWebGLProgram(h,[s,i],"float32");const p=Ht({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),p}},fa={kernelName:r.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,i=t,{allDims:o,summedDims:u,idDims:c}=r.backend_util.decodeEinsumEquation(s,i.length);r.backend_util.checkEinsumDimSizes(o.length,c,i);const{path:l,steps:d}=r.backend_util.getEinsumComputePath(u,c),h=d.length;let p=null,f=o.length;const m=[];for(let b=0;b<h;++b){for(const e of d[b]){const{permutationIndices:t,expandDims:a}=r.backend_util.getEinsumPermutation(f,c[e]);let s;r.backend_util.isIdentityPermutation(t)?s=i[e]:(s=nn({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),m.push(s));const o=s.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);r.util.arraysEqual(s.shape,o)||(s=Ht({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===p?p=s:(p=Ut({inputs:{a:s,b:p},backend:n}),m.push(p))}b<h-1&&(l[b]>=0&&(p=en({inputs:{x:p},backend:n,attrs:{axis:l[b]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const r of m)r!==p&&n.disposeIntermediateTensorInfo(r);return p}},ma=zt({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),ba={kernelName:r.Elu,backendName:"webgl",kernelFunc:ma},ga={kernelName:r.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:s}=t,i=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Tt("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,s.shape):new Nt("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,s.shape);return n.runWebGLProgram(i,[a,s],a.dtype)}},ya=Lt({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Se}),xa={kernelName:r.Equal,backendName:"webgl",kernelFunc:ya},va=zt({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.backend_util.ERF_P};\n  float a1 = ${r.backend_util.ERF_A1};\n  float a2 = ${r.backend_util.ERF_A2};\n  float a3 = ${r.backend_util.ERF_A3};\n  float a4 = ${r.backend_util.ERF_A4};\n  float a5 = ${r.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),wa={kernelName:r.Erf,backendName:"webgl",kernelFunc:va},Oa=zt({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Ie,dtype:"float32"}),ka={kernelName:r.Exp,backendName:"webgl",kernelFunc:Oa};function Sa(e){const{inputs:t,attrs:n,backend:a}=e,{dim:s}=n,{input:i}=t,o=i.shape.length,u=i.shape.slice();let c=s;return s<0&&(r.util.assert(-(o+1)<=s,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+s+1),u.splice(c,0,1),Ht({inputs:{x:i},backend:a,attrs:{shape:u}})}const Ia={kernelName:r.ExpandDims,backendName:"webgl",kernelFunc:Sa},Na="return exp(x) - 1.0;",Ta=zt({opSnippet:Na,packedOpSnippet:Na,cpuKernelImpl:Ne}),Ca={kernelName:r.Expm1,backendName:"webgl",kernelFunc:Ta};class ja{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Ea(e,t,n){const a=n.texData.get(e.dataId),s=r.util.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=Ht({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),u=o.shape,c=new ja("real",u,t),l=new ja("imag",u,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:u},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(c,d,"float32"),p=n.runWebGLProgram(l,d,"float32"),f=Et({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=Ht({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const Aa={kernelName:r.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ea(r,!1,n)}};class _a{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function $a(e){const{backend:t,attrs:n}=e,{shape:a,value:s}=n;let{dtype:i}=n;if(i=i||r.util.inferDtype(s),"string"===i){const e=r.util.getArrayFromDType(i,r.util.sizeFromShape(a));return e.fill(s),t.makeTensorInfo(a,i,e)}{const e=new _a(a,s);return t.runWebGLProgram(e,[],i,[[s]])}}const Ra={kernelName:r.Fill,backendName:"webgl",kernelFunc:$a};class Fa{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Da={kernelName:r.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Fa(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Ma="return floor(x);",za=zt({opSnippet:Ma,packedOpSnippet:Ma,cpuKernelImpl:Te}),La={kernelName:r.Floor,backendName:"webgl",kernelFunc:za},Pa=Lt({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Ba={kernelName:r.FloorDiv,backendName:"webgl",kernelFunc:Pa};class Va{constructor(e){this.variableNames=["A"];const t=M(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Wa{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=M(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Ua={kernelName:r.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:s}=t;const{numChannels:i}=a,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,c="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,d]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[d,l],p=[d,l,i];(c||o)&&(null==Ga&&(Ga=document.createElement("canvas").getContext("2d")),Ga.canvas.width=l,Ga.canvas.height=d,Ga.drawImage(s,0,0,l,d),s=Ga.canvas);const f=n.makeTensorInfo(h,"int32");n.texData.get(f.dataId).usage=u.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),s);const m=Object(r.env)().getBool("WEBGL_PACK")?new Wa(p):new Va(p),b=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),b}};let Ga;const Ha={kernelName:r.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:u}=t,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=a,b=r.backend_util.convertConv2DDataFormat(d),g=r.backend_util.computeConv2DInfo(s.shape,i.shape,c,h,l,p,!1,b);let y;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(r.env)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=Er({x:s,filter:i,convInfo:g,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=o,t=null!=u,a="leakyrelu"===f,c=f?Pt(f,!1):null,l=new Nr(g,e,c,t,a),h=[s,i],p=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Ht({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(e&&h.push(p(o,d)),t&&h.push(p(u,d)),a){const e=n.makeTensorInfo([],"float32",r.util.createScalarValue(m,"float32"));h.push(e),x.push(e)}y=n.runWebGLProgram(l,h,"float32")}else y=jr({x:s,filter:i,convInfo:g,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const v=Ht({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}},Ka={kernelName:r.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:u}=t,{strides:c,pad:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a,m=[];let b=d;null==b&&(b=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(c,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${b}'`);const g=r.backend_util.computeConv2DInfo(s.shape,i.shape,c,b,l,h,!0),y=Object(r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=p?Pt(p,y):null,v=[s,i],w=null!=o,O=null!=u,k="leakyrelu"===p;if(w&&v.push(o),O&&v.push(u),k){const e=n.makeTensorInfo([],"float32",r.util.createScalarValue(f,"float32"));v.push(e),m.push(e)}let S;S=y?new aa(g,w,x,O,k):new ra(g,w,x,O,k);const I=n.runWebGLProgram(S,v,"float32",[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]]);return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}};class qa{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=J(t.length),a=J(n.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Xa={kernelName:r.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,i=s.shape,o=i[i.length-1],u=r.util.sizeFromShape(a.shape),[c,l,d,h]=r.backend_util.prepareAndValidate(a,s),p=Ht({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=Ht({inputs:{x:a},backend:n,attrs:{shape:[r.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(a),r=Ce(e,t,a.dtype,l,o,d,h,a.shape,u);return n.makeTensorInfo(c,a.dtype,r.values)}const m=new qa(o,h,[l,d]),b=n.runWebGLProgram(m,[f,p],f.dtype),g=Ht({inputs:{x:b},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),g}};class Za{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=J(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)r.push(2===a?"index":`${n[a]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function Ya(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:i}=t,{axis:o,batchDims:u}=a,c=r.util.parseAxisParam(o,s.shape)[0];if(Object(r.env)().get("DEBUG")){const e=n.readSync(i.dataId),t=s.shape[c];for(let n=0;n<e.length;++n){const a=e[n];r.util.assert(a<=t-1&&a>=0,()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`)}}const l=r.backend_util.segment_util.collectGatherOpShapeInfo(s,i,c,u),d=r.util.sizeFromShape(i.shape),h=[],p=Ht({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=Ht({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=je(t,e,m);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const b=new Za(p.shape,m),g=n.runWebGLProgram(b,[p,f],p.dtype);h.push(g);const y=Ht({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}const Ja={kernelName:r.GatherV2,backendName:"webgl",kernelFunc:Ya},Qa=Lt({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Ee,dtype:"bool"}),es={kernelName:r.Greater,backendName:"webgl",kernelFunc:Qa},ts=Lt({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Ae}),ns={kernelName:r.GreaterEqual,backendName:"webgl",kernelFunc:ts},rs={kernelName:r.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ea(r,!0,n)}},as=zt({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),ss={kernelName:r.IsFinite,backendName:"webgl",kernelFunc:as},is=zt({opSnippet:"return float(isinf(x));",dtype:"bool"}),os={kernelName:r.IsInf,backendName:"webgl",kernelFunc:is},us=zt({opSnippet:"return float(isnan(x));",dtype:"bool"}),cs={kernelName:r.IsNan,backendName:"webgl",kernelFunc:us},ls=Lt({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:_e,dtype:"bool"}),ds={kernelName:r.Less,backendName:"webgl",kernelFunc:ls},hs=Lt({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:$e,dtype:"bool"}),ps={kernelName:r.LessEqual,backendName:"webgl",kernelFunc:hs},fs={kernelName:r.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Re(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},ms=zt({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Fe}),bs={kernelName:r.Log,backendName:"webgl",kernelFunc:ms},gs=zt({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),ys={kernelName:r.Log1p,backendName:"webgl",kernelFunc:gs},xs=Lt({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),vs={kernelName:r.LogicalAnd,backendName:"webgl",kernelFunc:xs},ws=zt({opSnippet:"return float(!(x >= 1.0));"}),Os={kernelName:r.LogicalNot,backendName:"webgl",kernelFunc:ws},ks=Lt({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Ss={kernelName:r.LogicalOr,backendName:"webgl",kernelFunc:ks};class Is{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Ns{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Ts={kernelName:r.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:i,bias:o,alpha:u,beta:c}=a,l=Object(r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Ns(s.shape,i,o,u,c):new Is(s.shape,i,o,u,c);return n.runWebGLProgram(l,[s],s.dtype)}};class Cs{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const js={kernelName:r.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r,d=new Cs(a.shape,o,u,c,l);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function Es(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:i,keepDims:o}=a,u=s.shape.length,c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u),h=null!=d,p=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let n=0;n<t.length;n++)t[n]=s.shape[d[n]];const r=it(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype),n.texData.get(f.dataId).values=r}else f=Qt(s,d,n);l=r.backend_util.getInnerMostAxes(l.length,u)}r.backend_util.assertAxesAreInnerMostDims("max",l,u);const[m,b]=r.backend_util.computeOutAndReduceShapes(f.shape,l);let g,y=m;if(o&&(y=r.backend_util.expandShapeToKeepDim(m,c)),p){const e=n.texData.get(f.dataId),t=De(e.values,r.util.sizeFromShape(b),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const s=r.util.sizeFromShape(t),i=Ht({inputs:{x:e},attrs:{shape:[r.util.sizeFromShape(e.shape)/s,s]},backend:a}),o=Zt(i,e.dtype,"max",a),u=Ht({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),u}(f,b,y,n);return h&&n.disposeIntermediateTensorInfo(f),g}const As={kernelName:r.Max,backendName:"webgl",kernelFunc:Es},_s=Lt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Me}),$s={kernelName:r.Maximum,backendName:"webgl",kernelFunc:_s},Rs={kernelName:r.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;F(s,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=r.backend_util.computePool2DInfo(s.shape,i,o,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return Ct({inputs:{x:s},backend:n});const d=new zn(l,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}},Fs={kernelName:r.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=a,d=r.backend_util.computePool3DInfo(s.shape,i,o,[1,1,1],u,l,c),h=new Ln(d,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class Ds{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${t*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ms{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${t*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const zs={kernelName:r.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,o=i,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=a,h=r.backend_util.computePool3DInfo(o.shape,u,c,[1,1,1],l,d),p=new Ln(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new Ms(h),b=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),b}},Ls={kernelName:r.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i,output:o}=t,u=i;F([i,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=a,p=r.backend_util.computePool2DInfo(u.shape,c,l,1,d,h),f=new zn(p,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),b=new Ds(p),g=n.runWebGLProgram(b,[s,m],u.dtype);return n.disposeIntermediateTensorInfo(m),g}},Ps={kernelName:r.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=t,c=n;r.util.assert(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);const l=[1,1];r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=r.backend_util.computePool2DInfo(a.shape,s,i,l,o),[h,p]=function(e,t,n,r){let a=new zn(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new zn(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,u,d,c);return[h,p]}},Bs={kernelName:r.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:s,axis:i}=t,o=n,u=a.shape.length,c=r.util.parseAxisParam(i,a.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u),h=null!=d,p=o.shouldExecuteOnCPU([a]),f=[];let m=a;if(h){if(p){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let r=0;r<t.length;r++)t[r]=a.shape[d[r]];const n=it(e,a.shape,a.dtype,d,t);m=o.makeTensorInfo(t,a.dtype),o.texData.get(m.dataId).values=n}else m=Qt(a,d,o);f.push(m),l=r.backend_util.getInnerMostAxes(l.length,u)}r.backend_util.assertAxesAreInnerMostDims("sum",l,u);const[b,g]=r.backend_util.computeOutAndReduceShapes(m.shape,l);let y=b;s&&(y=r.backend_util.expandShapeToKeepDim(b,c));const x=function(e,t,n,a){const s=r.util.sizeFromShape(t),i=Ht({inputs:{x:e},attrs:{shape:[r.util.sizeFromShape(e.shape)/s,s]},backend:a}),o=Zt(i,"float32","mean",a),u=Ht({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),u}(m,g,y,o);for(const r of f)o.disposeIntermediateTensorInfo(r);return x}},Vs={kernelName:r.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let h=s;null!=d&&(h=nn({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,u);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=Ht({inputs:{x:h},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=Zt(m,m.dtype,"min",n);let g;return g=Ht(o?{inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}}:{inputs:{x:b},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}},Ws=Lt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:ze}),Us={kernelName:r.Minimum,backendName:"webgl",kernelFunc:Ws};class Gs{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=J(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Hs{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=J(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=ct("rc",r),u=ct("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const Ks={kernelName:r.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:s,mode:i}=n,o=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hs(a.shape,s,i):new Gs(a.shape,s,i);return t.runWebGLProgram(o,[a],a.dtype)}},qs=Lt({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Xs={kernelName:r.Mod,backendName:"webgl",kernelFunc:qs};class Zs{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Ys=Lt({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Js={kernelName:r.RealDiv,backendName:"webgl",kernelFunc:Ys},Qs="return a - b;",ei=Lt({opSnippet:Qs,packedOpSnippet:Qs,supportsComplex:!0,cpuKernelImpl:rt}),ti={kernelName:r.Sub,backendName:"webgl",kernelFunc:ei};function ni(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:i}=a,o=r.util.parseAxisParam([i],s.shape),u=Es({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=r.backend_util.expandShapeToKeepDim(u.shape,o),l=Ht({inputs:{x:u},backend:n,attrs:{shape:c}}),d=ei({inputs:{a:s,b:l},backend:n}),h=Oa({inputs:{x:d},backend:n}),p=en({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),f=Ht({inputs:{x:p},backend:n,attrs:{shape:c}}),m=Ys({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const ri={kernelName:r.Softmax,backendName:"webgl",kernelFunc:ni},ai={kernelName:r.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:ni({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=new Zs(u.shape[0],u.shape[1],s),l=n.runWebGLProgram(c,[u],"int32",[[i]]);return o||n.disposeIntermediateTensorInfo(u),l}},si={kernelName:r.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Pe(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let s;return s=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new xt(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new bt(a.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[a],a.dtype)}},ii=r.kernel_impls.nonMaxSuppressionV3Impl,oi={kernelName:r.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c}=a,l=n.readSync(s.dataId),d=n.readSync(i.dataId),{selectedIndices:h}=ii(l,d,o,u,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},ui=r.kernel_impls.nonMaxSuppressionV4Impl,ci={kernelName:r.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=a,d=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:p,validOutputs:f}=ui(d,h,o,u,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},li=r.kernel_impls.nonMaxSuppressionV5Impl,di={kernelName:r.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=a,d=n.readSync(s.dataId),h=n.readSync(i.dataId),p=o,f=u,m=c,b=l,{selectedIndices:g,selectedScores:y}=li(d,h,p,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class hi{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const pi={kernelName:r.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{depth:i,onValue:o,offValue:u}=a,c=r.util.sizeFromShape(s.shape),l=new hi(c,i,o,u),d=Ht({inputs:{x:s},backend:n,attrs:{shape:[c]}}),h=n.runWebGLProgram(l,[d],s.dtype);n.disposeIntermediateTensorInfo(d);const p=Ht({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(h),p}};function fi(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=ir({inputs:{input:r},backend:n}),t=fi({inputs:{x:e},backend:n}),a=wr({inputs:{input:r},backend:n}),s=fi({inputs:{x:a},backend:n}),i=Et({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return $a({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const mi={kernelName:r.ZerosLike,backendName:"webgl",kernelFunc:fi},bi={kernelName:r.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=ir({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=wr({inputs:{input:a},backend:r}),i=fi({inputs:{x:s},backend:r}),o=Et({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return $a({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},gi={kernelName:r.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return Sa({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],c=Sr({inputs:t.map(e=>{const t=Sa({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t}),backend:n,attrs:{axis:s}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}};class yi{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=J(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class xi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=J(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=ct("rc",r),u=ct("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${d[f]}\n        if (${h}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const vi=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:i,constantValue:o}=a;if(0===r.util.sizeFromShape(s.shape))return $a({backend:n,attrs:{shape:i.map((e,t)=>e[0]+s.shape[t]+e[1]),value:o,dtype:s.dtype}});const u=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xi(s.shape,i,o):new yi(s.shape,i,o);return n.runWebGLProgram(u,[s],s.dtype,[[o]])},wi={kernelName:r.PadV2,backendName:"webgl",kernelFunc:vi},Oi=Lt({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ki={kernelName:r.Pow,backendName:"webgl",kernelFunc:Oi},Si={kernelName:r.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,c=[],l=r.util.parseAxisParam(i,s.shape);let d=l;const h=r.backend_util.getAxesPermutation(d,u);let p,f=s;if(null!=h&&(f=nn({inputs:{x:s},backend:n,attrs:{perm:h}}),d=r.backend_util.getInnerMostAxes(d.length,u),c.push(f)),r.backend_util.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Ve(f.shape,f.dtype,e,d);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=r.backend_util.computeOutAndReduceShapes(f.shape,d),a=r.util.sizeFromShape(t),i=Ht({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),o=Zt(i,Object(r.sumOutType)(s.dtype),"prod",n);p=Ht({inputs:{x:o},backend:n,attrs:{shape:e}}),c.push(i),c.push(o)}if(o){c.push(p);const e=r.backend_util.expandShapeToKeepDim(p.shape,l);p=Ht({inputs:{x:p},backend:n,attrs:{shape:e}})}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},Ii=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=We(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Ni={kernelName:r.Range,backendName:"webgl",kernelFunc:Ii},Ti=zt({opSnippet:"return 1.0 / x;"}),Ci={kernelName:r.Reciprocal,backendName:"webgl",kernelFunc:Ti},ji=zt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Ei={kernelName:r.Relu,backendName:"webgl",kernelFunc:ji},Ai=zt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_i={kernelName:r.Relu6,backendName:"webgl",kernelFunc:Ai};class $i{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Ri{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Fi={kernelName:r.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:u}=a,[c,l]=u,d=Object(r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ri(s.shape,c,l,i,o):new $i(s.shape,c,l,i,o);return n.runWebGLProgram(d,[s],"float32")}};class Di{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Mi={kernelName:r.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Di(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class zi{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Li{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Pi={kernelName:r.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:u}=a,[c,l]=u,d=Object(r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Li(s.shape,c,l,i,o):new zi(s.shape,c,l,i,o);return n.runWebGLProgram(d,[s],s.dtype)}};class Bi{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Vi={kernelName:r.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Bi(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class Wi{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=J(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Ui{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=ct("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=J(n);function o(n){const r=e.map((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Gi={kernelName:r.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:i}=a,o=s.shape.length,u=r.util.parseAxisParam(i,s.shape);if(0===o)return Ct({inputs:{x:s},backend:n});const c=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ui(s.shape,u):new Wi(s.shape,u);return n.runWebGLProgram(c,[s],s.dtype)}};class Hi{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Ki={kernelName:r.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:i,center:o}=t,u=n,c=new Hi(a.shape,i),[l,d]=r.backend_util.getImageCenter(o,a.shape[1],a.shape[2]),h=[[l,d,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(c,[a],a.dtype,h)}},qi=zt({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Xi={kernelName:r.Round,backendName:"webgl",kernelFunc:qi},Zi=zt({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Ue}),Yi={kernelName:r.Rsqrt,backendName:"webgl",kernelFunc:Zi};class Ji{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=J(a.length),u=J(s.length);let c="";1===n?c="i":2===n&&(c="i, j");let l="";1===r?l="i":2===r&&(l="i, coords[1]"),this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(getIndices(${c}));\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${l});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Qi={kernelName:r.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:i}=t,{shape:o}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=r.backend_util.calculateShapes(i,s,o),p=[h/l,l];if(0===h)return n.makeTensorInfo(o,s.dtype);const f=Ht({inputs:{x:s},backend:n,attrs:{shape:[c,u]}}),m=Ht({inputs:{x:i},backend:n,attrs:{shape:[c,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new Ji(c,u,f.shape.length,m.shape.length,d,p),y=n.runWebGLProgram(g,[m,f,b],m.dtype),x=Ht({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}};class eo{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Object(r.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":s;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===a?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const to={kernelName:r.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new eo(a.shape[0],a.shape[1],s.shape[1],i);return n.runWebGLProgram(o,[a,s],"int32",[[a.shape[1]]])}};class no{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=J(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const ro={kernelName:r.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:i}=t,o=new no(a.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[a,s,i],Object(r.upcastType)(s.dtype,i.dtype))}},ao=zt({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.backend_util.SELU_SCALEALPHA};\n  float scale = ${r.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),so={kernelName:r.Selu,backendName:"webgl",kernelFunc:ao},io=zt({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:He}),oo={kernelName:r.Sigmoid,backendName:"webgl",kernelFunc:io},uo=zt({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),co={kernelName:r.Sign,backendName:"webgl",kernelFunc:uo},lo=zt({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),ho={kernelName:r.Sin,backendName:"webgl",kernelFunc:lo},po=zt({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),fo={kernelName:r.Sinh,backendName:"webgl",kernelFunc:po},mo=zt({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),bo={kernelName:r.Softplus,backendName:"webgl",kernelFunc:mo},go={kernelName:r.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,paddings:o}=a;r.util.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const u=i.reduce((e,t)=>e*t),c=[[0,0]];c.push(...o);for(let r=1+i.length;r<s.shape.length;++r)c.push([0,0]);const l=[],d=vi({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),h=r.backend_util.getReshaped(d.shape,i,u,!1),p=r.backend_util.getPermuted(h.length,i.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,i,u,!1),m=Ht({inputs:{x:d},backend:n,attrs:{shape:h}}),b=nn({inputs:{x:m},backend:n,attrs:{perm:p}}),g=Ht({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},yo={kernelName:r.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[d,h,p,f,m]=Xe(o,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},xo={kernelName:r.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[c,l,d]=Ze(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},vo={kernelName:r.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[c,l]=Ye(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(l,r.dtype,c)}},wo={kernelName:r.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[c,l]=Ye(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(l,r.dtype,c)}},Oo={kernelName:r.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=r.backend_util.calculateShapes(i,s,u);if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),a=r.util.decodeString(n.readSync(o.dataId)[0]),f=Ge(e,t,u,p,d,l,c,h,a,!1);return n.makeTensorInfo(u,f.dtype,f.values)}const f=new Ji(l,c,s.shape.length,i.shape.length,h,[p,1],!1),m=n.runWebGLProgram(f,[i,s,o],i.dtype),b=Ht({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(m),b}},ko={kernelName:r.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=a,u=r.util.parseAxisParam(o,s.shape)[0],c=r.backend_util.prepareSplitSize(s,i,u),l=new Array(s.shape.length).fill(0),d=s.shape.slice();return c.map(e=>{const t=[...d];t[u]=e;const r=Qn({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[u]+=e,r})}},So="return sqrt(x);",Io=zt({opSnippet:So,packedOpSnippet:So,cpuKernelImpl:Je}),No={kernelName:r.Sqrt,backendName:"webgl",kernelFunc:Io},To=zt({opSnippet:"return x * x;"}),Co={kernelName:r.Square,backendName:"webgl",kernelFunc:To},jo="return (a - b) * (a - b);",Eo=Lt({opSnippet:jo,packedOpSnippet:jo}),Ao={kernelName:r.SquaredDifference,backendName:"webgl",kernelFunc:Eo},_o={kernelName:r.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=new bt(r.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return n.runWebGLProgram(a,[r],r.dtype)}};class $o{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=J(n.length),s=J(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const Ro={kernelName:r.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,end:o,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a,{finalShapeSparse:f,finalShape:m,isIdentity:b,sliceDim0:g,isSimpleSlice:y,begin:x,end:v,strides:w}=r.slice_util.sliceInfo(s.shape,i,o,u,c,l,d,h,p);let O;if(b)O=Ht({inputs:{x:s},backend:n,attrs:{shape:m}});else if(g||y){r.util.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const e=r.slice_util.computeOutShape(x,v,w),t=Qn({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});O=Ht({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=Object(r.buffer)(s.shape,s.dtype,e),a=Qe(f,t,w,x);O=n.makeTensorInfo(m,s.dtype,a.values)}else{const e=new $o(x,w,f);O=n.runWebGLProgram(e,[s],s.dtype)}const k=Ht({inputs:{x:O},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(O),k}},Fo={kernelName:r.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,h=n.readSync(l.dataId),p=n.readSync(d.dataId),[f,m]=et(h,p,a,s,i,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},Do={kernelName:r.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[c,l,d]=tt(o,u,a),h=l.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},Mo={kernelName:r.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=nt(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},zo=zt({opSnippet:"return tan(x);"}),Lo={kernelName:r.Tan,backendName:"webgl",kernelFunc:zo},Po=zt({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Bo={kernelName:r.Tanh,backendName:"webgl",kernelFunc:Po};class Vo{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=J(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function Wo(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:i}=a;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map(e=>r.util.decodeString(e)):e,a=Object(r.buffer)(s.shape,s.dtype,t),o=at(a,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new Vo(s.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}const Uo={kernelName:r.Tile,backendName:"webgl",kernelFunc:Wo};class Go{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Ho{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Ko(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function qo(e){let t=1;for(;t<e;)t*=2;return t}const Xo={kernelName:r.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:i,sorted:o}=a,u=Object(r.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=Object(r.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,d=l[l.length-1];if(n.shouldExecuteOnCPU([s])||d<u||i>c){const e=n.readSync(s.dataId),[t,r]=st(e,l,s.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===d)return[s,$a({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,f=p?n.unpackTensor(s):s,m=r.util.sizeFromShape(l)/d,b=Ht({inputs:{x:f},attrs:{shape:[m,d]},backend:n});p&&Ko(n,f);const g=qo(i),y=qo(d);let x=null;const v=()=>null===x?[b,b]:[b,x],w=(e,t,r)=>{const a=v(),s=new Go(r),i=x;x=n.runWebGLProgram(s,a,"int32",[[d],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]]),Ko(n,i)};for(let r=1;r<g;r*=2){const e=2*r;for(let t=r;t>=1;t/=2)w(e,t,[m,y])}for(let r=y;r>g;r/=2){const e=v(),t=new Ho([m,r/2]),a=x;x=n.runWebGLProgram(t,e,"int32",[[d],[null===x?1:0],[g]]),Ko(n,a);const s=g/2,i=2*s;for(let n=s;n>=1;n/=2)w(i,n,x.shape)}let O=x;x=Qn({inputs:{x:x},backend:n,attrs:{begin:0,size:[m,i]}}),Ko(n,O);let k=Ya({inputs:{x:b,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Ko(n,b);const S=l.slice(0,-1);S.push(i),O=x,x=Ht({inputs:{x:x},attrs:{shape:S},backend:n}),Ko(n,O);const I=k;return k=Ht({inputs:{x:k},attrs:{shape:S},backend:n}),Ko(n,I),[k,x]}};class Zo{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Yo={kernelName:r.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=r,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=new Zo(d,h,i,o,u,[l,f,m,p]);return n.runWebGLProgram(b,[a,s],"float32")}},Jo={kernelName:r.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;F(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=ot(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},Qo={kernelName:r.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let m=0;m<o;m++)m!==s&&(c[l++]=i.shape[m]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let m=0;m<f.length;m++){h[s]=m;const e=Qn({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),t=Ht({inputs:{x:e},backend:n,attrs:{shape:c}});f[m]=t,d.push(e)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class eu{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const tu=[sn,un,ln,hn,mn,yn,xn,vn,Nn,Tn,jn,An,$n,Fn,Mn,Pn,Bn,Un,Gn,Hn,Xn,tr,nr,rr,ur,dr,fr,At,gr,Ir,Ar,Dr,Mr,zr,Lr,Pr,Vr,Ur,Hr,Jr,Qr,ea,na,sa,ua,ca,da,pa,fa,ba,ga,xa,wa,ka,Ia,Ca,Aa,Ra,Da,La,Ba,Ua,Ha,Ka,Xa,Ja,es,ns,jt,rs,Or,ss,os,cs,Rt,ds,ps,fs,bs,ys,vs,Os,Ss,Ts,js,As,$s,Rs,Fs,zs,Ls,Ps,Bs,Vs,Us,Ks,Xs,ai,Gt,si,oi,ci,di,sr,pi,bi,gi,wi,ki,Mt,Si,Ni,or,Js,Ci,Ei,_i,Kt,Fi,Mi,Pi,Vi,Gi,Ki,Xi,Yi,Qi,to,ro,so,oo,co,ho,fo,er,ri,bo,go,yo,xo,vo,wo,Oo,ko,No,Co,Ao,_o,Ro,Fo,Do,Mo,ti,tn,Lo,Bo,Uo,Xo,Yo,rn,Jo,Qo,{kernelName:r.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:i}=t,{numSegments:o}=a,u=s.shape.length,c=[];let l=0;const d=r.backend_util.getAxesPermutation([l],u);let h=s;null!=d&&(h=nn({inputs:{x:s},backend:n,attrs:{perm:d}}),c.push(h),l=r.backend_util.getInnerMostAxes(1,u)[0]);const p=r.backend_util.segment_util.computeOutShape(h.shape,l,o),f=r.util.sizeFromShape([h.shape[l]]),m=Ht({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});c.push(m);const b=Object(r.sumOutType)(s.dtype),g=(e,t,a,s,i)=>{const o=e.shape[0],u=e.shape[1],l=r.backend_util.segment_util.segOpComputeOptimalWindowSize(u,i),d=new eu({windowSize:l,inSize:u,batchSize:o,numSegments:i},t),h=n.compileAndRun(d,[e,a],s);if(c.push(h),h.shape[1]===i)return h;const p=Ii({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=Wo({inputs:{x:p},backend:n,attrs:{reps:[u/l]}});return c.push(p),c.push(f),g(h,t,f,s,i)},y=Ht({inputs:{x:g(m,"unsortedSegmentSum",i,b,o)},backend:n,attrs:{shape:p}});let x=y;if(null!=d){c.push(y);const e=r.backend_util.getUndoAxesPermutation(d);x=nn({inputs:{x:x},backend:n,attrs:{perm:e}})}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},mi];for(const nu of tu)Object(r.registerKernel)(nu)},"7w+B":function(e,t,n){"use strict";n.d(t,"a",function(){return g}),n.d(t,"b",function(){return x}),n("Kajj");var r=n("szMd"),a=n("atXS"),s=n("NQ+5"),i=n("kx/G");const o="/",u="tensorflowjs_models",c="info",l="model_topology",d="weight_specs",h="weight_data",p="model_metadata";function f(e){return{info:[u,e,c].join(o),topology:[u,e,l].join(o),weightSpecs:[u,e,d].join(o),weightData:[u,e,h].join(o),modelMetadata:[u,e,p].join(o)}}function m(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function b(e){const t=e.split(o);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(o)}class g{constructor(e){if(!Object(r.c)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=f(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Object(s.h)(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(s.a)(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0})),{modelArtifactsInfo:a}}catch(t){throw m(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(s.b)(i),t}}g.URL_SCHEME="localstorage://";const y=e=>{return Object(r.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(g.URL_SCHEME)?(t=e.slice(g.URL_SCHEME.length),new g(t)):null;var t};i.a.registerSaveRouter(y),i.a.registerLoadRouter(y);class x{constructor(){Object(a.b)(Object(r.c)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(a.b)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=u+o,n=o+c;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[b(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=f(e=(t=e).startsWith(g.URL_SCHEME)?t.slice(g.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return m(n),r}}},"7wDt":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({logicalNot_:function(e){const t=Object(s.a)(e,"x","logicalNot","bool");return r.a.runKernel(a.Ib,{x:t})}})},"867m":function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("3rNm"),o=n("VO80");const u=Object(o.b)({prod_:function(e,t=null,n=!1){let o=Object(s.a)(e,"x","prod");return"bool"===o.dtype&&(o=Object(i.a)(o,"int32")),r.a.runKernel(a.lc,{x:o},{axis:t,keepDims:n})}})},"8Km0":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({clone_:function(e){const t=Object(s.a)(e,"x","clone","string_or_numeric");return r.a.runKernel(a.tb,{x:t})}})},"8OX7":function(e,t,n){"use strict";n.d(t,"a",function(){return l});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.b)({minimum_:function(e,t){let n=Object(i.a)(e,"a","minimum"),c=Object(i.a)(t,"b","minimum");return[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.assertAndGetBroadcastShape)(n.shape,c.shape),r.a.runKernel(a.Ub,{a:n,b:c})}})},"8R1p":function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("+hG3");const a=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function s(e,t,n=0,i=e.length-1){for(;i>n;){if(i-n>600){const r=i-n+1,a=t-n+1,o=Math.log(r),u=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*u*(r-u)/r)*Math.sign(a-r/2);s(e,t,Math.max(n,Math.floor(t-a*u/r+c)),Math.min(i,Math.floor(t+(r-a)*u/r+c)))}const o=e[t];let u=n,c=i;for(r.util.swap(e,n,t),a(e[i],o)>0&&r.util.swap(e,n,i);u<c;){for(r.util.swap(e,u,c),u++,c--;a(e[u],o)<0;)u+=1;for(;a(e[c],o)>0;)c-=1}0===a(e[n],o)?r.util.swap(e,n,c):(c+=1,r.util.swap(e,c,i)),c<=t&&(n=c+1),t<=c&&(i=c-1)}}function i(e,t,n,i,o){const u=t[t.length-1],[c,l]=[e.length/u,u],d=r.util.getTypedArrayFromDType(n,c*i),h=r.util.getTypedArrayFromDType("int32",c*i);for(let r=0;r<c;r++){const t=r*l,n=e.subarray(t,t+l);let u=new Array(n.length);n.forEach((e,t)=>u[t]={value:e,index:t}),i<u.length&&(s(u,i),u=u.slice(0,i)),o&&u.sort(a);const c=r*i,p=d.subarray(c,c+i),f=h.subarray(c,c+i);for(let e=0;e<i;e++)p[e]=u[e].value,f[e]=u[e].index}const p=t.slice();return p[p.length-1]=i,[Object(r.buffer)(p,n,d),Object(r.buffer)(p,"int32",h)]}},"8YN0":function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("Um8L"),o=n("VO80");const u=Object(o.b)({logicalOr_:function(e,t){const n=Object(s.a)(e,"a","logicalOr","bool"),o=Object(s.a)(t,"b","logicalOr","bool");return Object(i.assertAndGetBroadcastShape)(n.shape,o.shape),r.a.runKernel(a.Jb,{a:n,b:o})}})},"90yW":function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("NNfn"),a=n("o/e8"),s=n("atXS");const i=async function(e,t){const n=Object(a.a)(e,"x","setdiff1d"),i=Object(a.a)(t,"y","setdiff1d");s.b(n.dtype===i.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`),s.b(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),s.b(1===i.rank,()=>`y should be 1D tensor, but got y (${i.shape}).`);const o=await n.data(),u=await i.data(),c=new Set(u);let l=0;for(let r=0;r<o.length;r++)c.has(o[r])||l++;const d=new r.b([l],n.dtype),h=new r.b([l],"int32");for(let r=0,a=0;r<o.length;r++)c.has(o[r])||(d.values[a]=o[r],h.values[a]=r,a++);return[d.toTensor(),h.toTensor()]}},"91d6":function(e,t,n){"use strict";n.d(t,"a",function(){return g});var r=n("o/e8"),a=n("atXS"),s=n("iuCH"),i=n("NuWS"),o=n("wCH+"),u=n("rm0a"),c=n("VO80"),l=n("yfHJ"),d=n("NclT"),h=n("AV8V"),p=n("Fjpt"),f=n("k7Jv"),m=n("4FMF");function b(e,t,n=null){if(0===e.rank)return Object(s.a)(e);if(1!==e.rank&&null===n)return b(Object(d.a)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Object(m.a)(Object(s.a)(e),n);if(t===1/0)return Object(o.a)(Object(s.a)(e),n);if(t===-1/0)return Object(u.a)(Object(s.a)(e),n);if("euclidean"===t||2===t)return Object(p.a)(Object(m.a)(Object(l.a)(Object(s.a)(e),Object(h.a)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Object(o.a)(Object(m.a)(Object(s.a)(e),n[0]),n[1]-1);if(t===1/0)return Object(o.a)(Object(m.a)(Object(s.a)(e),n[1]),n[0]);if(t===-1/0)return Object(u.a)(Object(m.a)(Object(s.a)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Object(p.a)(Object(m.a)(Object(f.a)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const g=Object(c.b)({norm_:function(e,t="euclidean",n=null,s=!1){const o=b(e=Object(r.a)(e,"x","norm"),t,n);let u=o.shape;if(s){const t=Object(a.I)(n,e.shape);u=i.e(o.shape,t)}return Object(d.a)(o,u)}})},"9JAK":function(e,t,n){"use strict";let r;function a(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",function(){return a}),n.d(t,"a",function(){return s})},A7Us:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>Math.min(e,t)),o=Object(s.a)(r.Minimum,i),u={kernelName:r.Minimum,backendName:"cpu",kernelFunc:o}},"ARu+":function(e,t,n){"use strict";n.d(t,"a",function(){return l});var r=n("dsKV"),a=n("o/e8"),s=n("x3y4"),i=n("ubnP"),o=n("VO80"),u=n("Z5Ez"),c=n("oJu+");const l=Object(o.b)({divNoNan_:function(e,t){let n=Object(a.a)(e,"a","div"),o=Object(a.a)(t,"b","div");[n,o]=Object(r.makeTypesMatch)(n,o);const l=Object(s.a)(n,o),d=Object(c.a)(l),h=Object(i.a)(o,d);return Object(u.a)(h,d,l)}})},AV8V:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("atXS"),a=n("WVnj");function s(e,t){if((Object(r.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(r.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(e,[],[],t)}},AoCb:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("BD40");function a(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const a=Object(r.a)(e,"int32"),s=Object(r.a)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=a.indexToLoc(n[r]);s.values.set(t,r*e.length)}return s.toTensor()}},AoxF:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n){const a=Object(r.buffer)(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=t.locToIndex([n[0],n[2]]);n[2]=t.values[s];const i=e.locToIndex(n);0<=i&&i<e.values.length&&(a.values[r]=e.values[i])}return a}},AwLj:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Object(r.buffer)(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}},B3db:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({complex_:function(e,t){const n=Object(s.a)(e,"real","complex"),o=Object(s.a)(t,"imag","complex");return i.e(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`),r.a.runKernel(a.A,{real:n,imag:o})}})},B7Gm:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a){const s=r.util.getTypedArrayFromDType(a,r.util.sizeFromShape(n));for(let r=0;r<s.length;++r){const n=r*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}s[r]=a}return s}},B9Yq:function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},BD40:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("NNfn"),a=n("atXS");function s(e,t="float32",n){return t=t||"float32",a.c(e),new r.b(e,t,n)}},BMSg:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({bincount_:function(e,t,n){const o=Object(s.a)(e,"x","bincount"),u=Object(s.a)(t,"weights","bincount");return i.b("int32"===o.dtype,()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),i.b(n>=0,()=>`size must be non-negative, but got ${n}.`),i.b(u.size===o.size||0===u.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${u.shape}.`),r.a.runKernel(a.u,{x:o,weights:u},{size:n})}})},BbuY:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("o/e8"),a=n("atXS"),s=n("WVnj");function i(e,t,n){if(Object(a.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=Object(r.c)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s.a)(e,t,i,n)}},CA5I:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("bO7W");Object.defineProperty(t,"IMAGE_SIZE",{enumerable:!0,get:function(){return r.IMAGE_SIZE}}),Object.defineProperty(t,"CustomMobileNet",{enumerable:!0,get:function(){return r.CustomMobileNet}}),Object.defineProperty(t,"load",{enumerable:!0,get:function(){return r.load}}),Object.defineProperty(t,"loadFromFiles",{enumerable:!0,get:function(){return r.loadFromFiles}}),Object.defineProperty(t,"loadTruncatedMobileNet",{enumerable:!0,get:function(){return r.loadTruncatedMobileNet}});var a=n("YD9d");Object.defineProperty(t,"TeachableMobileNet",{enumerable:!0,get:function(){return a.TeachableMobileNet}}),Object.defineProperty(t,"createTeachable",{enumerable:!0,get:function(){return a.createTeachable}});var s=n("KuaA");Object.defineProperty(t,"Webcam",{enumerable:!0,get:function(){return s.Webcam}});var i=n("e1GX");Object.defineProperty(t,"version",{enumerable:!0,get:function(){return i.version}})},CKnt:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({round_:function(e){const t=Object(s.a)(e,"x","round");return r.a.runKernel(a.zc,{x:t})}})},CfTU:function(e,t,n){"use strict";n.d(t,"a",function(){return l});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.b)({maximum_:function(e,t){let n=Object(i.a)(e,"a","maximum"),c=Object(i.a)(t,"b","maximum");return[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.assertAndGetBroadcastShape)(n.shape,c.shape),r.a.runKernel(a.Rb,{a:n,b:c})}})},CtZu:function(e,t,n){"use strict";n.r(t),n.d(t,"GraphModel",function(){return yr}),n.d(t,"loadGraphModel",function(){return xr}),n.d(t,"loadGraphModelSync",function(){return vr}),n.d(t,"deregisterOp",function(){return C}),n.d(t,"registerOp",function(){return N}),n.d(t,"version_converter",function(){return wr});var r={};n.r(r),n.d(r,"json",function(){return D});var a={};n.r(a),n.d(a,"json",function(){return M});var s={};n.r(s),n.d(s,"json",function(){return z});var i={};n.r(i),n.d(i,"json",function(){return L});var o={};n.r(o),n.d(o,"json",function(){return P});var u={};n.r(u),n.d(u,"json",function(){return B});var c={};n.r(c),n.d(c,"json",function(){return V});var l={};n.r(l),n.d(l,"json",function(){return W});var d={};n.r(d),n.d(d,"json",function(){return U});var h={};n.r(h),n.d(h,"json",function(){return G});var p={};n.r(p),n.d(p,"json",function(){return H});var f={};n.r(f),n.d(f,"json",function(){return K});var m={};n.r(m),n.d(m,"json",function(){return q});var b={};n.r(b),n.d(b,"json",function(){return X});var g={};n.r(g),n.d(g,"json",function(){return Z});var y={};n.r(y),n.d(y,"json",function(){return Y});var x={};n.r(x),n.d(x,"json",function(){return J});var v={};n.r(v),n.d(v,"json",function(){return Q});var w={};n.r(w),n.d(w,"json",function(){return ee});var O,k,S=n("+hG3");Object(S.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(O||(O={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(k||(k={}));const I={};function N(e,t){I[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function T(e){return I[e]}function C(e){delete I[e]}function j(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return E(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map(e=>E(e,n,r,a));const o=E(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:S.util.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function E(e,t,n,r){const[a,s]=$(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find(e=>!!t[_(a,e)]);return void 0!==i?t[_(a,i)][s]:void 0}function A(e,t){const[n,r,a]=$(e);return[_(n,t&&t.currentContextId),r,a]}function _(e,t){return t?`${e}-${t}`:e}function $(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=3===t.length?t[1]:void 0;return[t[0],Number(t[t.length-1]),n]}function R(e,t,n){let r=j("pad",e,t,n);if("explicit"===r){r=j("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function F(e){return e.kept?e:Object(S.clone)(e)}const D=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],M=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],L=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],P=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],B=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],V=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],W=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],U=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],G=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],H=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],K=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],q=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],X=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Z=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Y=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],J=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Q=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ee=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class te{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,s,i,o,u,c,l,d,h,p,f,m,b,g,y,x,v,w].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=[],r=[],a=[],s=e.node.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?n.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e),{});let i=[];const o=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const l=Object.keys(s);l.forEach(e=>{const t=s[e];t.inputNames.forEach((e,n)=>{const[r,,a]=A(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);-1!==e&&(t.inputNames[n]=`${r}:${e}`)}t.inputs.push(i),i.children.push(t)})}),0===Object.keys(c).length?l.forEach(e=>{const t=s[e];0===t.children.length&&o.push(t)}):Object.keys(c).forEach(e=>{const[t]=A(e),n=s[t];null!=n&&(n.signatureKey=c[e],o.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{const[t]=A(e),n=s[t];n&&(n.signatureKey=u[e],i.push(n))}):i=n;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const h={nodes:s,inputs:i,outputs:o,weights:r,placeholders:n,signature:t,functions:d};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=T(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=re(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=pe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=se(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=he(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=ae(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=me(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=de(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=fe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=ue(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=ce(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=oe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const a=[],s=[];e.signature.inputArg.forEach(e=>{const[t]=A(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ie(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}),Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach((e,n)=>{const[a,,s]=A(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);-1!==e&&(t.inputNames[n]=`${a}:${e}`)}t.inputs.push(i),i.children.push(t)})});const i=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=A(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function ne(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Object(S.env)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function re(e,t,n,r=!1){const a=e[t];return null!=a?ne(a.s,r):n}function ae(e,t,n){const r=e[t];return r?r.b:n}function se(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function ie(e){switch("string"==typeof e&&(e=O[e]),e){case O.DT_FLOAT:case O.DT_HALF:return"float32";case O.DT_INT32:case O.DT_INT64:case O.DT_INT8:case O.DT_UINT8:return"int32";case O.DT_BOOL:return"bool";case O.DT_DOUBLE:return"float32";case O.DT_STRING:return"string";default:return null}}function oe(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ue(e,t,n){const r=e[t];return r&&r.type?ie(r.type):n}function ce(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>ie(e)):n}function le(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function de(e,t,n){const r=e[t];return r&&r.shape?le(r.shape):n}function he(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function pe(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>ne(e,r)):n}function fe(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>le(e)):n}function me(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class be{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return E(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return E(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return se(this.node.rawAttrs,e,t);if(null!=n.s)return re(this.node.rawAttrs,e,t);if(null!=n.b)return ae(this.node.rawAttrs,e,t);if(null!=n.shape)return de(this.node.rawAttrs,e,t);if(null!=n.type)return ue(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return he(this.node.rawAttrs,e,t);if(null!=n.list.s)return pe(this.node.rawAttrs,e,t);if(null!=n.list.shape)return fe(this.node.rawAttrs,e,t);if(null!=n.list.b)return me(this.node.rawAttrs,e,t);if(null!=n.list.type)return ce(this.node.rawAttrs,e,t)}return t}}var ge=n("kRdc"),ye=n("SFB9"),xe=n("RhH0"),ve=n("parS"),we=n("x3y4"),Oe=n("ARu+"),ke=n("UI8N"),Se=n("oAkI"),Ie=n("8OX7"),Ne=n("CfTU"),Te=n("yfHJ"),Ce=n("QYQ3"),je=n("iuCH"),Ee=n("o3Rt"),Ae=n("RhVc"),_e=n("Ig+c"),$e=n("3FnS"),Re=n("fjZN"),Fe=n("YAKK"),De=n("0ahe"),Me=n("WWBm"),ze=n("B3db"),Le=n("7/dO"),Pe=n("waK1"),Be=n("njhW"),Ve=n("jgXy"),We=n("TyAZ"),Ue=n("G6IW"),Ge=n("02mo"),He=n("E1lT"),Ke=n("RrGL"),qe=n("JLAb"),Xe=n("O7f5"),Ze=n("tQDl"),Ye=n("17CO"),Je=n("kXpR"),Qe=n("CKnt"),et=n("s57M"),tt=n("/7N0"),nt=n("aTLu"),rt=n("Hfat"),at=n("XcSs"),st=n("n/2y"),it=n("Fjpt"),ot=n("k7Jv"),ut=n("iIjY"),ct=n("0wrZ"),lt=n("wI/y"),dt=n("Rqg+"),ht=n("Xyqe"),pt=n("867m"),ft=n("bzdD"),mt=n("Ug8H"),bt=n("b++O");function gt(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){S.util.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){const a=e[r],s=t[r];S.util.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function yt(e){return"number"!=typeof e&&!e.some(e=>e<0)}function xt(e,t,n){let r=vt(e,n);const a=!yt(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(e=>{r=vt(e.shape,r)}),!yt(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function vt(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class wt{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(S.scalar)(0),Object(S.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),gt(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Object(S.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Object(S.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return gt(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(S.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Object(S.tensor)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return gt(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(S.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Object(S.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Object(S.tidy)(()=>{t=Object(S.reshape)(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Object(S.reshape)(Object(S.slice)(t,i,o),this.elementShape)}return s});const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}}class Ot{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);gt(t,e.shape,"TensorList shape mismatch: "),Object(S.keep)(e)}),this.idTensor=Object(S.scalar)(0),this.maxNumElements=r,Object(S.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Ot([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);gt(e,this.elementShape,"TensorList shape mismatch: ");const r=xt(this.elementShape,this.tensors,e);return Object(S.tidy)(()=>{const e=this.tensors.map(e=>Object(S.reshape)(e,r));return Object(S.stack)(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=xt(this.elementShape,this.tensors,e),r=this.tensors.pop();return gt(r.shape,e,"TensorList shape mismatch: "),Object(S.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(gt(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(S.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ot([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);gt(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=xt(this.elementShape,this.tensors,t);return Object(S.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);gt(this.elementShape,t.shape,"TensorList shape mismatch: "),Object(S.keep)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);gt(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=xt(this.elementShape,this.tensors,n);return 0===e.length?Object(S.tensor)([],[0].concat(r)):Object(S.tidy)(()=>{const t=e.map(e=>Object(S.reshape)(this.tensors[e],r));return Object(S.stack)(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);gt(this.elementShape,t,"TensorList shape mismatch: ");const n=xt(this.elementShape,this.tensors,t);return 0===this.size()?Object(S.tensor)([],[0].concat(n)):Object(S.tidy)(()=>{const e=this.tensors.map(e=>Object(S.reshape)(e,n));return Object(S.concat)(e,0)})}}var kt=n("dnXz"),St=n("3X4V"),It=n("EysY"),Nt=n("zR+/"),Tt=n("g4+C"),Ct=n("FZCF"),jt=n("l0gX"),Et=n("n+ZZ"),At=n("i8k8"),_t=n("ulO0"),$t=n("U/2n"),Rt=n("wXC5");function Ft(e,t,n){const[r,a]=j("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,c=j("numArgs",e,t,n);if(s){if(o&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=j("strides",e,t,n),d=R(e,t,n),h=j("dataFormat",e,t,n).toUpperCase(),p=j("dilations",e,t,n);let[f,m]=j("args",e,t,n);return i&&(m=f,f=void 0),{stride:l,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:j("leakyreluAlpha",e,t,n)}}var Dt=n("RrjA"),Mt=n("WJRb"),zt=n("Pvz5"),Lt=n("4iwy"),Pt=n("wion"),Bt=n("DbV5"),Vt=n("hinG"),Wt=n("hNYx"),Ut=n("fmoR"),Gt=n("Wiw4"),Ht=n("oJu+"),Kt=n("3rNm"),qt=n("p4Cv"),Xt=n("90yW");function Zt(e,t,n){return{boxes:j("boxes",e,t,n),scores:j("scores",e,t,n),maxOutputSize:j("maxOutputSize",e,t,n),iouThreshold:j("iouThreshold",e,t,n),scoreThreshold:j("scoreThreshold",e,t,n),softNmsSigma:j("softNmsSigma",e,t,n)}}var Yt=n("DqBt"),Jt=n("VhY8"),Qt=n("+QUr"),en=n("hT5K"),tn=n("lg8H"),nn=n("AV8V");class rn{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Object(S.scalar)(0),this.tensorMap=new Map,Object(S.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return nn.a(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),Object(S.tidy)(()=>{const e=Object(S.unstack)(t),r=n.length,a=e.length;S.util.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let t=0;t<r;t++){const r=n[t],a=e[t];Object(S.keep)(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Object(S.tidy)(()=>{const e=[];for(let r=0;r<n.length;r++){const a=this.findWithDefault(n[r],t);e.push(a)}return Object(S.stack)(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var an=n("ubnP"),sn=n("1N4k"),on=n("zvA9"),un=n("uy0A"),cn=n("4f3O"),ln=n("shz4"),dn=n("4zPZ"),hn=n("7wDt"),pn=n("8YN0"),fn=n("Z5Ez"),mn=n("SHv8"),bn=n("dauL"),gn=n("yRKQ"),yn=n("TlOw"),xn=n("cdtJ"),vn=n("4QEz"),wn=n("X4fa"),On=n("gErV"),kn=n("vGLV"),Sn=n("wCH+"),In=n("Ei6o"),Nn=n("rm0a"),Tn=n("4FMF"),Cn=n("34HJ"),jn=n("RRa9"),En=n("6J+n"),An=n("20lx"),_n=n("F6O2"),$n=n("HmhO"),Rn=n("BMSg"),Fn=n("LyxI"),Dn=n("ZJ6U"),Mn=n("kaMP"),zn=n("0I63"),Ln=n("bTzI"),Pn=n("3hph"),Bn=n("0fRV"),Vn=n("NclT"),Wn=n("1U0N"),Un=n("OkRW"),Gn=n("jXH2"),Hn=n("RbuM"),Kn=n("i/oj"),qn=n("ukBL"),Xn=n("Grcp"),Zn=n("THqV"),Yn=n("th0q"),Jn=n("adw1"),Qn=n("2ugP"),er=n("k9tH"),tr=n("DrVt"),nr=n("dYAU"),rr=n("OygE"),ar=n("Nk7E"),sr=n("SNsm"),ir=n("IuP1");function or(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ge.a(j("a",e,t,n),j("b",e,t,n))];case"AddN":return[ye.a(j("tensors",e,t,n))];case"FloorMod":case"Mod":return[xe.a(j("a",e,t,n),j("b",e,t,n))];case"Mul":return[ve.a(j("a",e,t,n),j("b",e,t,n))];case"RealDiv":case"Div":return[we.a(j("a",e,t,n),j("b",e,t,n))];case"DivNoNan":return[Oe.a(j("a",e,t,n),j("b",e,t,n))];case"FloorDiv":return[ke.a(j("a",e,t,n),j("b",e,t,n))];case"Sub":return[Se.a(j("a",e,t,n),j("b",e,t,n))];case"Minimum":return[Ie.a(j("a",e,t,n),j("b",e,t,n))];case"Maximum":return[Ne.a(j("a",e,t,n),j("b",e,t,n))];case"Pow":return[Te.a(j("a",e,t,n),j("b",e,t,n))];case"SquaredDifference":return[Ce.a(j("a",e,t,n),j("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[je.a(j("x",e,t,n))];case"Acos":return[Ee.a(j("x",e,t,n))];case"Acosh":return[Ae.a(j("x",e,t,n))];case"Asin":return[_e.a(j("x",e,t,n))];case"Asinh":return[$e.a(j("x",e,t,n))];case"Atan":return[Re.a(j("x",e,t,n))];case"Atan2":return[Fe.a(j("x",e,t,n),j("y",e,t,n))];case"Atanh":return[De.a(j("x",e,t,n))];case"Ceil":return[Me.a(j("x",e,t,n))];case"Complex":return[ze.a(j("real",e,t,n),j("imag",e,t,n))];case"Cos":return[Le.a(j("x",e,t,n))];case"Cosh":return[Pe.a(j("x",e,t,n))];case"Elu":return[Be.a(j("x",e,t,n))];case"Erf":return[Ve.a(j("x",e,t,n))];case"Exp":return[We.a(j("x",e,t,n))];case"Expm1":return[Ue.a(j("x",e,t,n))];case"Floor":return[Ge.a(j("x",e,t,n))];case"Log":return[He.a(j("x",e,t,n))];case"Log1p":return[Ke.a(j("x",e,t,n))];case"Imag":return[qe.a(j("x",e,t,n))];case"Neg":return[Xe.a(j("x",e,t,n))];case"Reciprocal":return[Ze.a(j("x",e,t,n))];case"Real":return[Ye.a(j("x",e,t,n))];case"Relu":return[Je.a(j("x",e,t,n))];case"Round":return[Qe.a(j("x",e,t,n))];case"Selu":return[et.a(j("x",e,t,n))];case"Sigmoid":return[tt.a(j("x",e,t,n))];case"Sin":return[nt.a(j("x",e,t,n))];case"Sign":return[rt.a(j("x",e,t,n))];case"Sinh":return[at.a(j("x",e,t,n))];case"Softplus":return[st.a(j("x",e,t,n))];case"Sqrt":return[it.a(j("x",e,t,n))];case"Square":return[ot.a(j("x",e,t,n))];case"Tanh":return[ut.a(j("x",e,t,n))];case"Tan":return[ct.a(j("x",e,t,n))];case"ClipByValue":return[lt.a(j("x",e,t,n),j("clipValueMin",e,t,n),j("clipValueMax",e,t,n))];case"Relu6":return[dt.a(j("x",e,t,n))];case"Rsqrt":return[ht.a(E(e.inputNames[0],t,n))];case"Prod":return[pt.a(j("x",e,t,n),j("axes",e,t,n))];case"LeakyRelu":return[ft.a(j("x",e,t,n),j("alpha",e,t,n))];case"Prelu":return[mt.a(j("x",e,t,n),j("alpha",e,t,n))];case"IsNan":return[bt.a(E(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=j("thenBranch",e,t,n),a=j("elseBranch",e,t,n),s=j("cond",e,t,n),i=j("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=j("body",e,t,n),a=j("cond",e,t,n),s=j("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(e=>e.id);let u=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let c=s;for(;u[0];){const e=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const t=c.map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return c}case"LoopCond":return[F(j("pred",e,t,n))];case"Switch":{const r=j("pred",e,t,n);let a=j("data",e,t,n);return a.kept||(a=F(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==E(e,t,n));return r?[F(E(r,t,n))]:void 0}case"Enter":{const r=j("frameName",e,t,n),a=j("tensor",e,t,n);return n.enterFrame(r),[F(a)]}case"Exit":{const r=j("tensor",e,t,n);return n.exitFrame(),[F(r)]}case"NextIteration":{const r=j("tensor",e,t,n);return n.nextIteration(),[F(r)]}case"TensorArrayV3":{const r=j("size",e,t,n),a=j("dtype",e,t,n),s=j("elementShape",e,t,n),i=j("dynamicSize",e,t,n),o=j("clearAfterRead",e,t,n),u=j("identicalElementShapes",e,t,n),c=j("name",e,t,n),l=new wt(c,a,r,s,u,i,o);return n.addTensorArray(l),[l.idTensor,Object(S.scalar)(1)]}case"TensorArrayWriteV3":{const r=j("tensorArrayId",e,t,n),a=j("index",e,t,n),s=j("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=j("tensorArrayId",e,t,n),a=j("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=j("tensorArrayId",e,t,n),a=j("indices",e,t,n),s=j("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=j("tensorArrayId",e,t,n),a=j("indices",e,t,n),s=j("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=j("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=j("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=j("tensorArrayId",e,t,n),a=j("tensor",e,t,n),s=j("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=j("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[Object(S.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=j("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=j("tensorListId",e,t,n),a=j("index",e,t,n),s=j("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=j("tensorListId",e,t,n),a=j("index",e,t,n),s=j("elementShape",e,t,n),i=j("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=j("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Ot([],n,e.dtype,r),i=Object(S.unstack)(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}(j("tensor",e,t,n),r,j("elementShape",e,t,n),j("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=j("elementShape",e,t,n),a=j("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new Ot([],e,t,n)}(r,a,j(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=j("tensorListId",e,t,n),a=j("indices",e,t,n),s=j("elementShape",e,t,n),i=j("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=j("tensorListId",e,t,n),a=j("elementShape",e,t,n),s=j("elementDType",e,t,n),i=j("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);gt(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Object(S.unstack)(e);return new Ot(a,t,r)}(j("tensor",e,t,n),j("elementShape",e,t,n),j("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=j("tensorListId",e,t,n),a=n.getTensorList(r.id),s=j("dtype",e,t,n),i=j("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=j("tensorListId",e,t,n),a=j("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=j("tensorListId",e,t,n),a=j("elementShape",e,t,n),s=j("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=j("tensor",e,t,n),a=j("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=vt(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Object(S.tidy)(()=>{const n=[];e=Object(S.reshape)(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=Object(S.reshape)(Object(S.slice)(e,o,u),s)}return e.dispose(),n}),u=new Ot([],n,e.dtype,t.length);for(let c=0;c<o.length;c++)u.setItem(c,o[c]);return u}(r,j("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const r=j("tensorListId",e,t,n),a=n.getTensorList(r.id);return[Object(S.scalar)(a.size(),"int32")]}case"TensorListResize":{const r=j("tensorListId",e,t,n),a=j("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=j("stride",e,t,n),a=j("pad",e,t,n),s=j("dataFormat",e,t,n).toUpperCase(),i=j("dilation",e,t,n);return[kt.a(j("x",e,t,n),j("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=j("strides",e,t,n),a=R(e,t,n),s=j("dataFormat",e,t,n).toUpperCase(),i=j("dilations",e,t,n);return[St.a(j("x",e,t,n),j("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=Ft(e,t,n);return[It.tb.conv2d({x:j("x",e,t,n),filter:j("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=Ft(e,t,n);return[It.tb.depthwiseConv2d({x:j("x",e,t,n),filter:j("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=j("outputShape",e,t,n),a=j("strides",e,t,n),s=R(e,t,n);return[Nt.a(j("x",e,t,n),j("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=j("strides",e,t,n),a=R(e,t,n),s=j("dilations",e,t,n),i=j("dataFormat",e,t,n).toUpperCase();return[Tt.a(j("input",e,t,n),j("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=j("strides",e,t,n),a=j("pad",e,t,n),s=j("dataFormat",e,t,n).toUpperCase(),i=j("dilations",e,t,n);return[Ct.a(j("x",e,t,n),j("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=j("strides",e,t,n),a=j("pad",e,t,n),s=j("kernelSize",e,t,n);return[jt.a(j("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=j("strides",e,t,n),a=j("pad",e,t,n),s=j("kernelSize",e,t,n);return[Et.a(j("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=j("strides",e,t,n),a=j("pad",e,t,n),s=j("kernelSize",e,t,n),i=j("includeBatchInIndex",e,t,n),{result:o,indexes:u}=At.a(j("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=j("strides",e,t,n),a=j("pad",e,t,n),s=j("kernelSize",e,t,n);return[_t.a(j("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=j("strides",e,t,n),a=j("pad",e,t,n),s=j("kernelSize",e,t,n);return[$t.a(j("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=j("strides",e,t,n),a=j("pad",e,t,n),s=j("dilations",e,t,n),i=r[1],o=r[2],u=s[1],c=s[2];return[Rt.a(j("x",e,t,n),j("filter",e,t,n),[i,o],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=j("shape",e,t,n),a=j("dtype",e,t,n),s=j("value",e,t,n);return[Dt.a(r,s,a)]}case"LinSpace":{const r=j("start",e,t,n),a=j("stop",e,t,n),s=j("num",e,t,n);return[Mt.a(r,a,s)]}case"Multinomial":{const r=j("logits",e,t,n),a=j("numSamples",e,t,n),s=j("seed",e,t,n);return[zt.a(r,a,s)]}case"OneHot":{const r=j("indices",e,t,n),a=j("depth",e,t,n),s=j("onValue",e,t,n),i=j("offValue",e,t,n);return[Lt.a(r,a,s,i)]}case"Ones":return[Pt.a(j("shape",e,t,n),j("dtype",e,t,n))];case"OnesLike":return[Bt.a(j("x",e,t,n))];case"RandomUniform":return[Vt.a(j("shape",e,t,n),j("minval",e,t,n),j("maxval",e,t,n),j("dtype",e,t,n))];case"Range":{const r=j("start",e,t,n),a=j("stop",e,t,n),s=j("step",e,t,n);return[Wt.a(r,a,s,j("dtype",e,t,n))]}case"TruncatedNormal":{const r=j("shape",e,t,n),a=j("mean",e,t,n),s=j("stdDev",e,t,n),i=j("seed",e,t,n);return[Ut.a(r,a,s,j("dtype",e,t,n),i)]}case"Zeros":return[Gt.a(j("shape",e,t,n),j("dtype",e,t,n))];case"ZerosLike":return[Ht.a(j("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Zt(e,t,n),c=await It.Ab.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Zt(e,t,n),u=j("padToMaxOutputSize",e,t,n),c=await It.Ab.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Zt(e,t,n);return[await It.Ab.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Kt.a(j("condition",e,t,n),"bool"),a=[await qt.a(r)];return r.dispose(),a}case"ListDiff":return Xt.a(j("x",e,t,n),j("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"LowerBound":{const r=j("sortedSequence",e,t,n),a=j("values",e,t,n);return[Yt.a(r,a)]}case"TopKV2":{const r=j("x",e,t,n),a=j("k",e,t,n),s=j("sorted",e,t,n),i=Jt.a(r,a,s);return[i.values,i.indices]}case"UpperBound":{const r=j("sortedSequence",e,t,n),a=j("values",e,t,n);return[Qt.a(r,a)]}case"Unique":{const r=j("x",e,t,n),a=en.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=j("x",e,t,n),a=j("axis",e,t,n),s=en.a(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=j("images",e,t,n),a=j("size",e,t,n),s=j("alignCorners",e,t,n),i=j("halfPixelCenters",e,t,n);return[It.Ab.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=j("images",e,t,n),a=j("size",e,t,n),s=j("alignCorners",e,t,n),i=j("halfPixelCenters",e,t,n);return[It.Ab.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=j("image",e,t,n),a=j("boxes",e,t,n),s=j("boxInd",e,t,n),i=j("cropSize",e,t,n),o=j("method",e,t,n),u=j("extrapolationValue",e,t,n);return[It.Ab.cropAndResize(r,a,s,i,o,u)]}case"ImageProjectiveTransformV3":{const r=j("images",e,t,n),a=j("transforms",e,t,n),s=j("outputShape",e,t,n),i=j("fillValue",e,t,n),o=j("interpolation",e,t,n),u=j("fillMode",e,t,n);return[It.Ab.transform(r,a,o.toLowerCase(),u.toLowerCase(),i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=j("default",e,t,n);return[E(e.name,t,n)||r];case"Placeholder":return[E(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[F(j("x",e,t,n))];case"IdentityN":return j("x",e,t,n).map(e=>F(e));case"Snapshot":return[F(j("x",e,t,n))];case"Shape":return[tn.a(j("x",e,t,n).shape,"int32")];case"ShapeN":return j("x",e,t,n).map(e=>tn.a(e.shape));case"Size":return[nn.a(j("x",e,t,n).size,"int32")];case"Rank":return[nn.a(j("x",e,t,n).rank,"int32")];case"NoOp":return[nn.a(1)];case"Print":const a=j("x",e,t,n),s=j("data",e,t,n),i=j("message",e,t,n),o=j("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"Equal":return[an.a(j("a",e,t,n),j("b",e,t,n))];case"NotEqual":return[sn.a(j("a",e,t,n),j("b",e,t,n))];case"Greater":return[on.a(j("a",e,t,n),j("b",e,t,n))];case"GreaterEqual":return[un.a(j("a",e,t,n),j("b",e,t,n))];case"Less":return[cn.a(j("a",e,t,n),j("b",e,t,n))];case"LessEqual":return[ln.a(j("a",e,t,n),j("b",e,t,n))];case"LogicalAnd":return[dn.a(j("a",e,t,n),j("b",e,t,n))];case"LogicalNot":return[hn.a(j("a",e,t,n))];case"LogicalOr":return[pn.a(j("a",e,t,n),j("b",e,t,n))];case"Select":case"SelectV2":return[fn.a(j("condition",e,t,n),j("a",e,t,n),j("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[mn.a(j("a",e,t,n),j("b",e,t,n),j("transposeA",e,t,n),j("transposeB",e,t,n))];case"Einsum":return[bn.a(j("equation",e,t,n),...j("tensors",e,t,n))];case"Transpose":return[gn.a(j("x",e,t,n),j("perm",e,t,n))];case"_FusedMatMul":const[r,a]=j("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=j("numArgs",e,t,n),u=j("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,l]=j("args",e,t,n);return[It.tb.matMul({a:j("a",e,t,n),b:j("b",e,t,n),transposeA:j("transposeA",e,t,n),transposeB:j("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"EuclideanNorm":return[yn.a(j("x",e,t,n),j("axis",e,t,n),j("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[xn.a(j("x",e,t,n),j("mean",e,t,n),j("variance",e,t,n),j("offset",e,t,n),j("scale",e,t,n),j("epsilon",e,t,n))];case"LRN":return[vn.a(j("x",e,t,n),j("radius",e,t,n),j("bias",e,t,n),j("alpha",e,t,n),j("beta",e,t,n))];case"Softmax":return[wn.a(j("x",e,t,n))];case"LogSoftmax":return[On.a(j("x",e,t,n))];case"SparseToDense":return[kn.a(j("sparseIndices",e,t,n),j("outputShape",e,t,n),j("sparseValues",e,t,n),j("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"Max":{const r=j("axis",e,t,n),a=j("keepDims",e,t,n);return[Sn.a(j("x",e,t,n),r,a)]}case"Mean":{const r=j("axis",e,t,n),a=j("keepDims",e,t,n);return[In.a(j("x",e,t,n),r,a)]}case"Min":{const r=j("axis",e,t,n),a=j("keepDims",e,t,n);return[Nn.a(j("x",e,t,n),r,a)]}case"Sum":{const r=j("axis",e,t,n),a=j("keepDims",e,t,n);return[Tn.a(j("x",e,t,n),r,a)]}case"All":{const r=j("axis",e,t,n),a=j("keepDims",e,t,n);return[Cn.a(j("x",e,t,n),r,a)]}case"Any":{const r=j("axis",e,t,n),a=j("keepDims",e,t,n);return[jn.a(j("x",e,t,n),r,a)]}case"ArgMax":{const r=j("axis",e,t,n);return[En.a(j("x",e,t,n),r)]}case"ArgMin":{const r=j("axis",e,t,n);return[An.a(j("x",e,t,n),r)]}case"Prod":{const r=j("axis",e,t,n),a=j("keepDims",e,t,n);return[pt.a(j("x",e,t,n),r,a)]}case"Cumprod":{const r=j("axis",e,t,n),a=j("exclusive",e,t,n),s=j("reverse",e,t,n);return[_n.a(j("x",e,t,n),r,a,s)]}case"Cumsum":{const r=j("axis",e,t,n),a=j("exclusive",e,t,n),s=j("reverse",e,t,n);return[$n.a(j("x",e,t,n),r,a,s)]}case"Bincount":const r=j("x",e,t,n),a=j("weights",e,t,n),s=j("size",e,t,n);return[Rn.a(r,a,s)];case"DenseBincount":{const r=j("x",e,t,n),a=j("weights",e,t,n),s=j("size",e,t,n),i=j("binaryOutput",e,t,n);return[Fn.a(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=j("n",e,t,n),a=j("axis",e,t,n);let s=j("tensors",e,t,n);return s=s.slice(0,r),[Dn.a(s,a)]}case"Gather":{const r=j("x",e,t,n),a=j("indices",e,t,n);return[Mn.a(r,Kt.a(a,"int32"),0)]}case"GatherV2":{const r=j("axis",e,t,n),a=j("batchDims",e,t,n),s=j("x",e,t,n),i=j("indices",e,t,n);return[Mn.a(s,Kt.a(i,"int32"),r,a)]}case"Reverse":{const r=j("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=j("x",e,t,n);return[zn.a(s,a)]}case"ReverseV2":{const r=j("axis",e,t,n),a=j("x",e,t,n);return[zn.a(a,r)]}case"Slice":{const r=j("begin",e,t,n),a=j("size",e,t,n);return[Ln.a(j("x",e,t,n),r,a)]}case"StridedSlice":{const r=j("begin",e,t,n),a=j("end",e,t,n),s=j("strides",e,t,n),i=j("beginMask",e,t,n),o=j("endMask",e,t,n),u=j("ellipsisMask",e,t,n),c=j("newAxisMask",e,t,n),l=j("shrinkAxisMask",e,t,n),d=j("x",e,t,n);return[Pn.a(d,r,a,s,i,o,u,c,l)]}case"Pack":return Object(S.tidy)(()=>{const r=j("axis",e,t,n),a=j("tensors",e,t,n),s=a[0].shape,i=Bn.a(a[0]).shape,o=a.map(e=>{const t=S.util.arraysEqual(e.shape,s);if(!t&&!S.util.arraysEqual(Bn.a(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Vn.a(e,s)});return[Wn.a(o,r)]});case"Unpack":{const r=j("axis",e,t,n),a=j("tensor",e,t,n);return Un.a(a,r)}case"Tile":{const r=j("reps",e,t,n);return[Gn.a(j("x",e,t,n),r)]}case"Split":case"SplitV":{const r=j("axis",e,t,n),a=j("numOrSizeSplits",e,t,n),s=j("x",e,t,n);return Hn.a(s,a,r)}case"ScatterNd":{const r=j("indices",e,t,n),a=j("values",e,t,n),s=j("shape",e,t,n);return[Kn.a(r,a,s)]}case"GatherNd":{const r=j("x",e,t,n),a=j("indices",e,t,n);return[qn.a(r,a)]}case"SparseToDense":{const r=j("sparseIndices",e,t,n),a=j("outputShape",e,t,n),s=j("sparseValues",e,t,n),i=j("defaultValue",e,t,n);return[kn.a(r,s,a,s.dtype===i.dtype?i:Kt.a(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"sparse":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=It.rd.sparseFillEmptyRows(j("indices",e,t,n),j("values",e,t,n),j("denseShape",e,t,n),j("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=It.rd.sparseReshape(j("inputIndices",e,t,n),j("inputShape",e,t,n),j("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[It.rd.sparseSegmentMean(j("data",e,t,n),j("indices",e,t,n),j("segmentIds",e,t,n))];case"SparseSegmentSum":return[It.rd.sparseSegmentSum(j("data",e,t,n),j("indices",e,t,n),j("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"FFT":return[Xn.a(j("x",e,t,n))];case"IFFT":return[Zn.a(j("x",e,t,n))];case"RFFT":return[Yn.a(j("x",e,t,n))];case"IRFFT":return[Jn.a(j("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"string":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=It.Cd.stringNGrams(j("data",e,t,n),j("dataSplits",e,t,n),j("separator",e,t,n),j("nGramWidths",e,t,n),j("leftPad",e,t,n),j("rightPad",e,t,n),j("padWidth",e,t,n),j("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=It.Cd.stringSplit(j("input",e,t,n),j("delimiter",e,t,n),j("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[It.Cd.stringToHashBucketFast(j("input",e,t,n),j("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return S.tidy(()=>((e,t,n)=>{switch(e.op){case"Cast":return[Kt.a(j("x",e,t,n),j("dtype",e,t,n))];case"ExpandDims":{const r=j("axis",e,t,n);return[Qn.a(j("x",e,t,n),r)]}case"Squeeze":{const r=j("axis",e,t,n);return[Bn.a(j("x",e,t,n),r)]}case"Reshape":return[Vn.a(j("x",e,t,n),j("shape",e,t,n))];case"MirrorPad":return[er.a(j("x",e,t,n),j("padding",e,t,n),j("mode",e,t,n))];case"PadV2":case"Pad":return[tr.a(j("x",e,t,n),j("padding",e,t,n),j("constantValue",e,t,n))];case"SpaceToBatchND":{const r=j("blockShape",e,t,n),a=j("paddings",e,t,n);return[nr.a(j("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=j("blockShape",e,t,n),a=j("crops",e,t,n);return[rr.a(j("x",e,t,n),r,a)]}case"DepthToSpace":{const r=j("blockSize",e,t,n),a=j("dataFormat",e,t,n).toUpperCase();return[ar.a(j("x",e,t,n),r,a)]}case"BroadcastTo":return[sr.a(j("x",e,t,n),j("shape",e,t,n))];case"BroadcastArgs":return[ir.a(j("s0",e,t,n),j("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=j("keyDType",e,t,n),s=j("valueDType",e,t,n),i=new rn(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=j("tableHandle",e,t,n,r),s=j("keys",e,t,n),i=j("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=j("tableHandle",e,t,n,r),s=j("keys",e,t,n),i=j("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=j("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=T(e.op);if(a&&a.customExecutor)return a.customExecutor(new be(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return S.util.isPromise(a)?a.then(e=>[].concat(e)):[].concat(a)}class ur{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function cr(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,c=Object.keys(e).map(e=>$(e)[0]);let l=[];null!=r&&(l=r.map(e=>$(e.name)[0]));const d=[...t];for(;d.length>0;){const e=d.pop();(pr(e)||fr(e)||mr(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&-1===c.indexOf(e.name)&&-1===l.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),d.push(e))}):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const lr=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],dr=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],hr=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function pr(e){return lr.indexOf(e.op)>=0}function fr(e){return dr.indexOf(e.op)>=0}function mr(e){return hr.indexOf(e.op)>=0}class br{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new br(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=cr(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map(e=>$(e)[0]).map(t=>e.nodes[t]),o=e.initNodes;i.forEach(e=>{r.has(e.name)&&s.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&s.push(e)}),null!=o&&o.forEach(e=>{r.has(e.name)&&s.push(e)});const u=new Set,c=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||c.push(e),e.children.forEach(e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>u.has(e.name))&&s.push(e)})}return c}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[$(e)[0]]),a=t.map(e=>$(e)[0]);let s=a.map(e=>this.graph.nodes[e]);this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},c={};return Object(S.tidy)(()=>{const n=new ur(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,a]=$(t),s=[];s[a]=e[t],r[n]=s});const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=or(t,r,n,this._resourceManager);if(S.util.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map(e=>E(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const s=function(e,t,n){return t[_(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach(e=>{if(e&&!e.kept&&!a.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=A(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(e=>e.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach(e=>e.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Object(S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){console.warn(c.message)}this.resetIntermediateTensors();const s=new ur(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);const i=t.map(e=>E(e,this.tensorsMap,s)),o=i.map(e=>e.id),u=Object.keys(e).map(t=>e[t].id);return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map(e=>this.graph.nodes[$(e)[0]]),i=n.map(e=>$(e)[0]);let o=i.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:d}=cr(e,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),p=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=$(t),a=[];a[r]=e[t],p[n]=a});const f={},m=this.getFrozenTensorIds(p),b={};for(;h.length>0;){const e=this.processStack(s,h,t,p,b,m,i,f,u);await Promise.all(e)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const g=o.filter(e=>!pr(e)&&!E(e.name,p,t)).map(e=>e.name);if(g.length>0){let e="";throw null!=l&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${g}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return p}processStack(e,t,n,r,a,s,i,o,u){const c=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&j("isConstant",e.node,r,n)&&([l]=A(e.node.name,n)),null==r[e.node.name]){const d=or(e.node,r,n,this._resourceManager);l||([l]=A(e.node.name,n));const h=n.currentContext;S.util.isPromise(d)?c.push(d.then(c=>(r[l]=c,n.currentContext=h,this.checkTensorForDisposal(l,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),c))):(r[l]=d,this.checkTensorForDisposal(l,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return c}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{const[i]=A(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!E(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!E(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=$(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);S.util.assert(t,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&S.util.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=$(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e,{})}checkOutputs(e){e.forEach(e=>{const[t]=$(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class gr{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class yr{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new gr}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=S.io.browserHTTPRequest(e,this.loadOptions);else{const t=S.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(S.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return S.util.isPromise(e)?e.then(e=>this.loadSync(e)):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=S.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new br(te.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=te.Instance.transformGraph(e.modelInitializer);this.initializer=new br(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=S.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof S.Tensor||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function xr(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}model.json?tfjs-format=file`}(e));const n=new yr(e,t);return await n.load(),n}function vr(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!e.load)throw new Error(`modelUrl IO Handler ${e} has no load function`);const t=new yr(e);return t.load(),t}const wr="3.18.0"},"D2/b":function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({conv2DBackpropFilter_:function(e,t,n,o,c,l="NHWC",d){let h=e;3===e.rank&&(h=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.b(4===h.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${h.shape}.`),s.b(4===p.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`),s.b(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const f="NHWC"===l?h.shape[3]:h.shape[1],m="NHWC"===l?p.shape[3]:p.shape[1];return s.b(f===n[2],()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`),s.b(m===n[3],()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`),i.a("conv2dDerFilter",c,d),r.a.runKernel(a.E,{x:h,dy:p},{strides:o,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:n})}})},D4ac:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const c=Object(s.a)(e,"images","resizeNearestNeighbor");i.b(3===c.rank||4===c.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`),i.b(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),i.b("float32"===c.dtype||"int32"===c.dtype,()=>"`images` must have `int32` or `float32` as dtype"),i.b(!1===o||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,h=r.a.runKernel(a.vc,{images:l},{alignCorners:n,halfPixelCenters:o,size:t});return d?Object(u.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},"DP+o":function(e,t,n){!function(e,t,n){"use strict";const r={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class a{constructor(e,t){this.modelPath=t||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return"lite_mobilenet_v2"===e?`ssd${e}`:`ssd_${e}`}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),r=await this.model.executeAsync(e);await Promise.all(r.map(e=>e.data())),r.map(e=>e.dispose()),e.dispose()}async infer(e,t,r){const a=n.tidy(()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e))),s=a.shape[1],i=a.shape[2],o=await this.model.executeAsync(a),u=o[0].dataSync(),c=o[1].dataSync();a.dispose(),n.dispose(o);const[l,d]=this.calculateMaxScores(u,o[0].shape[1],o[0].shape[2]),h=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const p=n.tidy(()=>{const e=n.tensor2d(c,[o[1].shape[1],o[1].shape[3]]);return n.image.nonMaxSuppression(e,l,t,r,r)}),f=p.dataSync();return p.dispose(),h!==n.getBackend()&&n.setBackend(h),this.buildDetectedObjects(i,s,c,l,f,d)}buildDetectedObjects(e,t,n,a,s,i){const o=s.length,u=[];for(let c=0;c<o;c++){const o=[];for(let e=0;e<4;e++)o[e]=n[4*s[c]+e];const l=o[0]*t,d=o[1]*e,h=o[2]*t,p=o[3]*e;o[0]=d,o[1]=l,o[2]=p-d,o[3]=h-l,u.push({bbox:o,class:r[i[s[c]]+1].displayName,score:a[s[c]]})}return u}calculateMaxScores(e,t,n){const r=[],a=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,i=-1;for(let r=0;r<n;r++)e[s*n+r]>t&&(t=e[s*n+r],i=r);r[s]=t,a[s]=i}return[r,a]}async detect(e,t=20,n=.5){return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=a,e.load=async function(e={}){if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",r=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error(`ObjectDetection constructed with invalid base model ${t}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const s=new a(t,r);return await s.load(),s},e.version="2.2.2",Object.defineProperty(e,"__esModule",{value:!0})}(t,n("CtZu"),n("+hG3"))},DPiU:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return a});const a={kernelName:n("+hG3").Real,backendName:"cpu",kernelFunc:r}},DbV5:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({onesLike_:function(e){const t=Object(s.a)(e,"x","onesLike");return r.a.runKernel(a.fc,{x:t})}})},"Dhi/":function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>e<=t?1:0),o=Object(s.a)(r.LessEqual,i,null,"bool"),u={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:o}},DqBt:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("WXLG");function a(e,t){return Object(r.a)(e,t,"left")}},DrVt:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({pad_:function(e,t,n=0){const i=Object(s.a)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return r.a.runKernel(a.hc,{x:i},{paddings:t,constantValue:n})}})},DvQV:function(e,t,n){"use strict";n.d(t,"d",function(){return we}),n.d(t,"e",function(){return ke}),n.d(t,"f",function(){return Ne}),n.d(t,"g",function(){return je}),n.d(t,"fc",function(){return Ae}),n.d(t,"qc",function(){return ve}),n.d(t,"rc",function(){return $e}),n.d(t,"yc",function(){return _e}),n.d(t,"Qc",function(){return Ee}),n.d(t,"vd",function(){return q.a}),n.d(t,"wd",function(){return q.b}),n.d(t,"Fd",function(){return q.c}),n.d(t,"Ac",function(){return Re.a}),n.d(t,"bi",function(){return Re.b}),n.d(t,"zi",function(){return Re.c}),n.d(t,"Id",function(){return Fe.b}),n.d(t,"Jd",function(){return Fe.c}),n.d(t,"Kd",function(){return Fe.d}),n.d(t,"Ld",function(){return Fe.e}),n.d(t,"Md",function(){return Fe.f}),n.d(t,"Nd",function(){return Fe.g}),n.d(t,"Od",function(){return Fe.h}),n.d(t,"Pd",function(){return Fe.i}),n.d(t,"Qd",function(){return Fe.j}),n.d(t,"Rd",function(){return Fe.k}),n.d(t,"Sd",function(){return Fe.l}),n.d(t,"Td",function(){return Fe.m}),n.d(t,"Ud",function(){return Fe.n}),n.d(t,"Vd",function(){return Fe.o}),n.d(t,"Wd",function(){return Fe.p}),n.d(t,"Xd",function(){return Fe.q}),n.d(t,"ae",function(){return Fe.r}),n.d(t,"fe",function(){return Fe.w}),n.d(t,"be",function(){return Fe.s}),n.d(t,"ce",function(){return Fe.t}),n.d(t,"de",function(){return Fe.u}),n.d(t,"ee",function(){return Fe.v}),n.d(t,"ge",function(){return Fe.x}),n.d(t,"ie",function(){return Fe.z}),n.d(t,"je",function(){return Fe.A}),n.d(t,"me",function(){return Fe.B}),n.d(t,"ne",function(){return Fe.C}),n.d(t,"oe",function(){return Fe.D}),n.d(t,"pe",function(){return Fe.E}),n.d(t,"qe",function(){return Fe.F}),n.d(t,"re",function(){return Fe.G}),n.d(t,"se",function(){return Fe.H}),n.d(t,"te",function(){return Fe.I}),n.d(t,"ue",function(){return Fe.J}),n.d(t,"ve",function(){return Fe.K}),n.d(t,"we",function(){return Fe.L}),n.d(t,"xe",function(){return Fe.M}),n.d(t,"ye",function(){return Fe.N}),n.d(t,"ze",function(){return Fe.O}),n.d(t,"Ae",function(){return Fe.P}),n.d(t,"Be",function(){return Fe.Q}),n.d(t,"De",function(){return Fe.R}),n.d(t,"Ee",function(){return Fe.S}),n.d(t,"Ge",function(){return Fe.U}),n.d(t,"He",function(){return Fe.V}),n.d(t,"Je",function(){return Fe.W}),n.d(t,"Le",function(){return Fe.X}),n.d(t,"Me",function(){return Fe.Y}),n.d(t,"Oe",function(){return Fe.Z}),n.d(t,"Pe",function(){return Fe.ab}),n.d(t,"Te",function(){return Fe.bb}),n.d(t,"Ue",function(){return Fe.cb}),n.d(t,"Ve",function(){return Fe.db}),n.d(t,"Xe",function(){return Fe.fb}),n.d(t,"Ye",function(){return Fe.gb}),n.d(t,"ef",function(){return Fe.ib}),n.d(t,"ff",function(){return Fe.jb}),n.d(t,"gf",function(){return Fe.kb}),n.d(t,"hf",function(){return Fe.lb}),n.d(t,"if",function(){return Fe.mb}),n.d(t,"jf",function(){return Fe.nb}),n.d(t,"kf",function(){return Fe.ob}),n.d(t,"mf",function(){return Fe.qb}),n.d(t,"pf",function(){return Fe.rb}),n.d(t,"qf",function(){return Fe.sb}),n.d(t,"sf",function(){return Fe.ub}),n.d(t,"Bf",function(){return Fe.wb}),n.d(t,"Cf",function(){return Fe.xb}),n.d(t,"Ef",function(){return Fe.zb}),n.d(t,"Jf",function(){return Fe.Db}),n.d(t,"Kf",function(){return Fe.Eb}),n.d(t,"Lf",function(){return Fe.Fb}),n.d(t,"Of",function(){return Fe.Gb}),n.d(t,"Pf",function(){return Fe.Hb}),n.d(t,"Qf",function(){return Fe.Ib}),n.d(t,"Sf",function(){return Fe.Kb}),n.d(t,"Tf",function(){return Fe.Lb}),n.d(t,"Uf",function(){return Fe.Mb}),n.d(t,"Vf",function(){return Fe.Nb}),n.d(t,"Wf",function(){return Fe.Ob}),n.d(t,"Xf",function(){return Fe.Pb}),n.d(t,"Yf",function(){return Fe.Qb}),n.d(t,"Zf",function(){return Fe.Rb}),n.d(t,"ag",function(){return Fe.Sb}),n.d(t,"bg",function(){return Fe.Tb}),n.d(t,"cg",function(){return Fe.Ub}),n.d(t,"eg",function(){return Fe.Wb}),n.d(t,"fg",function(){return Fe.Xb}),n.d(t,"hg",function(){return Fe.Yb}),n.d(t,"ig",function(){return Fe.Zb}),n.d(t,"jg",function(){return Fe.ac}),n.d(t,"kg",function(){return Fe.bc}),n.d(t,"lg",function(){return Fe.cc}),n.d(t,"mg",function(){return Fe.dc}),n.d(t,"og",function(){return Fe.ec}),n.d(t,"pg",function(){return Fe.fc}),n.d(t,"qg",function(){return Fe.gc}),n.d(t,"rg",function(){return Fe.hc}),n.d(t,"sg",function(){return Fe.ic}),n.d(t,"tg",function(){return Fe.jc}),n.d(t,"vg",function(){return Fe.lc}),n.d(t,"wg",function(){return Fe.mc}),n.d(t,"xg",function(){return Fe.nc}),n.d(t,"yg",function(){return Fe.oc}),n.d(t,"Bg",function(){return Fe.qc}),n.d(t,"Cg",function(){return Fe.rc}),n.d(t,"Dg",function(){return Fe.sc}),n.d(t,"Eg",function(){return Fe.tc}),n.d(t,"Gg",function(){return Fe.vc}),n.d(t,"Hg",function(){return Fe.wc}),n.d(t,"Ig",function(){return Fe.xc}),n.d(t,"Jg",function(){return Fe.yc}),n.d(t,"Kg",function(){return Fe.zc}),n.d(t,"Lg",function(){return Fe.Ac}),n.d(t,"Mg",function(){return Fe.Bc}),n.d(t,"Ng",function(){return Fe.Cc}),n.d(t,"Og",function(){return Fe.Dc}),n.d(t,"Pg",function(){return Fe.Ec}),n.d(t,"Qg",function(){return Fe.Fc}),n.d(t,"Sg",function(){return Fe.Gc}),n.d(t,"Tg",function(){return Fe.Hc}),n.d(t,"Ug",function(){return Fe.Ic}),n.d(t,"Vg",function(){return Fe.Jc}),n.d(t,"Wg",function(){return Fe.Kc}),n.d(t,"Yg",function(){return Fe.Lc}),n.d(t,"Zg",function(){return Fe.Mc}),n.d(t,"dh",function(){return Fe.Nc}),n.d(t,"eh",function(){return Fe.Oc}),n.d(t,"gh",function(){return Fe.Pc}),n.d(t,"hh",function(){return Fe.Qc}),n.d(t,"ih",function(){return Fe.Rc}),n.d(t,"jh",function(){return Fe.Sc}),n.d(t,"kh",function(){return Fe.Tc}),n.d(t,"lh",function(){return Fe.Uc}),n.d(t,"nh",function(){return Fe.Wc}),n.d(t,"oh",function(){return Fe.Xc}),n.d(t,"ph",function(){return Fe.Yc}),n.d(t,"th",function(){return Fe.bd}),n.d(t,"uh",function(){return Fe.cd}),n.d(t,"yh",function(){return Fe.dd}),n.d(t,"zh",function(){return Fe.ed}),n.d(t,"Ah",function(){return Fe.fd}),n.d(t,"Ch",function(){return Fe.hd}),n.d(t,"Dh",function(){return Fe.id}),n.d(t,"Eh",function(){return Fe.jd}),n.d(t,"Fh",function(){return Fe.kd}),n.d(t,"Gh",function(){return Fe.ld}),n.d(t,"Hh",function(){return Fe.md}),n.d(t,"Ih",function(){return Fe.nd}),n.d(t,"Kh",function(){return Fe.od}),n.d(t,"Lh",function(){return Fe.pd}),n.d(t,"Mh",function(){return Fe.qd}),n.d(t,"lf",function(){return Fe.pb}),n.d(t,"Df",function(){return Fe.yb}),n.d(t,"If",function(){return Fe.Cb}),n.d(t,"mh",function(){return Fe.Vc}),n.d(t,"Qh",function(){return Fe.ud}),n.d(t,"Rh",function(){return Fe.vd}),n.d(t,"Sh",function(){return Fe.wd}),n.d(t,"Th",function(){return Fe.xd}),n.d(t,"Uh",function(){return Fe.yd}),n.d(t,"Vh",function(){return Fe.zd}),n.d(t,"Wh",function(){return Fe.Ad}),n.d(t,"Xh",function(){return Fe.Bd}),n.d(t,"Zh",function(){return Fe.Dd}),n.d(t,"ai",function(){return Fe.Ed}),n.d(t,"ci",function(){return Fe.Fd}),n.d(t,"di",function(){return Fe.Gd}),n.d(t,"ei",function(){return Fe.Hd}),n.d(t,"fi",function(){return Fe.Id}),n.d(t,"gi",function(){return Fe.Jd}),n.d(t,"hi",function(){return Fe.Kd}),n.d(t,"ii",function(){return Fe.Ld}),n.d(t,"ji",function(){return Fe.Md}),n.d(t,"ki",function(){return Fe.Nd}),n.d(t,"oi",function(){return Fe.Od}),n.d(t,"qi",function(){return Fe.Pd}),n.d(t,"ti",function(){return Fe.Rd}),n.d(t,"ui",function(){return Fe.Sd}),n.d(t,"xi",function(){return Fe.Td}),n.d(t,"yi",function(){return Fe.Ud}),n.d(t,"Ai",function(){return Fe.Vd}),n.d(t,"Ei",function(){return Fe.Wd}),n.d(t,"Hi",function(){return Fe.Xd}),n.d(t,"Ii",function(){return Fe.Yd}),n.d(t,"Ji",function(){return Fe.Zd}),n.d(t,"Ki",function(){return Fe.ae}),n.d(t,"he",function(){return Fe.y}),n.d(t,"si",function(){return Fe.Qd}),n.d(t,"Ag",function(){return Fe.pc}),n.d(t,"ug",function(){return Fe.kc}),n.d(t,"qh",function(){return Fe.Zc}),n.d(t,"sh",function(){return Fe.ad}),n.d(t,"Oh",function(){return Fe.sd}),n.d(t,"tf",function(){return Fe.vb}),n.d(t,"We",function(){return Fe.eb}),n.d(t,"bf",function(){return Fe.hb}),n.d(t,"Fe",function(){return Fe.T}),n.d(t,"Gf",function(){return Fe.Bb}),n.d(t,"Fg",function(){return Fe.uc}),n.d(t,"nc",function(){return Fe.a}),n.d(t,"Ff",function(){return Fe.Ab}),n.d(t,"Rf",function(){return Fe.Jb}),n.d(t,"dg",function(){return Fe.Vb}),n.d(t,"Ph",function(){return Fe.td}),n.d(t,"rf",function(){return Fe.tb}),n.d(t,"Bh",function(){return Fe.gd}),n.d(t,"Nh",function(){return Fe.rd}),n.d(t,"Yh",function(){return Fe.Cd}),n.d(t,"Ec",function(){return De.a}),n.d(t,"ri",function(){return Me}),n.d(t,"af",function(){return de.g}),n.d(t,"Ze",function(){return de.f}),n.d(t,"Qe",function(){return de.c}),n.d(t,"Ke",function(){return de.b}),n.d(t,"Se",function(){return de.e}),n.d(t,"cf",function(){return de.h}),n.d(t,"ng",function(){return de.m}),n.d(t,"Rg",function(){return de.n}),n.d(t,"ni",function(){return de.t}),n.d(t,"Re",function(){return de.d}),n.d(t,"Mf",function(){return de.l}),n.d(t,"pi",function(){return de.u}),n.d(t,"wh",function(){return de.r}),n.d(t,"Xg",function(){return de.o}),n.d(t,"vf",function(){return de.k}),n.d(t,"fh",function(){return de.q}),n.d(t,"nf",function(){return de.i}),n.d(t,"of",function(){return de.j}),n.d(t,"ah",function(){return de.p}),n.d(t,"Yd",function(){return de.a}),n.d(t,"xh",function(){return de.s}),n.d(t,"xf",function(){return K.c}),n.d(t,"wf",function(){return K.b}),n.d(t,"yf",function(){return K.d}),n.d(t,"ch",function(){return K.f}),n.d(t,"bh",function(){return K.e}),n.d(t,"wi",function(){return K.h}),n.d(t,"vi",function(){return K.g}),n.d(t,"Ce",function(){return K.a}),n.d(t,"Ie",function(){return ye.a}),n.d(t,"zf",function(){return ye.b}),n.d(t,"Af",function(){return ye.c}),n.d(t,"Ci",function(){return ye.d}),n.d(t,"Di",function(){return ye.e}),n.d(t,"Fi",function(){return ye.f}),n.d(t,"gb",function(){return d.b}),n.d(t,"df",function(){return d.c}),n.d(t,"cb",function(){return d.a}),n.d(t,"Gi",function(){return le}),n.d(t,"zg",function(){return Le}),n.d(t,"le",function(){return s}),n.d(t,"Hf",function(){return r}),n.d(t,"gg",function(){return a}),n.d(t,"vh",function(){return o}),n.d(t,"mi",function(){return ue}),n.d(t,"Bi",function(){return ce}),n.d(t,"Zd",function(){return c}),n.d(t,"ke",function(){return U}),n.d(t,"li",function(){return oe}),n.d(t,"Jh",function(){return re}),n.d(t,"uf",function(){return i}),n.d(t,"rh",function(){return ne}),n.d(t,"Ne",function(){return Pt}),n.d(t,"Nf",function(){return l}),n.d(t,"Fb",function(){return Wt.b}),n.d(t,"S",function(){return Wt.a}),n.d(t,"a",function(){return H.a}),n.d(t,"b",function(){return H.b}),n.d(t,"c",function(){return H.c}),n.d(t,"h",function(){return H.d}),n.d(t,"i",function(){return H.e}),n.d(t,"j",function(){return H.f}),n.d(t,"k",function(){return H.g}),n.d(t,"l",function(){return H.h}),n.d(t,"m",function(){return H.i}),n.d(t,"n",function(){return H.j}),n.d(t,"o",function(){return H.k}),n.d(t,"p",function(){return H.l}),n.d(t,"r",function(){return H.n}),n.d(t,"q",function(){return H.m}),n.d(t,"s",function(){return H.o}),n.d(t,"v",function(){return H.r}),n.d(t,"t",function(){return H.p}),n.d(t,"u",function(){return H.q}),n.d(t,"w",function(){return H.s}),n.d(t,"x",function(){return H.t}),n.d(t,"y",function(){return H.u}),n.d(t,"A",function(){return H.w}),n.d(t,"z",function(){return H.v}),n.d(t,"B",function(){return H.x}),n.d(t,"C",function(){return H.y}),n.d(t,"D",function(){return H.z}),n.d(t,"E",function(){return H.A}),n.d(t,"F",function(){return H.B}),n.d(t,"G",function(){return H.C}),n.d(t,"H",function(){return H.D}),n.d(t,"I",function(){return H.E}),n.d(t,"J",function(){return H.F}),n.d(t,"K",function(){return H.G}),n.d(t,"L",function(){return H.H}),n.d(t,"M",function(){return H.I}),n.d(t,"N",function(){return H.J}),n.d(t,"O",function(){return H.K}),n.d(t,"Q",function(){return H.M}),n.d(t,"R",function(){return H.N}),n.d(t,"P",function(){return H.L}),n.d(t,"T",function(){return H.O}),n.d(t,"U",function(){return H.P}),n.d(t,"V",function(){return H.Q}),n.d(t,"W",function(){return H.R}),n.d(t,"X",function(){return H.S}),n.d(t,"Y",function(){return H.T}),n.d(t,"Z",function(){return H.U}),n.d(t,"bb",function(){return H.W}),n.d(t,"ab",function(){return H.V}),n.d(t,"Cc",function(){return H.oc}),n.d(t,"db",function(){return H.X}),n.d(t,"eb",function(){return H.Y}),n.d(t,"fb",function(){return H.Z}),n.d(t,"ib",function(){return H.bb}),n.d(t,"hb",function(){return H.ab}),n.d(t,"jb",function(){return H.cb}),n.d(t,"kb",function(){return H.db}),n.d(t,"lb",function(){return H.eb}),n.d(t,"mb",function(){return H.fb}),n.d(t,"nb",function(){return H.gb}),n.d(t,"ob",function(){return H.hb}),n.d(t,"pb",function(){return H.ib}),n.d(t,"qb",function(){return H.jb}),n.d(t,"sb",function(){return H.lb}),n.d(t,"wb",function(){return H.pb}),n.d(t,"vb",function(){return H.ob}),n.d(t,"xb",function(){return H.qb}),n.d(t,"yb",function(){return H.rb}),n.d(t,"Ab",function(){return H.tb}),n.d(t,"zb",function(){return H.sb}),n.d(t,"Bb",function(){return H.ub}),n.d(t,"Cb",function(){return H.vb}),n.d(t,"Db",function(){return H.wb}),n.d(t,"Eb",function(){return H.xb}),n.d(t,"Ib",function(){return H.Ab}),n.d(t,"Jb",function(){return H.Bb}),n.d(t,"Kb",function(){return H.Cb}),n.d(t,"Lb",function(){return H.Db}),n.d(t,"Mb",function(){return H.Eb}),n.d(t,"Nb",function(){return H.Fb}),n.d(t,"Pb",function(){return H.Hb}),n.d(t,"Qb",function(){return H.Ib}),n.d(t,"Rb",function(){return H.Jb}),n.d(t,"Ob",function(){return H.Gb}),n.d(t,"Sb",function(){return H.Kb}),n.d(t,"Gb",function(){return H.yb}),n.d(t,"Hb",function(){return H.zb}),n.d(t,"Tb",function(){return H.Lb}),n.d(t,"Zb",function(){return H.Rb}),n.d(t,"Ub",function(){return H.Mb}),n.d(t,"Xb",function(){return H.Pb}),n.d(t,"Vb",function(){return H.Nb}),n.d(t,"Wb",function(){return H.Ob}),n.d(t,"Yb",function(){return H.Qb}),n.d(t,"ac",function(){return H.Sb}),n.d(t,"bc",function(){return H.Tb}),n.d(t,"cc",function(){return H.Ub}),n.d(t,"dc",function(){return H.Vb}),n.d(t,"ec",function(){return H.Wb}),n.d(t,"gc",function(){return H.Xb}),n.d(t,"hc",function(){return H.Yb}),n.d(t,"ic",function(){return H.Zb}),n.d(t,"mc",function(){return H.dc}),n.d(t,"jc",function(){return H.ac}),n.d(t,"kc",function(){return H.bc}),n.d(t,"lc",function(){return H.cc}),n.d(t,"pc",function(){return H.fc}),n.d(t,"oc",function(){return H.ec}),n.d(t,"sc",function(){return H.gc}),n.d(t,"tc",function(){return H.hc}),n.d(t,"uc",function(){return H.ic}),n.d(t,"vc",function(){return H.jc}),n.d(t,"wc",function(){return H.kc}),n.d(t,"xc",function(){return H.lc}),n.d(t,"zc",function(){return H.mc}),n.d(t,"Bc",function(){return H.nc}),n.d(t,"Dc",function(){return H.pc}),n.d(t,"Fc",function(){return H.qc}),n.d(t,"Hc",function(){return H.sc}),n.d(t,"Kc",function(){return H.vc}),n.d(t,"Lc",function(){return H.wc}),n.d(t,"Ic",function(){return H.tc}),n.d(t,"Jc",function(){return H.uc}),n.d(t,"Gc",function(){return H.rc}),n.d(t,"Mc",function(){return H.xc}),n.d(t,"Oc",function(){return H.zc}),n.d(t,"Pc",function(){return H.Ac}),n.d(t,"Rc",function(){return H.Bc}),n.d(t,"Sc",function(){return H.Cc}),n.d(t,"Tc",function(){return H.Dc}),n.d(t,"Uc",function(){return H.Ec}),n.d(t,"Zc",function(){return H.Jc}),n.d(t,"Xc",function(){return H.Hc}),n.d(t,"Yc",function(){return H.Ic}),n.d(t,"Wc",function(){return H.Gc}),n.d(t,"Vc",function(){return H.Fc}),n.d(t,"bd",function(){return H.Lc}),n.d(t,"jd",function(){return H.Tc}),n.d(t,"sd",function(){return H.cd}),n.d(t,"cd",function(){return H.Mc}),n.d(t,"id",function(){return H.Sc}),n.d(t,"ad",function(){return H.Kc}),n.d(t,"dd",function(){return H.Nc}),n.d(t,"ed",function(){return H.Oc}),n.d(t,"fd",function(){return H.Pc}),n.d(t,"gd",function(){return H.Qc}),n.d(t,"hd",function(){return H.Rc}),n.d(t,"ld",function(){return H.Vc}),n.d(t,"kd",function(){return H.Uc}),n.d(t,"nd",function(){return H.Xc}),n.d(t,"od",function(){return H.Yc}),n.d(t,"pd",function(){return H.Zc}),n.d(t,"qd",function(){return H.ad}),n.d(t,"rd",function(){return H.bd}),n.d(t,"td",function(){return H.dd}),n.d(t,"ud",function(){return H.ed}),n.d(t,"xd",function(){return H.fd}),n.d(t,"yd",function(){return H.gd}),n.d(t,"zd",function(){return H.hd}),n.d(t,"Ad",function(){return H.id}),n.d(t,"Bd",function(){return H.jd}),n.d(t,"Cd",function(){return H.kd}),n.d(t,"Dd",function(){return H.ld}),n.d(t,"Ed",function(){return H.md}),n.d(t,"Gd",function(){return H.nd}),n.d(t,"md",function(){return H.Wc}),n.d(t,"rb",function(){return H.kb}),n.d(t,"Nc",function(){return H.yc}),n.d(t,"Hd",function(){return H.od}),n.d(t,"tb",function(){return H.mb}),n.d(t,"ub",function(){return H.nb});var r={};n.r(r),n.d(r,"copyModel",function(){return D.b}),n.d(r,"listModels",function(){return D.c}),n.d(r,"moveModel",function(){return D.d}),n.d(r,"removeModel",function(){return D.e}),n.d(r,"browserFiles",function(){return g}),n.d(r,"browserHTTPRequest",function(){return C}),n.d(r,"concatenateArrayBuffers",function(){return h.d}),n.d(r,"decodeWeights",function(){return h.e}),n.d(r,"encodeWeights",function(){return h.f}),n.d(r,"fromMemory",function(){return _}),n.d(r,"fromMemorySync",function(){return $}),n.d(r,"getLoadHandlers",function(){return p.b}),n.d(r,"getModelArtifactsForJSON",function(){return h.g}),n.d(r,"getModelArtifactsInfoForJSON",function(){return h.h}),n.d(r,"getSaveHandlers",function(){return p.c}),n.d(r,"http",function(){return T}),n.d(r,"isHTTPScheme",function(){return I}),n.d(r,"loadWeights",function(){return O}),n.d(r,"registerLoadRouter",function(){return p.d}),n.d(r,"registerSaveRouter",function(){return p.e}),n.d(r,"weightsLoaderFactory",function(){return k}),n.d(r,"withSaveHandler",function(){return R}),n.d(r,"withSaveHandlerSync",function(){return F});var a={};n.r(a),n.d(a,"confusionMatrix",function(){return W});var s={};n.r(s),n.d(s,"fromPixelsAsync",function(){return J}),n.d(s,"toPixels",function(){return Q}),n.d(s,"fromPixels",function(){return ee});var i={};n.r(i),n.d(i,"prepareAndValidate",function(){return te});var o={};n.r(o),n.d(o,"Serializable",function(){return ae}),n.d(o,"SerializationMap",function(){return se}),n.d(o,"registerClass",function(){return ie});var u={};n.r(u),n.d(u,"segOpComputeOptimalWindowSize",function(){return Ft}),n.d(u,"computeOutShape",function(){return Dt}),n.d(u,"collectGatherOpShapeInfo",function(){return Mt});var c={};n.r(c),n.d(c,"axesAreInnerMostDims",function(){return Pe.b}),n.d(c,"combineLocations",function(){return Pe.c}),n.d(c,"computeOutAndReduceShapes",function(){return Pe.d}),n.d(c,"expandShapeToKeepDim",function(){return Pe.e}),n.d(c,"assertAxesAreInnerMostDims",function(){return Pe.a}),n.d(c,"getAxesPermutation",function(){return Pe.f}),n.d(c,"getUndoAxesPermutation",function(){return Pe.h}),n.d(c,"getInnerMostAxes",function(){return Pe.g}),n.d(c,"getBroadcastDims",function(){return U.getBroadcastDims}),n.d(c,"getReductionAxes",function(){return U.getReductionAxes}),n.d(c,"assertAndGetBroadcastShape",function(){return U.assertAndGetBroadcastShape}),n.d(c,"assertParamsConsistent",function(){return Be}),n.d(c,"computeOutShape",function(){return Ve}),n.d(c,"computeDilation2DInfo",function(){return We.e}),n.d(c,"computePool2DInfo",function(){return We.f}),n.d(c,"computePool3DInfo",function(){return We.g}),n.d(c,"computeConv2DInfo",function(){return We.b}),n.d(c,"computeConv3DInfo",function(){return We.c}),n.d(c,"computeDefaultPad",function(){return We.d}),n.d(c,"tupleValuesAreOne",function(){return We.j}),n.d(c,"eitherStridesOrDilationsAreOne",function(){return We.i}),n.d(c,"convertConv2DDataFormat",function(){return We.h}),n.d(c,"checkPadOnDimRoundingMode",function(){return We.a}),n.d(c,"getFusedDyActivation",function(){return Ue.c}),n.d(c,"getFusedBiasGradient",function(){return Ue.b}),n.d(c,"applyActivation",function(){return Ue.a}),n.d(c,"shouldFuse",function(){return Ue.d}),n.d(c,"PARALLELIZE_THRESHOLD",function(){return Ge}),n.d(c,"computeOptimalWindowSize",function(){return He}),n.d(c,"slice_util",function(){return re}),n.d(c,"upcastType",function(){return Re.c}),n.d(c,"getImageCenter",function(){return Ke}),n.d(c,"getReshaped",function(){return qe}),n.d(c,"getPermuted",function(){return Xe}),n.d(c,"getReshapedPermuted",function(){return Ze}),n.d(c,"getSliceBeginCoords",function(){return Ye}),n.d(c,"getSliceSize",function(){return Je}),n.d(c,"prepareAndValidate",function(){return te}),n.d(c,"validateUpdateShape",function(){return ne.validateUpdateShape}),n.d(c,"validateInput",function(){return ne.validateInput}),n.d(c,"calculateShapes",function(){return ne.calculateShapes}),n.d(c,"SELU_SCALEALPHA",function(){return Qe.b}),n.d(c,"SELU_SCALE",function(){return Qe.a}),n.d(c,"ERF_P",function(){return et}),n.d(c,"ERF_A1",function(){return tt}),n.d(c,"ERF_A2",function(){return nt}),n.d(c,"ERF_A3",function(){return rt}),n.d(c,"ERF_A4",function(){return at}),n.d(c,"ERF_A5",function(){return st}),n.d(c,"warn",function(){return it.b}),n.d(c,"log",function(){return it.a}),n.d(c,"mergeRealAndImagArrays",function(){return ot}),n.d(c,"splitRealAndImagArrays",function(){return ut}),n.d(c,"complexWithEvenIndex",function(){return ct}),n.d(c,"complexWithOddIndex",function(){return lt}),n.d(c,"getComplexWithIndex",function(){return dt}),n.d(c,"assignToTypedArray",function(){return ht}),n.d(c,"exponents",function(){return pt}),n.d(c,"exponent",function(){return ft}),n.d(c,"decodeEinsumEquation",function(){return bt}),n.d(c,"getEinsumPermutation",function(){return gt}),n.d(c,"checkEinsumDimSizes",function(){return yt}),n.d(c,"getEinsumComputePath",function(){return xt}),n.d(c,"isIdentityPermutation",function(){return vt}),n.d(c,"prepareSplitSize",function(){return Ot}),n.d(c,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",function(){return kt}),n.d(c,"getSparseFillEmptyRowsNegativeIndexErrorMessage",function(){return St}),n.d(c,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",function(){return It}),n.d(c,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",function(){return Nt}),n.d(c,"getSparseReshapeNegativeOutputDimErrorMessage",function(){return Tt}),n.d(c,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",function(){return Ct}),n.d(c,"getSparseReshapeInputOutputMultipleErrorMessage",function(){return jt}),n.d(c,"getSparseReshapeInputOutputMismatchErrorMessage",function(){return Et}),n.d(c,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",function(){return At}),n.d(c,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",function(){return _t}),n.d(c,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",function(){return $t}),n.d(c,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",function(){return Rt}),n.d(c,"segment_util",function(){return u}),n.d(c,"fromUint8ToStringArray",function(){return zt}),n.d(c,"fromStringArrayToUint8",function(){return Lt});var l={};n.r(l),n.d(l,"nonMaxSuppressionV3Impl",function(){return Bt.a}),n.d(l,"nonMaxSuppressionV4Impl",function(){return Bt.b}),n.d(l,"nonMaxSuppressionV5Impl",function(){return Bt.c}),n.d(l,"whereImpl",function(){return Vt.a}),n("x0IE"),n("7w+B"),n("Kajj");var d=n("szMd"),h=n("NQ+5"),p=n("kx/G");function f(e){return new Promise(e=>setTimeout(e)).then(e)}class m{constructor(e){if(!Object(d.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(m.URL_SCHEME)&&(e=e.slice(m.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Object(h.i)(e,n),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await f(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await f(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(h.h)(e)}}}}m.URL_SCHEME="downloads://";class b{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Object(h.g)(r,e=>this.loadWeights(e));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(a).then(e=>[t,Object(h.d)(e)])}loadWeightsFile(e,t){return new Promise((n,r)=>{const a=new FileReader;a.onload=e=>{n(e.target.result)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(e=>Object(h.c)(e.name)),r={};for(const a of e)a.paths.forEach(e=>{const a=Object(h.c)(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function g(e){return new b(e)}p.a.registerSaveRouter(e=>Object(d.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(m.URL_SCHEME)?function(e="model"){return new m(e)}(e.slice(m.URL_SCHEME.length)):null);var y=n("atXS");function x(e,t,n,r){!function(e){Object(y.b)(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){Object(y.b)(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),Object(y.b)(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),Object(y.b)(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map(s=>(s.then(s=>{const i=n+ ++a/e.length*(r-n);return t(i),s}),s)))}var v=n("mEeB");async function w(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(d.c)().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await x(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await x(a,t.onProgress,.5,1)}async function O(e,t="",n,r){return k(e=>w(e,{requestInit:r}))(e,t,n)}function k(e){return async(t,n="",r)=>{const a=t.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u=v.a["quantization"in e?e.quantization.dtype:e.dtype]*y.O(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((t,n)=>{t===e.name&&(c(),i[n]=!0)}):c(),o.push(e.name),n+=u})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),c=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)})});const l=await e(c),d={};let p=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=l[p+t].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(l[p+t]);i.set(e,o),o+=e.byteLength}s[e].forEach(e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(h.e)(t,[e.manifestEntry]);for(const r in n)d[r]=n[r]}),p+=n}),d}}class S{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(y.b)("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Object(d.c)().platform.fetch,Object(y.b)(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Object(y.b)(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Object(h.i)(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(h.h)(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(n){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}if(null==t.modelTopology&&null==t.weightsManifest)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Object(h.g)(t,e=>this.loadWeights(e))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const c of e)s.push(...c.weights);const i=[],o=[];for(const c of e)for(const e of c.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await w(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(h.d)(u)]}}function I(e){return null!=e.match(S.URL_SCHEME_REGEX)}S.URL_SCHEME_REGEX=/^https?:\/\//;const N=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>I(e)):I(e),n)return T(e,t)}return null};function T(e,t){return new S(e,t)}function C(e,t){return T(e,t)}p.a.registerSaveRouter(N),p.a.registerLoadRouter(N);class j{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class E{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class A{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function _(e,t,n,r){const a=arguments;return new A($(...a))}function $(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new j(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new j({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new j({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function R(e){return new E(e)}function F(e){return new E(e)}var D=n("VQjN"),M=n("o/e8"),z=n("3rNm"),L=n("SHv8"),P=n("4iwy"),B=n("VO80"),V=n("yRKQ");const W=Object(B.b)({confusionMatrix_:function(e,t,n){const r=Object(M.a)(e,"labels","confusionMatrix"),a=Object(M.a)(t,"predictions","confusionMatrix");y.b(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),y.b(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),y.b(1===a.rank,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),y.b(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),y.b(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const s=Object(P.a)(Object(z.a)(r,"int32"),n),i=Object(P.a)(Object(z.a)(a,"int32"),n),o=Object(V.a)(s),u=Object(L.a)(o,i);return Object(z.a)(u,"int32")}});var U=n("Um8L"),G=n("auKK"),H=n("wFtI"),K=n("c7gn"),q=n("NNfn"),X=n("BbuY");let Z;function Y(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(K.c)(H.kb,G.a.backendName))return G.a.runKernel(H.kb,{pixels:e},{numChannels:t});const[u,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,d;if(i)l=e.getContext("2d").getImageData(0,0,u,c).data;else if(r||n)l=e.data;else if(s||a||o){if(null==Z)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Z=new OffscreenCanvas(1,1).getContext("2d")}else Z=document.createElement("canvas").getContext("2d");Z.canvas.width=u,Z.canvas.height=c,Z.drawImage(e,0,0,u,c),l=Z.getImageData(0,0,u,c).data}if(4===t)d=new Int32Array(l);else{const e=u*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=l[4*n+e]}const h=[c,u,t];return Object(X.a)(d,h,"int32")}async function J(e,t=3){let n=null;if(Object(d.c)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Y(n,t)}async function Q(e,t){let n=Object(M.a)(e,"img","toPixels");if(!(e instanceof q.a)){const e=n;n=Object(z.a)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let c=0;c<r*a;++c){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=i[c*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*c;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const ee=Object(B.b)({fromPixels_:Y});function te(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(y.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let d=0;d<a.length-1;++d)i*=a[d];const o=e.shape,u=a.slice();u.pop();let c=1;for(let d=s;d<n;++d)c*=o[d],u.push(o[d]);const l=[...Object(y.j)(e.shape).map(e=>e/c),1].slice(0,s);return[u,i,c,l]}var ne=n("o0+U"),re=n("Xr0w");class ae{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class se{constructor(){this.classNameMap={}}static getMap(){return null==se.instance&&(se.instance=new se),se.instance}static register(e){se.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ie(e){Object(y.b)(null!=e.className,()=>"Class being registered does not have the static className property defined."),Object(y.b)("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Object(y.b)(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),se.register(e)}var oe=n("dsKV"),ue=n("1WXW"),ce=n("6366");const le="3.18.0";var de=n("wE5H"),he=n("kRdc"),pe=n("x3y4"),fe=n("parS"),me=n("Fjpt"),be=n("k7Jv"),ge=n("oJu+"),ye=n("U45G"),xe=n("AV8V");class ve extends ae{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return Object(de.d)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(ye.f)(e,t)}dispose(){null!=this.iterations_&&Object(de.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(xe.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ve,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class we extends ve{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=G.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=G.a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Object(de.t)(()=>Object(ge.a)(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Object(de.t)(()=>Object(ge.a)(r).variable(!1))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Object(de.t)(()=>{const e=Object(he.a)(Object(fe.a)(s,this.rho),Object(fe.a)(Object(be.a)(a),1-this.rho)),t=Object(fe.a)(Object(pe.a)(Object(me.a)(Object(he.a)(i,this.epsilon)),Object(me.a)(Object(he.a)(s,this.epsilon))),a),n=Object(he.a)(Object(fe.a)(i,this.rho),Object(fe.a)(Object(be.a)(t),1-this.rho));s.assign(e),i.assign(n);const o=Object(he.a)(Object(fe.a)(t,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(de.d)(this.accumulatedGrads.map(e=>e.variable)),Object(de.d)(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}we.className="Adadelta",ie(we);var Oe=n("RrjA");class ke extends ve{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=G.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Object(de.t)(()=>Object(Oe.a)(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(de.t)(()=>{const e=Object(he.a)(s,Object(be.a)(a));s.assign(e);const t=Object(he.a)(Object(fe.a)(Object(pe.a)(a,Object(me.a)(Object(he.a)(e,G.a.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(de.d)(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}ke.className="Adagrad",ie(ke);var Se=n("yfHJ"),Ie=n("oAkI");class Ne extends ve{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(de.t)(()=>{this.accBeta1=Object(xe.a)(t).variable(),this.accBeta2=Object(xe.a)(n).variable()}),null==r&&(this.epsilon=G.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(de.t)(()=>{const n=Object(Ie.a)(1,this.accBeta1),r=Object(Ie.a)(1,this.accBeta2);t.forEach((t,a)=>{const s=G.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Object(de.t)(()=>Object(ge.a)(s).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Object(de.t)(()=>Object(ge.a)(s).variable(!1))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=Object(he.a)(Object(fe.a)(o,this.beta1),Object(fe.a)(i,1-this.beta1)),l=Object(he.a)(Object(fe.a)(u,this.beta2),Object(fe.a)(Object(be.a)(i),1-this.beta2)),d=Object(pe.a)(c,n),h=Object(pe.a)(l,r);o.assign(c),u.assign(l);const p=Object(he.a)(Object(fe.a)(Object(pe.a)(d,Object(he.a)(Object(me.a)(h),this.epsilon)),-this.learningRate),s);s.assign(p)}),this.accBeta1.assign(Object(fe.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(fe.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(de.d)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Object(de.d)(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Object(de.t)(()=>{this.accBeta1.assign(Object(Se.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Se.a)(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Ne.className="Adam",ie(Ne);var Te=n("iuCH"),Ce=n("CfTU");class je extends ve{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(de.t)(()=>{this.iteration=Object(xe.a)(0).variable(),this.accBeta1=Object(xe.a)(t).variable()}),null==r&&(this.epsilon=G.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(de.t)(()=>{const n=Object(Ie.a)(1,this.accBeta1),r=Object(pe.a)(-this.learningRate,Object(he.a)(Object(fe.a)(this.iteration,this.decay),1));t.forEach((t,a)=>{const s=G.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Object(ge.a)(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Object(ge.a)(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=Object(he.a)(Object(fe.a)(o,this.beta1),Object(fe.a)(i,1-this.beta1)),l=Object(fe.a)(u,this.beta2),d=Object(Te.a)(i),h=Object(Ce.a)(l,d);o.assign(c),u.assign(h);const p=Object(he.a)(Object(fe.a)(Object(pe.a)(r,n),Object(pe.a)(c,Object(he.a)(h,this.epsilon))),s);s.assign(p)}),this.iteration.assign(Object(he.a)(this.iteration,1)),this.accBeta1.assign(Object(fe.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(de.d)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Object(de.d)(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}je.className="Adamax",ie(je);class Ee extends ve{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=G.a.registeredVariables[t];Object(de.t)(()=>{const e=Object(he.a)(Object(fe.a)(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(de.l)(Object(xe.a)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Ee.className="SGD",ie(Ee);class Ae extends Ee{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(xe.a)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=G.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Object(de.t)(()=>Object(ge.a)(r).variable(e))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Object(de.t)(()=>{let e;const t=Object(he.a)(Object(fe.a)(this.m,a),s);e=this.useNesterov?Object(he.a)(Object(fe.a)(this.c,Object(he.a)(s,Object(fe.a)(t,this.m))),r):Object(he.a)(Object(fe.a)(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(de.d)(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Ae.className="Momentum",ie(Ae);class _e extends ve{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=G.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=G.a.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Object(de.t)(()=>Object(ge.a)(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Object(de.t)(()=>Object(ge.a)(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Object(de.t)(()=>Object(ge.a)(r).variable(a))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Object(de.t)(()=>{const e=Object(he.a)(Object(fe.a)(i,this.decay),Object(fe.a)(Object(be.a)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Object(he.a)(Object(fe.a)(t,this.decay),Object(fe.a)(s,1-this.decay)),u=Object(pe.a)(Object(fe.a)(s,this.learningRate),Object(me.a)(Object(Ie.a)(e,Object(he.a)(Object(be.a)(a),this.epsilon)))),c=Object(he.a)(Object(fe.a)(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(c);const l=Object(Ie.a)(r,c);r.assign(l)}else{const e=Object(he.a)(Object(fe.a)(i,this.decay),Object(fe.a)(Object(be.a)(s),1-this.decay)),t=Object(he.a)(Object(fe.a)(o,this.momentum),Object(pe.a)(Object(fe.a)(s,this.learningRate),Object(me.a)(Object(he.a)(e,this.epsilon))));i.assign(e),o.assign(t);const n=Object(Ie.a)(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(de.d)(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(de.d)(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Object(de.d)(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}_e.className="RMSProp",ie(_e);class $e{static sgd(e){return new Ee(e)}static momentum(e,t,n=!1){return new Ae(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new _e(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Ne(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new we(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new je(e,t,n,r,a)}static adagrad(e,t=.1){return new ke(e,t)}}var Re=n("I79q"),Fe=n("EysY"),De=n("V+B2");const Me={sgd:$e.sgd,momentum:$e.momentum,adadelta:$e.adadelta,adagrad:$e.adagrad,rmsprop:$e.rmsprop,adamax:$e.adamax,adam:$e.adam},ze="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Le(){return new Promise(e=>ze(()=>e()))}var Pe=n("NuWS");function Be(e,t){const n=e[0].length;e.forEach((e,t)=>{y.b(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),y.b(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)y.b(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function Ve(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var We=n("uBja"),Ue=n("R0ls");const Ge=30;function He(e){return e<=Ge?e:Object(y.G)(e,Math.floor(Math.sqrt(e)))}function Ke(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function qe(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Xe(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ze(e,t,n,r=!0){const a=[];a.push(r?e[0]/n:e[0]*n);for(let s=1;s<e.length;++s)a.push(s<=t.length?r?t[s-1]*e[s]:e[s]/t[s-1]:e[s]);return a}function Ye(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Je(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Qe=n("fN6/");const et=.3275911,tt=.254829592,nt=-.284496736,rt=1.421413741,at=-1.453152027,st=1.061405429;var it=n("spQH");function ot(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function ut(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ct(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function lt(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function dt(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ht(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function pt(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function ft(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const mt=/->/g;function bt(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(mt,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");Object(y.b)(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<a.length;++d){const e=a[d];if(!s.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===o.indexOf(e)&&","!==e&&o.push(e)}const u=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let e=0;e<s[d].length;++e)u[d].push(o.indexOf(s[d][e]))}const c=o.length,l=[];for(let d=a.length;d<c;++d)l.push(d);return{allDims:o,summedDims:l,idDims:u}}function gt(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function yt(e,t,n){const r=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:Object(y.b)(r[t[a][n]]===e[n],()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`)}}function xt(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);const s=[];for(let i=0;i<n.length;++i){const e=wt(t,n[i]);for(const t of e)-1===s.indexOf(t)&&(r[i].push(t),s.push(t))}return{path:n,steps:r}}function vt(e){return e.every((e,t)=>e===t)}function wt(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Ot(e,t,n=0){let r=[];if("number"==typeof t)Object(y.b)(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);Object(y.b)(a<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}Object(y.b)(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function kt(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function St(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function It(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Nt(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Tt(e,t){return`size ${e} must be non-negative, not ${t}`}function Ct(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function jt(e,t){return`Input to reshape is a SparseTensor with ${Object(y.O)(e)}\n  dense values, but the requested shape requires a multiple of ${Object(y.O)(t)}. inputShape=${e} outputShape= ${t}`}function Et(e,t){return`Input to reshape is a tensor with ${Object(y.O)(e)} dense values, but the requested shape has ${Object(y.O)(t)}. inputShape=${e} outputShape=${t}`}function At(){return"segment ids must be >= 0"}function _t(){return"segment ids are not increasing"}function $t(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Rt(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Ft(e,t){let n,r=!1;for(e<=Ge?(n=e,r=!0):n=Object(y.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(y.G)(e,n+1);return n}function Dt(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)r.push(s!==t?e[s]:n);return r}function Mt(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const i=e.shape[n],o=[];let u=1,c=1,l=1;for(let d=0;d<r;++d)o.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<n;d++)o.push(e.shape[d]),c*=e.shape[d];for(let d=r;d<a;d++)o.push(t.shape[d]);for(let d=n+1;d<s;d++)o.push(e.shape[d]),l*=e.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}function zt(e){try{return e.map(e=>Object(ce.decodeString)(e))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Lt(e){return e.map(e=>Object(ce.encodeString)(e))}var Pt=n("ftYm"),Bt=n("g4m1"),Vt=n("AoCb"),Wt=n("i4e/")},E1lT:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({log_:function(e){const t=Object(s.a)(e,"x","log","float32");return r.a.runKernel(a.Eb,{x:t})}})},EWu9:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("o/e8"),a=n("atXS"),s=n("3X4V"),i=n("g4+C"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({separableConv2d_:function(e,t,n,o,c,l=[1,1],d="NHWC"){const h=Object(r.a)(e,"x","separableConv2d"),p=Object(r.a)(t,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),a.b(4===p.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),a.b(4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),a.b(1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),a.b(1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);const g=p.shape[2],y=p.shape[3];a.b(f.shape[2]===g*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${f.shape[2]}.`);const x=Object(i.a)(m,p,o,c,d,l),v=Object(s.a)(x,f,1,"valid",d);return b?Object(u.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},EhIR:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},Ei6o:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({mean_:function(e,t=null,n=!1){const i=Object(s.a)(e,"x","mean");return r.a.runKernel(a.Sb,{x:i},{axis:t,keepDims:n})}})},EjVc:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a,s){const i=t.length,o=r.util.sizeFromShape(t),u=r.util.computeStrides(t),c=r.util.computeStrides(s),l=r.util.getTypedArrayFromDType(n,r.util.sizeFromShape(s));for(let d=0;d<o;++d){const t=r.util.indexToLoc(d,i,u),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];l[r.util.locToIndex(n,i,c)]=e[d]}return l}},EysY:function(e,t,n){"use strict";n.d(t,"b",function(){return a.a}),n.d(t,"c",function(){return s.a}),n.d(t,"d",function(){return i.a}),n.d(t,"e",function(){return o.a}),n.d(t,"f",function(){return u.a}),n.d(t,"g",function(){return c.a}),n.d(t,"h",function(){return l.a}),n.d(t,"i",function(){return d.a}),n.d(t,"j",function(){return h.a}),n.d(t,"k",function(){return p.a}),n.d(t,"l",function(){return f.a}),n.d(t,"m",function(){return m.a}),n.d(t,"n",function(){return b.a}),n.d(t,"o",function(){return g.a}),n.d(t,"p",function(){return y.a}),n.d(t,"q",function(){return x.a}),n.d(t,"r",function(){return C}),n.d(t,"w",function(){return j.a}),n.d(t,"s",function(){return E.a}),n.d(t,"t",function(){return _}),n.d(t,"u",function(){return $}),n.d(t,"v",function(){return R}),n.d(t,"x",function(){return F.a}),n.d(t,"z",function(){return D.a}),n.d(t,"A",function(){return M.a}),n.d(t,"B",function(){return z.a}),n.d(t,"C",function(){return L.a}),n.d(t,"D",function(){return P.a}),n.d(t,"E",function(){return B.a}),n.d(t,"F",function(){return V.a}),n.d(t,"G",function(){return W.a}),n.d(t,"H",function(){return w.a}),n.d(t,"I",function(){return U}),n.d(t,"J",function(){return G}),n.d(t,"K",function(){return H}),n.d(t,"L",function(){return K}),n.d(t,"M",function(){return q.a}),n.d(t,"N",function(){return X.a}),n.d(t,"O",function(){return Z.a}),n.d(t,"P",function(){return Y.a}),n.d(t,"Q",function(){return Q}),n.d(t,"R",function(){return ee.a}),n.d(t,"S",function(){return te.a}),n.d(t,"U",function(){return ne.a}),n.d(t,"V",function(){return re.a}),n.d(t,"W",function(){return ae.a}),n.d(t,"X",function(){return se.a}),n.d(t,"Y",function(){return ie.a}),n.d(t,"Z",function(){return ce}),n.d(t,"ab",function(){return le.a}),n.d(t,"bb",function(){return de.a}),n.d(t,"cb",function(){return he.a}),n.d(t,"db",function(){return pe.a}),n.d(t,"fb",function(){return fe.a}),n.d(t,"gb",function(){return me.a}),n.d(t,"ib",function(){return be.a}),n.d(t,"jb",function(){return ge.a}),n.d(t,"kb",function(){return ye.a}),n.d(t,"lb",function(){return xe.a}),n.d(t,"mb",function(){return ve.a}),n.d(t,"nb",function(){return we.a}),n.d(t,"ob",function(){return Se}),n.d(t,"qb",function(){return Ie.a}),n.d(t,"rb",function(){return Ne.a}),n.d(t,"sb",function(){return Te.a}),n.d(t,"ub",function(){return Ce.a}),n.d(t,"wb",function(){return je.a}),n.d(t,"xb",function(){return Ee.a}),n.d(t,"zb",function(){return Ae.a}),n.d(t,"Db",function(){return _e.a}),n.d(t,"Eb",function(){return $e.a}),n.d(t,"Fb",function(){return Re.a}),n.d(t,"Gb",function(){return Fe.a}),n.d(t,"Hb",function(){return De.a}),n.d(t,"Ib",function(){return Me.a}),n.d(t,"Kb",function(){return ze.a}),n.d(t,"Lb",function(){return Le.a}),n.d(t,"Mb",function(){return Pe.a}),n.d(t,"Nb",function(){return Be.a}),n.d(t,"Ob",function(){return Ve.a}),n.d(t,"Pb",function(){return We.a}),n.d(t,"Qb",function(){return Ue.a}),n.d(t,"Rb",function(){return Ge.a}),n.d(t,"Sb",function(){return He.a}),n.d(t,"Tb",function(){return Ke.a}),n.d(t,"Ub",function(){return qe.a}),n.d(t,"Wb",function(){return Xe.a}),n.d(t,"Xb",function(){return O.a}),n.d(t,"Yb",function(){return Ze.a}),n.d(t,"Zb",function(){return Ye.a}),n.d(t,"ac",function(){return Je.a}),n.d(t,"bc",function(){return Qe.a}),n.d(t,"cc",function(){return et.a}),n.d(t,"dc",function(){return tt.a}),n.d(t,"ec",function(){return at}),n.d(t,"fc",function(){return st.a}),n.d(t,"gc",function(){return it.a}),n.d(t,"hc",function(){return ot.a}),n.d(t,"ic",function(){return ut.a}),n.d(t,"jc",function(){return ht}),n.d(t,"lc",function(){return k.a}),n.d(t,"mc",function(){return pt}),n.d(t,"nc",function(){return ft.a}),n.d(t,"oc",function(){return mt.a}),n.d(t,"qc",function(){return bt.a}),n.d(t,"rc",function(){return gt.a}),n.d(t,"sc",function(){return nt.a}),n.d(t,"tc",function(){return yt.a}),n.d(t,"vc",function(){return xt}),n.d(t,"wc",function(){return vt.a}),n.d(t,"xc",function(){return wt}),n.d(t,"yc",function(){return Ot}),n.d(t,"zc",function(){return kt}),n.d(t,"Ac",function(){return St}),n.d(t,"Bc",function(){return It.a}),n.d(t,"Cc",function(){return Nt.a}),n.d(t,"Dc",function(){return Tt.a}),n.d(t,"Ec",function(){return Ct.a}),n.d(t,"Fc",function(){return jt.a}),n.d(t,"Gc",function(){return Et}),n.d(t,"Hc",function(){return _t}),n.d(t,"Ic",function(){return $t}),n.d(t,"Jc",function(){return Rt.a}),n.d(t,"Kc",function(){return Ft.a}),n.d(t,"Lc",function(){return Dt.a}),n.d(t,"Mc",function(){return Mt.a}),n.d(t,"Nc",function(){return zt.a}),n.d(t,"Oc",function(){return Lt.a}),n.d(t,"Pc",function(){return Oe.a}),n.d(t,"Qc",function(){return Pt.a}),n.d(t,"Rc",function(){return Bt}),n.d(t,"Sc",function(){return Vt}),n.d(t,"Tc",function(){return Wt}),n.d(t,"Uc",function(){return Ut}),n.d(t,"Wc",function(){return Gt.a}),n.d(t,"Xc",function(){return Ht.a}),n.d(t,"Yc",function(){return Kt.a}),n.d(t,"bd",function(){return qt.a}),n.d(t,"cd",function(){return Xt.a}),n.d(t,"dd",function(){return Zt.a}),n.d(t,"ed",function(){return I.a}),n.d(t,"fd",function(){return Yt.a}),n.d(t,"hd",function(){return Jt.a}),n.d(t,"id",function(){return Qt.a}),n.d(t,"jd",function(){return N.a}),n.d(t,"kd",function(){return en}),n.d(t,"ld",function(){return tn}),n.d(t,"md",function(){return nn}),n.d(t,"nd",function(){return rn}),n.d(t,"od",function(){return an.a}),n.d(t,"pd",function(){return sn.a}),n.d(t,"qd",function(){return on.a}),n.d(t,"pb",function(){return un.a}),n.d(t,"yb",function(){return cn.a}),n.d(t,"Cb",function(){return ln.a}),n.d(t,"Vc",function(){return dn.a}),n.d(t,"ud",function(){return hn.a}),n.d(t,"vd",function(){return pn.a}),n.d(t,"wd",function(){return lt.a}),n.d(t,"xd",function(){return fn.a}),n.d(t,"yd",function(){return mn.a}),n.d(t,"zd",function(){return bn.a}),n.d(t,"Ad",function(){return gn.a}),n.d(t,"Bd",function(){return yn.a}),n.d(t,"Dd",function(){return dt.a}),n.d(t,"Ed",function(){return xn.a}),n.d(t,"Fd",function(){return vn.a}),n.d(t,"Gd",function(){return T.a}),n.d(t,"Hd",function(){return wn.a}),n.d(t,"Id",function(){return On.a}),n.d(t,"Jd",function(){return Sn}),n.d(t,"Kd",function(){return In.a}),n.d(t,"Ld",function(){return Nn}),n.d(t,"Md",function(){return Tn}),n.d(t,"Nd",function(){return Cn}),n.d(t,"Od",function(){return ke.a}),n.d(t,"Pd",function(){return jn.a}),n.d(t,"Rd",function(){return En.a}),n.d(t,"Sd",function(){return An.a}),n.d(t,"Td",function(){return _n.a}),n.d(t,"Ud",function(){return $n.a}),n.d(t,"Vd",function(){return Rn.a}),n.d(t,"Wd",function(){return Fn}),n.d(t,"Xd",function(){return Dn.a}),n.d(t,"Yd",function(){return Mn.a}),n.d(t,"Zd",function(){return zn.a}),n.d(t,"ae",function(){return Ln.a}),n.d(t,"y",function(){return Pn}),n.d(t,"Qd",function(){return Bn.a}),n.d(t,"pc",function(){return Vn.a}),n.d(t,"kc",function(){return Un}),n.d(t,"Zc",function(){return Gn.a}),n.d(t,"ad",function(){return Hn.a}),n.d(t,"sd",function(){return Kn.a}),n.d(t,"vb",function(){return qn.a}),n.d(t,"eb",function(){return Xn}),n.d(t,"hb",function(){return Zn}),n.d(t,"T",function(){return Yn}),n.d(t,"Bb",function(){return Jn}),n.d(t,"uc",function(){return S.b}),n.d(t,"a",function(){return S.a}),n.d(t,"Ab",function(){return Yr}),n.d(t,"Jb",function(){return Jr}),n.d(t,"Vb",function(){return Qr}),n.d(t,"td",function(){return Xr}),n.d(t,"tb",function(){return r}),n.d(t,"gd",function(){return Zr}),n.d(t,"rd",function(){return ea}),n.d(t,"Cd",function(){return ta});var r={};n.r(r),n.d(r,"conv2d",function(){return sr}),n.d(r,"depthwiseConv2d",function(){return ur}),n.d(r,"matMul",function(){return cr});var a=n("iuCH"),s=n("o3Rt"),i=n("RhVc"),o=n("kRdc"),u=n("SFB9"),c=n("34HJ"),l=n("RRa9"),d=n("6J+n"),h=n("20lx"),p=n("Ig+c"),f=n("3FnS"),m=n("fjZN"),b=n("YAKK"),g=n("0ahe"),y=n("l0gX"),x=n("ulO0"),v=n("o/e8"),w=n("ZJ6U"),O=n("SHv8"),k=n("parS"),S=n("VO80"),I=n("/7N0"),N=n("bTzI"),T=n("iIjY");const C=Object(S.b)({basicLSTMCell_:function(e,t,n,r,a,s){const i=Object(v.a)(e,"forgetBias","basicLSTMCell"),u=Object(v.a)(t,"lstmKernel","basicLSTMCell"),c=Object(v.a)(n,"lstmBias","basicLSTMCell"),l=Object(v.a)(r,"data","basicLSTMCell"),d=Object(v.a)(a,"c","basicLSTMCell"),h=Object(v.a)(s,"h","basicLSTMCell"),p=Object(w.a)([l,h],1),f=Object(O.a)(p,u),m=Object(o.a)(f,c),b=m.shape[1]/4,g=[m.shape[0],b],y=Object(N.a)(m,[0,0],g),x=Object(N.a)(m,[0,b],g),S=Object(N.a)(m,[0,2*b],g),C=Object(N.a)(m,[0,3*b],g),j=Object(o.a)(Object(k.a)(Object(I.a)(y),Object(T.a)(x)),Object(k.a)(d,Object(I.a)(Object(o.a)(i,S))));return[j,Object(k.a)(Object(T.a)(j),Object(I.a)(C))]}});var j=n("OygE"),E=n("cdtJ"),A=n("atXS");const _=Object(S.b)({batchNorm2d_:function(e,t,n,r,a,s){const i=Object(v.a)(e,"x","batchNorm"),o=Object(v.a)(t,"mean","batchNorm"),u=Object(v.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v.a)(a,"scale","batchNorm")),null!=r&&(l=Object(v.a)(r,"offset","batchNorm")),A.b(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),A.b(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),A.b(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&A.b(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=l&&A.b(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Object(E.a)(i,o,u,l,c,s)}}),$=Object(S.b)({batchNorm3d_:function(e,t,n,r,a,s){const i=Object(v.a)(e,"x","batchNorm"),o=Object(v.a)(t,"mean","batchNorm"),u=Object(v.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v.a)(a,"scale","batchNorm")),null!=r&&(l=Object(v.a)(r,"offset","batchNorm")),A.b(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),A.b(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),A.b(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&A.b(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=l&&A.b(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Object(E.a)(i,o,u,l,c,s)}}),R=Object(S.b)({batchNorm4d_:function(e,t,n,r,a,s){const i=Object(v.a)(e,"x","batchNorm"),o=Object(v.a)(t,"mean","batchNorm"),u=Object(v.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v.a)(a,"scale","batchNorm")),null!=r&&(l=Object(v.a)(r,"offset","batchNorm")),A.b(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),A.b(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),A.b(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&A.b(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=l&&A.b(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Object(E.a)(i,o,u,l,c,s)}});var F=n("BMSg"),D=n("IuP1"),M=n("SNsm"),z=n("BD40"),L=n("3rNm"),P=n("WWBm"),B=n("wI/y"),V=n("8Km0"),W=n("B3db");const U=Object(S.b)({concat1d_:function(e){return Object(w.a)(e,0)}}),G=Object(S.b)({concat2d_:function(e,t){return Object(w.a)(e,t)}}),H=Object(S.b)({concat3d_:function(e,t){return Object(w.a)(e,t)}}),K=Object(S.b)({concat4d_:function(e,t){return Object(w.a)(e,t)}});var q=n("dnXz"),X=n("3X4V"),Z=n("zR+/"),Y=n("FZCF"),J=n("mdDO");const Q=Object(S.b)({conv3dTranspose_:function(e,t,n,r,a){const s=Object(v.a)(e,"x","conv3dTranspose"),i=Object(v.a)(t,"filter","conv3dTranspose");return Object(J.a)(n,s,i,r,a)}});var ee=n("7/dO"),te=n("waK1"),ne=n("F6O2"),re=n("HmhO"),ae=n("LyxI"),se=n("Nk7E"),ie=n("g4+C"),oe=n("auKK"),ue=n("wFtI");const ce=Object(S.b)({diag_:function(e){const t=Object(v.a)(e,"x","diag");return oe.a.runKernel(ue.T,{x:t})}});var le=n("wXC5"),de=n("x3y4"),he=n("ARu+"),pe=n("Kfzt"),fe=n("dauL"),me=n("njhW"),be=n("ubnP"),ge=n("jgXy"),ye=n("TlOw"),xe=n("TyAZ"),ve=n("2ugP"),we=n("G6IW"),Oe=n("NclT"),ke=n("jXH2");const Se=Object(S.b)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Object(z.a)([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);const i=Object(Oe.a)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Object(ke.a)(Object(ve.a)(i,0),[n[0],1,1]);if(2===n.length)return Object(ke.a)(Object(ve.a)(Object(ve.a)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(ke.a)(Object(ve.a)(Object(ve.a)(Object(ve.a)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Ie=n("RrjA"),Ne=n("02mo"),Te=n("UI8N"),Ce=n("kaMP"),je=n("zvA9"),Ee=n("uy0A"),Ae=n("JLAb"),_e=n("/AvP"),$e=n("WYAb"),Re=n("b++O"),Fe=n("bzdD"),De=n("4f3O"),Me=n("shz4"),ze=n("WJRb"),Le=n("4QEz"),Pe=n("E1lT"),Be=n("RrGL"),Ve=n("wxQM"),We=n("gErV"),Ue=n("r9q9"),Ge=n("4zPZ"),He=n("7wDt"),Ke=n("8YN0"),qe=n("0l+w"),Xe=n("DqBt"),Ze=n("wCH+"),Ye=n("n+ZZ"),Je=n("U/2n"),Qe=n("i8k8"),et=n("CfTU"),tt=n("Ei6o"),nt=n("wion"),rt=n("NNfn");function at(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Object(v.a)(e,"x","meshgrid",e instanceof rt.a?e.dtype:"float32");if(void 0===t)return[r];let a=Object(v.a)(t,"y","meshgrid",t instanceof rt.a?t.dtype:"float32");const s=Object(A.O)(r.shape),i=Object(A.O)(a.shape);return"xy"===n?(r=Object(Oe.a)(r,[1,-1]),a=Object(Oe.a)(a,[-1,1]),[Object(O.a)(Object(nt.a)([i,1],r.dtype),r),Object(O.a)(a,Object(nt.a)([1,s],a.dtype))]):(r=Object(Oe.a)(r,[-1,1]),a=Object(Oe.a)(a,[1,-1]),[Object(O.a)(r,Object(nt.a)([1,i],r.dtype)),Object(O.a)(Object(nt.a)([s,1],a.dtype),a)])}var st=n("rm0a"),it=n("8OX7"),ot=n("k9tH"),ut=n("RhH0"),ct=n("NuWS"),lt=n("k7Jv"),dt=n("oAkI");const ht=Object(S.b)({moments_:function(e,t=null,n=!1){e=Object(v.a)(e,"x","moments");const r=Object(A.I)(t,e.shape),a=Object(tt.a)(e,r,n);let s=a.shape;n||(s=Object(ct.e)(a.shape,r));const i=Object(lt.a)(Object(dt.a)(Object(L.a)(e,"float32"),Object(Oe.a)(a,s)));return{mean:a,variance:Object(tt.a)(i,r,n)}}}),pt=Object(S.b)({multiRNNCell_:function(e,t,n,r){const a=Object(v.a)(t,"data","multiRNNCell"),s=Object(v.b)(n,"c","multiRNNCell"),i=Object(v.b)(r,"h","multiRNNCell");let o=a;const u=[];for(let d=0;d<e.length;d++){const t=e[d](o,s[d],i[d]);u.push(t[0]),u.push(t[1]),o=t[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}});var ft=n("Pvz5"),mt=n("O7f5"),bt=n("1N4k"),gt=n("4iwy"),yt=n("DbV5");const xt=Object(S.b)({outerProduct_:function(e,t){const n=Object(v.a)(e,"v1","outerProduct"),r=Object(v.a)(t,"v2","outerProduct");A.b(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=Object(Oe.a)(n,[-1,1]),s=Object(Oe.a)(r,[1,-1]);return Object(O.a)(a,s)}});var vt=n("DrVt");const wt=Object(S.b)({pad1d_:function(e,t,n=0){return Object(A.b)(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Object(vt.a)(e,[t],n)}}),Ot=Object(S.b)({pad2d_:function(e,t,n=0){return Object(A.b)(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(vt.a)(e,t,n)}}),kt=Object(S.b)({pad3d_:function(e,t,n=0){return Object(A.b)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(vt.a)(e,t,n)}}),St=Object(S.b)({pad4d_:function(e,t,n=0){return Object(A.b)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(vt.a)(e,t,n)}});var It=n("6vQL"),Nt=n("yfHJ"),Tt=n("Ug8H"),Ct=n("dWjR"),jt=n("867m");const Et=Object(S.b)({rand_:function(e,t,n){const r=Object(A.O)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return oe.a.makeTensor(a,e,n)}});var At=n("1OSX");const _t=Object(S.b)({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new At.b(t,n,r,a),i=Object(z.a)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),$t=Object(S.b)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new At.a(t,n,r,!1,a),i=Object(z.a)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var Rt=n("hinG"),Ft=n("hNYx"),Dt=n("17CO"),Mt=n("tQDl"),zt=n("kXpR"),Lt=n("Rqg+"),Pt=n("0I63");const Bt=Object(S.b)({reverse1d_:function(e){const t=Object(v.a)(e,"x","reverse");return A.b(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Object(Pt.a)(t,0)}}),Vt=Object(S.b)({reverse2d_:function(e,t){const n=Object(v.a)(e,"x","reverse");return A.b(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Object(Pt.a)(n,t)}}),Wt=Object(S.b)({reverse3d_:function(e,t){const n=Object(v.a)(e,"x","reverse");return A.b(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Object(Pt.a)(n,t)}}),Ut=Object(S.b)({reverse4d_:function(e,t){const n=Object(v.a)(e,"x","reverse");return A.b(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Object(Pt.a)(n,t)}});var Gt=n("CKnt"),Ht=n("Xyqe"),Kt=n("AV8V"),qt=n("s57M"),Xt=n("EWu9"),Zt=n("90yW"),Yt=n("Hfat"),Jt=n("aTLu"),Qt=n("XcSs");const en=Object(S.b)({slice1d_:function(e,t,n){const r=Object(v.a)(e,"x","slice1d");return A.b(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Object(N.a)(r,[t],[n])}}),tn=Object(S.b)({slice2d_:function(e,t,n){const r=Object(v.a)(e,"x","slice2d");return A.b(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Object(N.a)(r,t,n)}}),nn=Object(S.b)({slice3d_:function(e,t,n){const r=Object(v.a)(e,"x","slice3d");return A.b(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Object(N.a)(r,t,n)}}),rn=Object(S.b)({slice4d_:function(e,t,n){const r=Object(v.a)(e,"x","slice4d");return A.b(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Object(N.a)(r,t,n)}});var an=n("X4fa"),sn=n("n/2y"),on=n("dYAU"),un=n("Grcp"),cn=n("THqV"),ln=n("adw1"),dn=n("th0q"),hn=n("RbuM"),pn=n("Fjpt"),fn=n("QYQ3"),mn=n("0fRV"),bn=n("1U0N"),gn=n("L7Hl"),yn=n("3hph"),xn=n("4FMF"),vn=n("0wrZ"),wn=n("NX3e"),On=n("lg8H"),kn=n("WVnj");function Sn(e,t,n){if(Object(A.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(v.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(kn.a)(e,t,r,n)}var In=n("BbuY");function Nn(e,t,n){if(Object(A.d)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(v.c)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(kn.a)(e,t,r,n)}function Tn(e,t,n){if(Object(A.d)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(v.c)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(kn.a)(e,t,r,n)}function Cn(e,t,n){if(Object(A.d)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(v.c)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(kn.a)(e,t,r,n)}var jn=n("VhY8"),En=n("fmoR"),An=n("hT5K"),_n=n("U/Lz"),$n=n("OkRW"),Rn=n("+QUr");function Fn(e,t=!0,n,r){return oe.a.makeVariable(e,t,n,r)}var Dn=n("Z5Ez"),Mn=n("p4Cv"),zn=n("Wiw4"),Ln=n("oJu+");const Pn=async function(e,t,n){const r=Object(v.a)(e,"tensor","boolMask"),a=Object(v.a)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;A.b(i>0,()=>"mask cannot be scalar"),A.e(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+i;m++)u*=o[m];const c=o.slice(0,s).concat([u],o.slice(s+i)),l=Object(Oe.a)(r,c),d=Object(Oe.a)(a,[-1]),h=await Object(Mn.a)(d),p=Object(mn.a)(h,[1]),f=Object(Ce.a)(l,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f};var Bn=n("yRKQ"),Vn=n("91d6"),Wn=n("dsKV");const Un=Object(S.b)({movingAverage_:function(e,t,n,r,a=!0){const s=Object(v.a)(e,"v","movingAverage"),i=Object(v.a)(t,"x","movingAverage"),u=Object(v.a)(n,"decay","movingAverage");Object(Wn.assertTypesMatch)(s,i),A.b(A.a(s.shape,i.shape),()=>"Shape mismatch in v and x");const c=Object(Kt.a)(1),l=Object(dt.a)(c,u);let d=Object(k.a)(Object(dt.a)(i,s),l);if(a){A.b(null!=r,()=>"When using zeroDebias: true, step is required.");const e=Object(v.a)(r,"step","movingAverage");d=Object(de.a)(d,Object(dt.a)(c,Object(Nt.a)(u,e)))}return Object(o.a)(s,d)}});var Gn=n("i/oj"),Hn=n("WXLG"),Kn=n("vGLV"),qn=n("ukBL");const Xn=Object(S.b)({dropout_:function(e,t,n,r){const a=Object(v.a)(e,"x","dropout");if(A.b("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),A.b(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof rt.a?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(A.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)n.push(null==t[r]&&null!=e.shape[r]?e.shape[r]:t[r]);return n}return t}(a,n),i=1-t,u=Object(de.a)(Object(Ne.a)(Object(o.a)(Object(Rt.a)(s,0,1,"float32",r),i)),i);return Object(k.a)(a,u)}});function Zn(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Yn(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Object(On.a)(a,"float32")}const Jn=async function(e,t,n=1){const r=Object(v.a)(e,"predictions","inTopK"),a=Object(v.a)(t,"targets","inTopK");Object(A.b)(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),Object(A.b)(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),Object(A.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(A.b)(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const i=await r.data(),o=await a.data(),[u,c]=[i.length/s,s],l=Object(A.o)("bool",u);for(let d=0;d<u;d++){const e=d*c,t=i.subarray(e,e+c),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort((e,t)=>t.value-e.value),l[d]=0;for(let a=0;a<n;a++)if(r[a].index===o[d]){l[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(wn.a)(l,a.shape,"bool")};var Qn=n("U45G"),er=n("Um8L"),tr=n("D2/b"),nr=n("c9N1"),rr=n("uBja"),ar=n("R0ls");const sr=Object(S.b)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(c=c||"linear",!1===Object(ar.d)(oe.a.state.gradientDepth,c)){A.b("NHWC"===a,()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let h=Object(X.a)(e,t,n,r,a,s,i);return null!=u&&(h=Object(o.a)(h,u)),Object(ar.a)(h,c,l,d)}const h=Object(v.a)(e,"x","conv2d","float32"),p=Object(v.a)(t,"filter","conv2d","float32");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(Oe.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A.b(4===f.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),A.b(4===p.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),rr.a("fused conv2d",r,i);const b="NHWC"===a?f.shape[3]:f.shape[1];A.b(p.shape[2]===b,()=>`Error in conv2d: depth of input (${b}) must match input depth for filter ${p.shape[2]}.`),A.b(rr.i(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const g=rr.b(f.shape,p.shape,n,s,r,i);let y,x;if(null!=u&&(y=Object(v.a)(u,"bias","fused conv2d"),[y]=Object(Wn.makeTypesMatch)(y,h),"NHWC"===a?er.assertAndGetBroadcastShape(g.outShape,y.shape):(A.b(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),A.b(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`))),null!=l){const e=l.shape;if(A.b(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)A.b(1===e[0]||e[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`);else if(3===e.length)try{er.assertAndGetBroadcastShape(e,g.outShape)}catch(S){throw Error(`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`)}x=Object(v.a)(l,"prelu weights","fused conv2d")}const w=(e,t)=>{A.b("NHWC"===a,()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);const[i,o,u,l]=t,d=Object(ar.c)(e,u,c);A.b(rr.j(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const h=[Object(nr.a)(o.shape,d,i,n,r),Object(tr.a)(o,d,i.shape,n,r)];if(null!=l){const e=Object(ar.b)(l,d);h.push(e)}return h},O={x:f,filter:p,bias:y,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};return null==u?Object(Qn.a)((e,t,n)=>{let r=oe.a.runKernel(ue.mb,O,k);return n([t,e,r]),m&&(r=Object(Oe.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}})(f,p):Object(Qn.a)((e,t,n,r)=>{let a=oe.a.runKernel(ue.mb,O,k);return r([t,e,a,n]),m&&(a=Object(Oe.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}})(f,p,y)}});var ir=n("aSZd"),or=n("jLCh");const ur=Object(S.b)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(!1===Object(ar.d)(oe.a.state.gradientDepth,c)){let h=Object(ie.a)(e,t,n,r,a,s,i);return null!=u&&(h=Object(o.a)(h,u)),Object(ar.a)(h,c,l,d)}const h=Object(v.a)(e,"x","depthwiseConv2d","float32"),p=Object(v.a)(t,"filter","depthwiseConv2d","float32");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(Oe.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A.b(4===f.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),A.b(4===p.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),A.b(f.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null==s&&(s=[1,1]),A.b(rr.i(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),rr.a("fused depthwiseConv2d",r,i);const b=rr.b(f.shape,p.shape,n,s,r,i,!0);let g,y;null!=u&&(g=Object(v.a)(u,"bias","fused conv2d"),[g]=Object(Wn.makeTypesMatch)(g,h),er.assertAndGetBroadcastShape(b.outShape,g.shape)),null!=l&&(y=Object(v.a)(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{A.b(rr.j(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,o,u,l]=t,d=Object(ar.c)(e,u,c),h=Object(or.a)(o.shape,d,a,n,r,s,i),p=Object(ir.a)(o,d,a.shape,n,r,s,i);return null!=l?[h,p,Object(ar.b)(g,d)]:[h,p]},w={x:f,filter:p,bias:g,preluActivationWeights:y},O={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};return null==u?Object(Qn.a)((e,t,n)=>{let r=oe.a.runKernel(ue.nb,w,O);return n([t,e,r]),m&&(r=Object(Oe.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(f,p):Object(Qn.a)((e,t,n,r)=>{let a=oe.a.runKernel(ue.nb,w,O);return r([t,e,a,n]),m&&(a=Object(Oe.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(f,p,g)}}),cr=Object(S.b)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:u}){if(!1===Object(ar.d)(oe.a.state.gradientDepth,s)){let c=Object(O.a)(e,t,n,r);return null!=a&&(c=Object(o.a)(c,a)),Object(ar.a)(c,s,i,u)}let c=Object(v.a)(e,"a","fused matMul"),l=Object(v.a)(t,"b","fused matMul");[c,l]=Object(Wn.makeTypesMatch)(c,l);const d=n?c.shape[c.rank-2]:c.shape[c.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=c.shape.slice(0,-2),b=l.shape.slice(0,-2),g=A.O(m),y=A.O(b);A.b(d===h,()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=er.assertAndGetBroadcastShape(c.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,f]),w=n?Object(Oe.a)(c,[g,d,p]):Object(Oe.a)(c,[g,p,d]),k=r?Object(Oe.a)(l,[y,f,h]):Object(Oe.a)(l,[y,h,f]);let S,I;null!=a&&(S=Object(v.a)(a,"bias","fused matMul"),[S]=Object(Wn.makeTypesMatch)(S,c),er.assertAndGetBroadcastShape(x,S.shape)),null!=i&&(I=Object(v.a)(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,u,c]=t,l=Object(ar.c)(Object(Oe.a)(e,u.shape),u,s);let d,h;return n||r?!n&&r?(d=Object(O.a)(l,o,!1,!1),h=Object(O.a)(l,i,!0,!1)):n&&!r?(d=Object(O.a)(o,l,!1,!0),h=Object(O.a)(i,l,!1,!1)):(d=Object(O.a)(o,l,!0,!0),h=Object(O.a)(l,i,!0,!0)):(d=Object(O.a)(l,o,!1,!0),h=Object(O.a)(i,l,!0,!1)),null!=a?[d,h,Object(ar.b)(c,l)]:[d,h]},T={a:w,b:k,bias:S,preluActivationWeights:I},C={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:u};return null==a?Object(Qn.a)((e,t,n)=>{const r=oe.a.runKernel(ue.od,T,C);return n([e,t,r]),{value:Object(Oe.a)(r,x),gradFunc:N}})(w,k):Object(Qn.a)((e,t,n,r)=>{const a=oe.a.runKernel(ue.od,T,C);return r([e,t,a,n]),{value:Object(Oe.a)(a,x),gradFunc:N}})(w,k,S)}}),lr=Object(S.b)({hammingWindow_:function(e){return Yn(e,.54,.46)}}),dr=Object(S.b)({hannWindow_:function(e){return Yn(e,.5,.5)}}),hr=Object(S.b)({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(Object(N.a)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Object(w.a)([Object(N.a)(e,s,t-r),Object(Ie.a)([r],a)]);i.push(o),s+=n}return 0===i.length?Sn([],[0,t]):Object(Oe.a)(Object(w.a)(i),[i.length,t])}}),pr=Object(S.b)({stft_:function(e,t,n,r,a=dr){null==r&&(r=Zn(t));const s=hr(e,t,n),i=Object(k.a)(s,a(t));return Object(dn.a)(i,r)}}),fr=Object(S.b)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=Object(v.a)(e,"image","cropAndResize"),o=Object(v.a)(t,"boxes","cropAndResize","float32"),u=Object(v.a)(n,"boxInd","cropAndResize","int32"),c=o.shape[0];return A.b(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),A.b(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),A.b(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),A.b(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),A.b(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),A.b("bilinear"===a||"nearest"===a,()=>`method must be bilinear or nearest, but was ${a}`),oe.a.runKernel(ue.L,{image:i,boxes:o,boxInd:u},{method:a,extrapolationValue:s,cropSize:r})}}),mr=Object(S.b)({flipLeftRight_:function(e){const t=Object(v.a)(e,"image","flipLeftRight","float32");return A.b(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),oe.a.runKernel(ue.hb,{image:t},{})}}),br=Object(S.b)({grayscaleToRGB_:function(e){const t=Object(v.a)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];A.b(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),A.b(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Object(ke.a)(t,a)}}),gr=Object(S.b)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Object(v.a)(e,"image","rotateWithOffset","float32");return A.b(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`),oe.a.runKernel(ue.yc,{image:a},{radians:t,fillValue:n,center:r})}});function yr(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),A.b(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),A.b(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),A.b(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),A.b(1===t.rank,()=>"scores must be a 1D tensor"),A.b(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),A.b(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const xr=Object(S.b)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(v.a)(e,"boxes","nonMaxSuppression","float32"),i=Object(v.a)(t,"scores","nonMaxSuppression","float32"),o=yr(s,i,n,r,a);return oe.a.runKernel(ue.ac,{boxes:s,scores:i},{maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold})}});var vr=n("g4m1");const wr=Object(S.b)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(v.a)(e,"boxes","nonMaxSuppression"),o=Object(v.a)(t,"scores","nonMaxSuppression"),u=yr(i,o,n,r,a,s),c=oe.a.runKernel(ue.cc,{boxes:i,scores:o},{maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma});return{selectedIndices:c[0],selectedScores:c[1]}}}),Or=Object(S.b)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(v.a)(e,"boxes","nonMaxSuppression"),o=Object(v.a)(t,"scores","nonMaxSuppression"),u=yr(i,o,n,r,a,null),c=oe.a.runKernel(ue.bc,{boxes:i,scores:o},{maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s});return{selectedIndices:c[0],validOutputs:c[1]}}});var kr=n("c/ib"),Sr=n("D4ac");const Ir=Object(S.b)({threshold_:function(e,t="binary",n=!1,r=.5){const a=Object(v.a)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,u,c,l,d=Object(k.a)(Object(On.a)([r]),255);if(A.b(3===a.rank,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),A.b(3===a.shape[2]||1===a.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),A.b("int32"===a.dtype||"float32"===a.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),A.b("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===a.shape[2]){[i,u,c]=Object(hn.a)(a,[1,1,1],-1);const e=Object(k.a)(i,.2989),t=Object(k.a)(u,.587),n=Object(k.a)(c,.114);l=Object(o.a)(Object(o.a)(e,t),n)}else l=e;"otsu"===t&&(d=function(e,t){let n,r,a,s,i,u,c=Object(On.a)([-1]),l=Object(On.a)([0]),d=Object(On.a)([0]);for(let h=0;h<e.size-1;h++){n=Object(N.a)(e,0,h+1),r=Object(N.a)(e,h+1),i=Object(de.a)(Object(xn.a)(n),t),u=Object(de.a)(Object(xn.a)(r),t);const p=Object(xn.a)(Object(k.a)(n,Object(Ft.a)(0,n.size)));a=Object(de.a)(p,Object(xn.a)(n));const f=Object(Ie.a)(r.shape,n.size),m=Object(o.a)(Object(Ft.a)(0,r.size),f),b=Object(k.a)(r,m);s=Object(de.a)(Object(xn.a)(b),Object(xn.a)(r));const g=Object(dt.a)(a,s),y=Object(dt.a)(a,s),x=Object(k.a)(i,u);d=Object(k.a)(Object(k.a)(x,g),y);const v=Object(je.a)(d,l);l=Object(Dn.a)(v,d,l),c=Object(Dn.a)(v,Object(On.a)([h]),c)}return c}(Object(F.a)(Object(L.a)(Object(Gt.a)(l),"int32"),Object(wn.a)([]),256),s));const h=n?Object(Me.a)(l,d):Object(je.a)(l,d);return Object(L.a)(Object(k.a)(h,255),"int32")}}),Nr=Object(S.b)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=Object(v.a)(e,"image","transform","float32"),o=Object(v.a)(t,"transforms","transform","float32");return A.b(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),A.b(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A.b(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`),oe.a.runKernel(ue.hd,{image:i,transforms:o},{interpolation:n,fillMode:r,fillValue:a,outputShape:s})}}),Tr=Object(S.b)({bandPart_:function(e,t,n){Object(A.b)(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Object(A.b)(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(v.a)(e,"a","bandPart");Object(A.b)(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Object(Oe.a)(Object(Ft.a)(0,s,1,"int32"),[-1,1]),u=Object(Ft.a)(0,i,1,"int32"),c=Object(dt.a)(o,u),l=Object(Ge.a)(Object(Me.a)(c,Object(Kt.a)(+t,"int32")),Object(Ee.a)(c,Object(Kt.a)(-n,"int32"))),d=Object(zn.a)([s,i],r.dtype);return Object(Oe.a)(Object(bn.a)(Object($n.a)(Object(Oe.a)(r,[-1,s,i])).map(e=>Object(Dn.a)(l,e,d))),a)}}),Cr=Object(S.b)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(A.b)(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(A.b)(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Object(hn.a)(e,e.shape[0],0).map(e=>Object(mn.a)(e,[0]));Object(A.b)(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let a=0;a<e.length;++a)n.push(oe.a.tidy(()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=Object(k.a)(Object(xn.a)(Object(k.a)(n[t],e)),n[t]);e=Object(dt.a)(e,r)}return Object(de.a)(e,Object(Vn.a)(e,"euclidean"))}));return t?Object(bn.a)(n,0):n}});var jr=n("wE5H");function Er(e,t=!1){return oe.a.tidy(()=>{Object(A.b)(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=Se(n),s=Object(V.a)(e);const i=Sn([[1]],[1,1]);let o=Object(V.a)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,c=a;[o,s,a]=oe.a.tidy(()=>{const t=Object(N.a)(s,[e,e],[n-e,1]),u=Object(Vn.a)(t),c=Object(N.a)(s,[e,e],[1,1]),l=Object(Dn.a)(Object(je.a)(c,0),Sn([[-1]]),Sn([[1]])),d=Object(dt.a)(c,Object(k.a)(l,u)),h=Object(de.a)(t,d);o=1===h.shape[0]?Object(V.a)(i):Object(w.a)([i,Object(N.a)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(mt.a)(Object(de.a)(Object(O.a)(l,d),u)),f=Object(N.a)(s,[e,0],[n-e,r]),m=Object(k.a)(p,o),b=Object(Bn.a)(o);if(0===e)s=Object(dt.a)(f,Object(O.a)(m,Object(O.a)(b,f)));else{const t=Object(dt.a)(f,Object(O.a)(m,Object(O.a)(b,f)));s=Object(w.a)([Object(N.a)(s,[0,0],[e,r]),t],0)}const g=Object(Bn.a)(m),y=Object(N.a)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Object(dt.a)(y,Object(O.a)(Object(O.a)(y,o),g));else{const t=Object(dt.a)(y,Object(O.a)(Object(O.a)(y,o),g));a=Object(w.a)([Object(N.a)(a,[0,0],[n,e]),t],1)}return[o,s,a]}),Object(jr.d)([t,u,c])}return!t&&n>r&&(a=Object(N.a)(a,[0,0],[n,r]),s=Object(N.a)(s,[0,0],[r,r])),[a,s]})}const Ar=Object(S.b)({qr_:function(e,t=!1){if(Object(A.b)(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return Er(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Object($n.a)(Object(Oe.a)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach(e=>{const[n,r]=Er(e,t);a.push(n),s.push(r)}),[Object(Oe.a)(Object(bn.a)(a,0),e.shape),Object(Oe.a)(Object(bn.a)(s,0),e.shape)]}}});var _r=n("V+B2");const $r=Object(S.b)({computeWeightedLoss_:function(e,t,n=_r.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(v.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(v.a)(t,"weights","computeWeightedLoss"));const s=null==a?r:Object(k.a)(r,a);if(n===_r.a.NONE)return s;if(n===_r.a.SUM)return Object(xn.a)(s);if(n===_r.a.MEAN){if(null==a)return Object(tt.a)(s);{const e=r.size/a.size,t=Object(de.a)(Object(xn.a)(s),Object(xn.a)(a));return e>1?Object(de.a)(t,Object(Kt.a)(e)):t}}if(n===_r.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(de.a)(Object(xn.a)(s),Object(Kt.a)(r.size));{const e=Object(k.a)(a,Object(nt.a)(r.shape)),t=Object(L.a)(Object(xn.a)(Object(bt.a)(e,Object(Kt.a)(0))),"float32");return Object(de.a)(Object(xn.a)(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),Rr=Object(S.b)({absoluteDifference_:function(e,t,n,r=_r.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(e,"labels","absoluteDifference"),i=Object(v.a)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Object(v.a)(n,"weights","absoluteDifference")),Object(A.e)(s.shape,i.shape,"Error in absoluteDifference: ");const u=Object(a.a)(Object(dt.a)(s,i));return $r(u,o,r)}}),Fr=Object(S.b)({cosineDistance_:function(e,t,n,r,a=_r.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(e,"labels","cosineDistance"),i=Object(v.a)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(v.a)(r,"weights","cosineDistance")),Object(A.e)(s.shape,i.shape,"Error in cosineDistance: ");const u=Object(Kt.a)(1),c=Object(dt.a)(u,Object(xn.a)(Object(k.a)(s,i),n,!0));return $r(c,o,a)}}),Dr=Object(S.b)({hingeLoss_:function(e,t,n,r=_r.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(v.a)(e,"labels","hingeLoss");const s=Object(v.a)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(v.a)(n,"weights","hingeLoss")),Object(A.e)(a.shape,s.shape,"Error in hingeLoss: ");const o=Object(Kt.a)(1);a=Object(dt.a)(Object(k.a)(Object(Kt.a)(2),a),o);const u=Object(zt.a)(Object(dt.a)(o,Object(k.a)(a,s)));return $r(u,i,r)}}),Mr=Object(S.b)({huberLoss_:function(e,t,n,r=1,s=_r.a.SUM_BY_NONZERO_WEIGHTS){const i=Object(v.a)(e,"labels","huberLoss"),u=Object(v.a)(t,"predictions","huberLoss");let c=null;null!=n&&(c=Object(v.a)(n,"weights","huberLoss")),Object(A.e)(i.shape,u.shape,"Error in huberLoss: ");const l=Object(Kt.a)(r),d=Object(a.a)(Object(dt.a)(u,i)),h=Object(it.a)(d,l),p=Object(dt.a)(d,h),f=Object(o.a)(Object(k.a)(Object(Kt.a)(.5),Object(lt.a)(h)),Object(k.a)(l,p));return $r(f,c,s)}}),zr=Object(S.b)({logLoss_:function(e,t,n,r=1e-7,a=_r.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(e,"labels","logLoss"),i=Object(v.a)(t,"predictions","logLoss");let u=null;null!=n&&(u=Object(v.a)(n,"weights","logLoss")),Object(A.e)(s.shape,i.shape,"Error in logLoss: ");const c=Object(Kt.a)(1),l=Object(Kt.a)(r),d=Object(mt.a)(Object(k.a)(s,Object(Pe.a)(Object(o.a)(i,l)))),h=Object(k.a)(Object(dt.a)(c,s),Object(Pe.a)(Object(o.a)(Object(dt.a)(c,i),l))),p=Object(dt.a)(d,h);return $r(p,u,a)}}),Lr=Object(S.b)({meanSquaredError_:function(e,t,n,r=_r.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(v.a)(e,"labels","meanSquaredError"),s=Object(v.a)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(v.a)(n,"weights","meanSquaredError")),Object(A.e)(a.shape,s.shape,"Error in meanSquaredError: ");const o=Object(fn.a)(a,s);return $r(o,i,r)}}),Pr=Object(S.b)({sigmoidCrossEntropy_:function(e,t,n,r=0,s=_r.a.SUM_BY_NONZERO_WEIGHTS){let i=Object(v.a)(e,"multiClassLabels","sigmoidCrossEntropy");const u=Object(v.a)(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(v.a)(n,"weights","sigmoidCrossEntropy")),Object(A.e)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(Kt.a)(r),t=Object(Kt.a)(1),n=Object(Kt.a)(.5);i=Object(o.a)(Object(k.a)(i,Object(dt.a)(t,e)),Object(k.a)(n,e))}const l=function(e,t){const n=Object(v.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(v.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(A.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(zt.a)(r),i=Object(k.a)(r,n),u=Object(Be.a)(Object(xe.a)(Object(mt.a)(Object(a.a)(r))));return Object(o.a)(Object(dt.a)(s,i),u)}(i,u);return $r(l,c,s)}}),Br=Object(S.b)({softmaxCrossEntropy_:function(e,t,n,r=0,a=_r.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(v.a)(e,"onehotLabels","softmaxCrossEntropy");const i=Object(v.a)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(v.a)(n,"weights","softmaxCrossEntropy")),Object(A.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(Kt.a)(r),t=Object(Kt.a)(1),n=Object(Kt.a)(s.shape[1]);s=Object(o.a)(Object(k.a)(s,Object(dt.a)(t,e)),Object(de.a)(e,n))}const c=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Object(Qn.a)((e,t,r)=>{const a=Object(Ue.a)(t,[n],!0),s=Object(dt.a)(Object(L.a)(t,"float32"),a);r([e,s]);const i=Object(mt.a)(Object(k.a)(s,e));return{value:Object(xn.a)(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Object(ct.e)(e.shape,[n]);return[Object(k.a)(Object(Oe.a)(e,s),Object(dt.a)(Object(L.a)(r,"float32"),Object(xe.a)(a))),Object(k.a)(Object(Oe.a)(e,s),Object(dt.a)(Object(xe.a)(a),Object(L.a)(r,"float32")))]}}})(e,t)}(s,i);return $r(c,u,a)}}),Vr=Object(S.b)({sparseFillEmptyRows_:function(e,t,n,r){const a=Object(v.a)(e,"indices","sparseFillEmptyRows","int32"),s=Object(v.a)(t,"values","sparseFillEmptyRows"),i=Object(v.a)(n,"denseShape","sparseFillEmptyRows","int32"),o=Object(v.a)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u=oe.a.runKernel(ue.Nc,{indices:a,values:s,denseShape:i,defaultValue:o});return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Wr=Object(S.b)({sparseReshape_:function(e,t,n){const r=Object(v.a)(e,"inputIndices","sparseReshape","int32"),a=Object(v.a)(t,"inputShape","sparseReshape","int32"),s=Object(v.a)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i=oe.a.runKernel(ue.Oc,{inputIndices:r,inputShape:a,newShape:s});return{outputIndices:i[0],outputShape:i[1]}}}),Ur=Object(S.b)({sparseSegmentMean_:function(e,t,n){const r=Object(v.a)(e,"data","sparseSegmentMean"),a=Object(v.a)(t,"indices","sparseSegmentMean","int32"),s=Object(v.a)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);return oe.a.runKernel(ue.Pc,{data:r,indices:a,segmentIds:s})}}),Gr=Object(S.b)({sparseSegmentSum_:function(e,t,n){const r=Object(v.a)(e,"data","sparseSegmentSum"),a=Object(v.a)(t,"indices","sparseSegmentSum","int32"),s=Object(v.a)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);return oe.a.runKernel(ue.Qc,{data:r,indices:a,segmentIds:s})}}),Hr=Object(S.b)({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=Object(v.a)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=Object(v.a)(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l=oe.a.runKernel(ue.Yc,{data:u,dataSplits:c},{separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o});return{nGrams:l[0],nGramsSplits:l[1]}}}),Kr=Object(S.b)({stringSplit_:function(e,t,n=!0){const r=Object(v.a)(e,"input","stringSplit","string"),a=Object(v.a)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s=oe.a.runKernel(ue.Zc,{input:r,delimiter:a},{skipEmpty:n});return{indices:s[0],values:s[1],shape:s[2]}}}),qr=Object(S.b)({stringToHashBucketFast_:function(e,t){const n=Object(v.a)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return oe.a.runKernel(ue.ad,{input:n},r)}}),Xr={fft:un.a,ifft:cn.a,rfft:dn.a,irfft:ln.a},Zr={hammingWindow:lr,hannWindow:dr,frame:hr,stft:pr},Yr={flipLeftRight:mr,grayscaleToRGB:br,resizeNearestNeighbor:Sr.a,resizeBilinear:kr.a,rotateWithOffset:gr,cropAndResize:fr,nonMaxSuppression:xr,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(v.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(v.a)(t,"scores","nonMaxSuppressionAsync"),o=yr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:d}=Object(vr.a)(c,l,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Object(On.a)(d,"int32")},nonMaxSuppressionWithScore:wr,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(v.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(v.a)(t,"scores","nonMaxSuppressionAsync"),u=yr(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Object(vr.c)(l,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Object(On.a)(h,"int32"),selectedScores:Object(On.a)(p)}},nonMaxSuppressionPadded:Or,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(v.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(v.a)(t,"scores","nonMaxSuppressionAsync"),u=yr(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Object(vr.b)(h,p,c,l,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Object(On.a)(f,"int32"),validOutputs:Object(Kt.a)(m,"int32")}},threshold:Ir,transform:Nr},Jr={bandPart:Tr,gramSchmidt:Cr,qr:Ar},Qr={absoluteDifference:Rr,computeWeightedLoss:$r,cosineDistance:Fr,hingeLoss:Dr,huberLoss:Mr,logLoss:zr,meanSquaredError:Lr,sigmoidCrossEntropy:Pr,softmaxCrossEntropy:Br},ea={sparseFillEmptyRows:Vr,sparseReshape:Wr,sparseSegmentMean:Ur,sparseSegmentSum:Gr},ta={stringNGrams:Hr,stringSplit:Kr,stringToHashBucketFast:qr}},F6O2:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cumprod_:function(e,t=0,n=!1,i=!1){const o=Object(s.a)(e,"x","cumprod");return r.a.runKernel(a.M,{x:o},{axis:t,exclusive:n,reverse:i})}})},FZCF:function(e,t,n){"use strict";n.d(t,"a",function(){return l});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({conv3d_:function(e,t,n,u,l="NDHWC",d=[1,1,1]){const h=Object(s.a)(e,"x","conv3d"),p=Object(s.a)(t,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),i.b(5===p.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${p.rank}.`),i.b(f.shape[4]===p.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${p.shape[3]}.`),i.b(Object(o.i)(n,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`),i.b("NDHWC"===l,()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`);const b=r.a.runKernel(a.G,{x:f,filter:p},{strides:n,pad:u,dataFormat:l,dilations:d});return m?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},FdT8:function(e,t,n){"use strict";n.d(t,"a",function(){return i}),n.d(t,"b",function(){return o});var r=n("+hG3"),a=n("zt1N"),s=n("EjVc");function i(e){const{inputs:t,attrs:n,backend:r}=e,{x:i}=t,{perm:o}=n;Object(a.a)(i,"transpose");const u=new Array(i.shape.length);for(let a=0;a<u.length;a++)u[a]=i.shape[o[a]];const c=r.data.get(i.dataId).values,l=Object(s.a)(c,i.shape,i.dtype,o,u);return{dataId:r.write(l,u,i.dtype),shape:u,dtype:i.dtype}}const o={kernelName:r.Transpose,backendName:"cpu",kernelFunc:i}},Fjpt:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sqrt_:function(e){const t=Object(s.a)(e,"x","sqrt","float32");return r.a.runKernel(a.Tc,{x:t})}})},G6IW:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({expm1_:function(e){const t=Object(s.a)(e,"x","expm1");return r.a.runKernel(a.eb,{x:t})}})},GqF2:function(e,t,n){"use strict";n.d(t,"a",function(){return a}),n.d(t,"b",function(){return s});var r=n("+hG3");function a(e,t,n,a,s){const i=r.util.sizeFromShape(a),o=r.util.makeZerosTypedArray(s,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(o[n]+=i>0?t[r]:1)}return o}function s(e,t,n,a=!1){const s=e.shape[0],i=e.shape[1],o=Object(r.buffer)([s,n],t.dtype);for(let r=0;r<s;r++)for(let s=0;s<i;s++){const i=e.get(r,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||o.set(a?1:t.size>0?o.get(r,i)+t.get(r,s):o.get(r,i)+1,r,i)}return o}},Grcp:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80");const o=Object(i.b)({fft_:function(e){return Object(s.b)("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),r.a.runKernel(a.fb,{input:e})}})},Gy5z:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a,s,i,o){const u=t[0],c=i[0],l=new Array(c),d=new Array(u),h=t[1];if(0===c){if(0!==u)throw new Error(r.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[r.util.getArrayFromDType(n,0),[0,h],r.util.getArrayFromDType(s,0),l,d]}let p=!0,f=0;const m=new Array(c).fill(0);for(let g=0;g<u;++g){const t=e[g*h];if(t<0)throw new Error(r.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=c)throw new Error(r.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,c));++m[t],p=p&&t>=f,f=t}let b=!0;for(let r=0;r<c;++r){const e=0===m[r];l[r]=e,b=b&&!e,m[r]=Math.max(m[r],1),r>0&&(m[r]+=m[r-1])}if(b&&p){const t=e,n=a;for(let e=0;e<u;++e)d[e]=e;return[t,[u,h],n,l,d]}{const t=m[c-1],i=r.util.getArrayFromDType(n,t*h),p=r.util.getArrayFromDType(s,t),f=new Array(c).fill(0);for(let n=0;n<u;++n){const t=e[n*h],r=(0===t?0:m[t-1])+f[t];f[t]++;for(let a=0;a<h;++a)i[r*h+a]=e[n*h+a];p[r]=a[n],d[n]=r}for(let e=0;e<c;++e)if(0===f[e]){const t=0===e?0:m[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;p[t]=o}return[i,[t,h],p,l,d]}}},H68w:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>e!==t?1:0),o=Object(s.a)(r.NotEqual,i,null,"bool"),u={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:o}},HdJO:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return a});const a={kernelName:n("+hG3").Identity,backendName:"cpu",kernelFunc:r}},Hfat:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sign_:function(e){const t=Object(s.a)(e,"x","sign");return r.a.runKernel(a.Gc,{x:t})}})},HmhO:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cumsum_:function(e,t=0,n=!1,i=!1){const o=Object(s.a)(e,"x","cumsum");return r.a.runKernel(a.N,{x:o},{axis:t,exclusive:n,reverse:i})}})},I10X:function(e,t,n){"use strict";n.d(t,"c",function(){return s}),n.d(t,"a",function(){return i}),n.d(t,"b",function(){return o});var r=n("+hG3"),a=n("zt1N");function s(e,t,n,a,s){const i=r.slice_util.isSliceContinous(a,t,n),o=r.util.sizeFromShape(n),u=r.util.computeStrides(a);if(i){const n=r.slice_util.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const c="string"===s?r.backend_util.fromUint8ToStringArray(e):e,l=Object(r.buffer)(a,s,c),d=Object(r.buffer)(n,s);for(let r=0;r<d.size;++r){const e=d.indexToLoc(r),n=e.map((e,n)=>e+t[n]);d.set(l.get(...n),...e)}return"string"===s?r.backend_util.fromStringArrayToUint8(d.values):d.values}function i(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{begin:u,size:c}=i;Object(a.a)(o,"slice");const[l,d]=r.slice_util.parseSliceParams(o,u,c);r.slice_util.assertParamsValid(o,l,d);const h=s(n.data.get(o.dataId).values,l,d,o.shape,o.dtype);return n.makeTensorInfo(d,o.dtype,h)}const o={kernelName:r.Slice,backendName:"cpu",kernelFunc:i}},I6Cx:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a,s,i,o,u,c,l){const d=[a/s,s],h=e.values,p=t.values;if(0===a)return Object(r.buffer)(n,t.dtype);const f=Object(r.buffer)(d,t.dtype);"string"==typeof c||"number"==typeof c?f.values.fill(c):"boolean"==typeof c&&f.values.fill(+c);for(let r=0;r<i;r++){const e=[];let i=0;for(let t=0;t<o;t++){const n=h[r*o+t];e.push(n),i+=n*u[t]}if(i<0||i>=a/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)l?f.values[i*s+n]+=p[r*s+n]:f.values[i*s+n]=0===t.rank?p[0]:p[r*s+n]}return f}},I79q:function(e,t,n){"use strict";var r,a,s,i,o;n.d(t,"a",function(){return r}),n.d(t,"c",function(){return c}),n.d(t,"b",function(){return l}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function c(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function l(e){return c(e,"int32")}},"Ig+c":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({asin_:function(e){const t=Object(s.a)(e,"x","asin");return r.a.runKernel(a.j,{x:t})}})},IuP1:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({broadcastArgs_:function(e,t){const n=Object(s.a)(e,"s0","broadcastArgs","int32"),i=Object(s.a)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==i.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${i.rank}`);return r.a.runKernel(a.v,{s0:n,s1:i})}})},JLAb:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({imag_:function(e){const t=Object(s.a)(e,"input","imag");return r.a.runKernel(a.ub,{input:t})}})},Kajj:function(e,t,n){"use strict";n("auKK");var r=n("ftYm"),a=n("szMd");const s=Object(a.c)();s.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),s.registerFlag("IS_BROWSER",()=>r.isBrowser()),s.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),s.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),s.registerFlag("PROD",()=>!1),s.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>s.getBool("DEBUG")),s.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),s.registerFlag("IS_TEST",()=>!1),s.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),s.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),s.registerFlag("ENGINE_COMPILE_ONLY",()=>!1)},Kfzt:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("o/e8"),a=n("atXS"),s=n("SHv8"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({dot_:function(e,t){const n=Object(r.a)(e,"t1","dot"),i=Object(r.a)(t,"t2","dot");a.b(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`);const u=1===n.rank?n.size:n.shape[1],c=1===i.rank?i.size:i.shape[0];if(a.b(u===c,()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`),1===n.rank&&1===i.rank){const e=Object(o.a)(n,[1,-1]),t=Object(o.a)(i,[-1,1]),r=Object(s.a)(e,t);return Object(o.a)(r,[])}if(1===n.rank&&2===i.rank){const e=Object(o.a)(n,[1,-1]),t=Object(o.a)(i,[i.shape[0],i.shape[1]]),r=Object(s.a)(e,t);return Object(o.a)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=Object(o.a)(i,[-1,1]),t=Object(s.a)(n,e);return Object(o.a)(t,[t.size])}{const e=Object(o.a)(i,[i.shape[0],i.shape[1]]);return Object(s.a)(n,e)}}})},KuaA:function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,i=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(i=(s<3?a(i):s>3?a(t,n,i):a(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i},a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(a,s){function i(e){try{u(r.next(e))}catch(t){s(t)}}function o(e){try{u(r.throw(e))}catch(t){s(t)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},s=this&&this.__generator||function(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(o){s=[6,o],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.Webcam=void 0;var i=n("usyV"),o=n("/8/o"),u={facingMode:"user",frameRate:24};t.Webcam=function(){function e(e,t,n){void 0===e&&(e=400),void 0===t&&(t=400),void 0===n&&(n=!1),this.width=e,this.height=t,this.flip=n}return e.prototype.getWebcam=function(e){if(void 0===e&&(e={}),!window.navigator.mediaDevices||!window.navigator.mediaDevices.getUserMedia)return Promise.reject("Your browser does not support WebRTC. Please try another one.");e.width=640;var t=function(e){return e.facingMode=e.facingMode||u.facingMode,e.frameRate=e.frameRate||u.frameRate,e.aspectRatio=e.aspectRatio||u.aspectRatio,e}(e),n=document.createElement("video");return window.navigator.mediaDevices.getUserMedia({video:t}).then(function(e){return n.srcObject=e,n.addEventListener("loadedmetadata",function(e){var t=n.videoHeight;n.width=n.videoWidth,n.height=t}),n},function(){return Promise.reject("Could not open your camera. You may have denied access.")})},e.prototype.setup=function(e){return void 0===e&&(e={}),a(this,void 0,void 0,function(){var t;return s(this,function(n){switch(n.label){case 0:return this.webcam?[3,2]:(t=this,[4,this.getWebcam(e)]);case 1:t.webcam=n.sent(),this.canvas||(this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height),n.label=2;case 2:return[2]}})})},e.prototype.play=function(){return this.webcam.play()},e.prototype.pause=function(){this.webcam.pause()},e.prototype.stop=function(){this.stopStreamedVideo(this.webcam)},e.prototype.update=function(){this.renderCameraToCanvas()},e.prototype.stopStreamedVideo=function(e){e.srcObject.getTracks().forEach(function(e){e.stop()}),e.srcObject=null},e.prototype.renderCameraToCanvas=function(){if(this.canvas&&this.webcam){var e=this.canvas.getContext("2d");if(0!==this.webcam.videoWidth){var t=o.cropTo(this.webcam,this.width,this.flip);e.drawImage(t,0,0)}}},r([i.default],e.prototype,"getWebcam",null),r([i.default],e.prototype,"setup",null),r([i.default],e.prototype,"play",null),r([i.default],e.prototype,"pause",null),r([i.default],e.prototype,"stop",null),r([i.default],e.prototype,"update",null),r([i.default],e.prototype,"stopStreamedVideo",null),r([i.default],e.prototype,"renderCameraToCanvas",null),e}()},L7Hl:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({step_:function(e,t=0){const n=Object(s.a)(e,"x","step");return r.a.runKernel(a.Wc,{x:n},{alpha:t})}})},LyxI:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({denseBincount_:function(e,t,n,o=!1){const u=Object(s.a)(e,"x","denseBincount"),c=Object(s.a)(t,"weights","denseBincount");return i.b("int32"===u.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`),i.b(u.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`),i.b(n>=0,()=>`size must be non-negative, but got ${n}.`),i.b(c.size===u.size||0===c.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${c.shape}.`),r.a.runKernel(a.O,{x:u,weights:c},{size:n,binaryOutput:o})}})},MaBh:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a,s){const i=r.util.sizeFromShape(a),o=t[0],u=s.length,c=[];let l=1,d=-1;for(let b=0;b<u;++b){const e=s[b];if(-1===e){if(-1!==d)throw new Error(r.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,b));d=b,c.push(1)}else{if(e<0)throw new Error(r.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(b,e));l*=e,c.push(e)}}if(-1!==d){if(l<=0)throw new Error(r.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(i/l);if(l*e!==i)throw new Error(r.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,c));c[d]=e}if(r.util.sizeFromShape(c)!==i)throw new Error(r.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,c));const h=a.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*a[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*c[e+1]}const m=r.util.getArrayFromDType(n,o*u);for(let r=0;r<o;++r){let t=0;for(let n=0;n<h;++n)t+=e[r*h+n]*p[n];for(let e=0;e<u;++e)m[r*u+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[o,u],c]}},N7VH:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("zUqB"),s=n("iSpy");const i=Object(a.a)(e=>Math.sqrt(e)),o=Object(s.a)(r.Sqrt,e=>Math.sqrt(e)),u={kernelName:r.Sqrt,backendName:"cpu",kernelFunc:o}},NNfn:function(e,t,n){"use strict";n.d(t,"b",function(){return d}),n.d(t,"g",function(){return m}),n.d(t,"f",function(){return b}),n.d(t,"e",function(){return g}),n.d(t,"a",function(){return y}),n.d(t,"d",function(){return x}),n.d(t,"c",function(){return v});var r=n("9JAK"),a=n("atXS");function s(e,t,n,r){const s=Object(a.j)(t),o=function(e,t,n,r){const s=Object(a.O)(t),o=r[r.length-1],u=new Array(o).fill(0),l=t.length,d="complex64"===n?c(e):e;if(l>1)for(let a=0;a<s/o;a++){const e=a*o;for(let t=0;t<o;t++)u[t]=Math.max(u[t],i(d[e+t],0,n).length)}return u}(e,t,n,s),l=t.length,d=u(e,t,n,s,o),h=["Tensor"];return r&&(h.push(`  dtype: ${n}`),h.push(`  rank: ${l}`),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(d.map(e=>"    "+e).join("\n")),h.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Object(a.z)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),Object(a.L)(r,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,r,a,s=!0){const l="complex64"===n?2:1,d=t[0],h=t.length;if(0===h)return"complex64"===n?[i(c(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===h){if(d>20){let t=Array.from(e.slice(0,3*l)),r=Array.from(e.slice((d-3)*l,d*l));return"complex64"===n&&(t=c(t),r=c(r)),["["+t.map((e,t)=>i(e,a[t],n)).join(", ")+", ..., "+r.map((e,t)=>i(e,a[d-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?c(e):Array.from(e)).map((e,t)=>i(e,a[t],n)).join(", ")+"]"]}const p=t.slice(1),f=r.slice(1),m=r[0]*l,b=[];if(d>20){for(let t=0;t<3;t++){const r=t*m;b.push(...u(e.slice(r,r+m),p,n,f,a,!1))}b.push("...");for(let t=d-3;t<d;t++){const r=t*m;b.push(...u(e.slice(r,r+m),p,n,f,a,t===d-1))}}else for(let i=0;i<d;i++){const t=i*m;b.push(...u(e.slice(t,t+m),p,n,f,a,i===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let i=1;i<b.length-1;i++)b[i]=" "+b[i]+g;let y=",\n";for(let i=2;i<h;i++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(s?"":y),b}function c(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var l=n("6366");class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.O(e),null!=n){const e=n.length;a.b(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(t,this.size),this.strides=Object(a.j)(e)}set(e,...t){0===t.length&&(t=[0]),a.b(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t])throw new Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,f=null;function m(e){h=e}function b(e){p=e}function g(e){f=e}class y{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.O(e),this.strides=Object(a.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a.U)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(a.U)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>l.decodeString(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>l.decodeString(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}function x(){return Object(r.a)("Tensor",()=>y)}Object.defineProperty(y,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class v extends y{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:e=>e instanceof y&&null!=e.assign&&e.assign instanceof Function})},"NQ+5":function(e,t,n){"use strict";n.d(t,"f",function(){return o}),n.d(t,"e",function(){return u}),n.d(t,"a",function(){return h}),n.d(t,"b",function(){return p}),n.d(t,"d",function(){return f}),n.d(t,"c",function(){return m}),n.d(t,"i",function(){return b}),n.d(t,"g",function(){return g}),n.d(t,"h",function(){return y});var r=n("B3db"),a=n("NX3e"),s=n("atXS"),i=n("mEeB");async function o(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let a=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=4,r.set(e,a),a+=e.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(e,t){const n={};let o,u=0;for(const c of t){const t=c.name,l=c.dtype,d=c.shape,h=Object(s.O)(d);let p;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=i.a[n.dtype],a=e.slice(u,u+h*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(s.length);for(let e=0;e<s.length;e++)p[e]=s[e]*n.scale+n.min}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===o&&(o=x()),p=o(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(s.length);for(let e=0;e<s.length;e++)p[e]=Math.round(s[e]*n.scale+n.min)}u+=h*r}else if("string"===l){const t=Object(s.O)(c.shape);p=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(u,u+4))[0];u+=4;const n=new Uint8Array(e.slice(u,u+t));p.push(n),u+=t}}else{const s=i.a[l],o=e.slice(u,u+h*s);if("float32"===l)p=new Float32Array(o);else if("int32"===l)p=new Int32Array(o);else if("bool"===l)p=new Uint8Array(o);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);{p=new Float32Array(o);const e=new Float32Array(p.length/2),s=new Float32Array(p.length/2);for(let t=0;t<e.length;t++)e[t]=p[2*t],s[t]=p[2*t+1];const i=Object(a.a)(e,d,"float32"),u=Object(a.a)(s,d,"float32");n[t]=Object(r.a)(i,u),i.dispose(),u.dispose()}}u+=h*s}"complex64"!==l&&(n[t]=Object(a.a)(p,d,l))}return n}function c(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}const l="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function d(e){return l?Buffer.byteLength(e):new Blob([e]).size}function h(e){if(l)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function p(e){if(l){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function f(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function m(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function b(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function g(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function y(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:d(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:d(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function x(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){const a=r[i];s[i]=e[n[a>>10]+(1023&a)]+t[a>>10]}return new Float32Array(a)}}},NX3e:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("o/e8"),a=n("WVnj");function s(e,t,n){const s=Object(r.c)(e,n);return Object(a.a)(e,t,s,n)}},NclT:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({reshape_:function(e,t){const n=Object(s.a)(e,"x","reshape","string_or_numeric");return r.a.runKernel(a.sc,{x:n},{shape:t})}})},Nk7E:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({depthToSpace_:function(e,t,n="NHWC"){const o=Object(s.a)(e,"x","depthToSpace","float32"),u="NHWC"===n?o.shape[1]:o.shape[2],c="NHWC"===n?o.shape[2]:o.shape[3],l="NHWC"===n?o.shape[3]:o.shape[1];return i.b(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),i.b(u*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`),i.b(c*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${t} for depthToSpace with input shape\n        ${o.shape}`),i.b(l%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${o.shape}`),r.a.runKernel(a.P,{x:o},{blockSize:t,dataFormat:n})}})},NuWS:function(e,t,n){"use strict";n.d(t,"b",function(){return a}),n.d(t,"c",function(){return s}),n.d(t,"d",function(){return i}),n.d(t,"e",function(){return o}),n.d(t,"a",function(){return u}),n.d(t,"f",function(){return c}),n.d(t,"h",function(){return l}),n.d(t,"g",function(){return d});var r=n("atXS");function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function i(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function o(e,t){return s(e,t.map(e=>1),t)}function u(e,t,n){r.b(a(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function c(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function l(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},O7f5:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({neg_:function(e){const t=Object(s.a)(e,"x","neg");return r.a.runKernel(a.Zb,{x:t})}})},OkRW:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unstack_:function(e,t=0){const n=Object(s.a)(e,"x","unstack","string_or_numeric");return i.b(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),r.a.runKernel(a.kd,{value:n},{axis:t})}})},OygE:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({batchToSpaceND_:function(e,t,n){const o=Object(s.a)(e,"x","batchToSpaceND"),u=t.reduce((e,t)=>e*t);return i.b(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),i.b(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),i.b(o.shape[0]%u==0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`),r.a.runKernel(a.t,{x:o},{blockShape:t,crops:n})}})},PDX0:function(e,t){(function(t){e.exports=t}).call(this,{})},Pvz5:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({multinomial_:function(e,t,n,i=!1){const u=Object(s.a)(e,"logits","multinomial"),c=u.size,l=u.rank;if(c<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${c}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const d=1===l?Object(o.a)(u,[1,-1]):u,h=r.a.runKernel(a.Xb,{logits:d},{numSamples:t,seed:n,normalized:i});return 1===l?Object(o.a)(h,[h.size]):h}})},PwBI:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a,s,i=!1,o=0){const u=a.length,c=[t[0],e.length/t[0]],l=c[1],d=u>0?s[u-1]+1:0;if(d<0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce((e,t)=>e*t,1),f=r.util.getArrayFromDType(n,p);if(0===u)return d>0&&f.fill(o),[f,h];if(d<=0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,b=1,g=0,y=s[m];for(;;){let t=0;if(b<u){if(t=s[b],y===t){++b;continue}if(y>=t)throw new Error(r.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(r.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&f.fill(o,g*l,y*l);for(let n=m;n<b;++n){const t=a[n];if(t<0||t>=c[0])throw new Error(r.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],c[0]));for(let n=0;n<l;n++)f[y*l+n]+=e[t*l+n]}if(i)for(let e=0;e<l;e++)f[y*l+e]/=b-m;if(m=b,++b,g=y+1,y=t,b>u)break}return g<d&&f.fill(o,g*l,d*l),[f,h]}},Q9nt:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.util.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((t-e)/n)),i=r.util.makeZerosTypedArray(s,a);t<e&&1===n&&(n=-1),i[0]=e;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}},QYQ3:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({squaredDifference_:function(e,t){let n=Object(i.a)(e,"a","squaredDifference"),u=Object(i.a)(t,"b","squaredDifference");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.Vc,{a:n,b:u},{})}})},QqYx:function(e,t,n){"use strict";n.d(t,"c",function(){return i}),n.d(t,"a",function(){return o}),n.d(t,"b",function(){return u});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>e===t?1:0),o=Object(s.a)(r.Equal,i,null,"bool"),u={kernelName:r.Equal,backendName:"cpu",kernelFunc:o}},R0ls:function(e,t,n){"use strict";n.d(t,"c",function(){return f}),n.d(t,"b",function(){return m}),n.d(t,"a",function(){return b}),n.d(t,"d",function(){return g});var r=n("Um8L"),a=n("njhW"),s=n("bzdD"),i=n("parS"),o=n("Ug8H"),u=n("kXpR"),c=n("Rqg+"),l=n("NclT"),d=n("/7N0"),h=n("L7Hl"),p=n("4FMF");function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(i.a)(e,Object(h.a)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r.getReductionAxes(e.shape,t.shape);return a.length>0&&(n=Object(p.a)(n,a)),Object(l.a)(n,e.shape)}function b(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(u.a)(e);if("elu"===t)return Object(a.a)(e);if("relu6"===t)return Object(c.a)(e);if("prelu"===t)return Object(o.a)(e,n);if("leakyrelu"===t)return Object(s.a)(e,r);if("sigmoid"===t)return Object(d.a)(e);throw new Error(`Unknown fused activation ${t}.`)}const g=(e,t)=>!(e>0)||"linear"===t},RRa9:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({any_:function(e,t=null,n=!1){const i=Object(s.a)(e,"x","any","bool");return r.a.runKernel(a.g,{x:i},{axis:t,keepDims:n})}})},RbuM:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({split_:function(e,t,n=0){const i=Object(s.a)(e,"x","split");return r.a.runKernel(a.Sc,{x:i},{numOrSizeSplits:t,axis:n})}})},RhH0:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({mod_:function(e,t){let n=Object(i.a)(e,"a","mod"),o=Object(i.a)(t,"b","mod");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.Wb,{a:n,b:o})}})},RhVc:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({acosh_:function(e){const t=Object(s.a)(e,"x","acosh");return r.a.runKernel(a.c,{x:t})}})},RoEo:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("zUqB"),s=n("iSpy");const i=Object(a.a)(e=>Math.ceil(e)),o=Object(s.b)(r.Ceil,i),u={kernelName:r.Ceil,backendName:"cpu",kernelFunc:o}},"Rqg+":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({relu6_:function(e){const t=Object(s.a)(e,"x","relu6");return r.a.runKernel(a.rc,{x:t})}})},RrGL:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({log1p_:function(e){const t=Object(s.a)(e,"x","log1p");return r.a.runKernel(a.Fb,{x:t})}})},RrjA:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("auKK"),a=n("wFtI");function s(e,t,n){return r.a.runKernel(a.gb,{},{shape:e,value:t,dtype:n})}},SFB9:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({addN_:function(e){i.b(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),i.b(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);const t=e.map((e,t)=>Object(s.a)(e,`tensors${t}`,"addN")),n=t[0];return t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!i.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),r.a.runKernel(a.e,t)}})},SHv8:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({matMul_:function(e,t,n=!1,o=!1){let u=Object(i.a)(e,"a","matMul"),c=Object(i.a)(t,"b","matMul");return[u,c]=Object(s.makeTypesMatch)(u,c),r.a.runKernel(a.s,{a:u,b:c},{transposeA:n,transposeB:o})}})},SNsm:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("8Km0"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({broadcastTo_:function(e,t){let n=Object(s.a)(e,"broadcastTo","x");const o=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Object(u.a)(n,e)}const c=n.shape,l=Array.from(t);for(let r=t.length-1;r>=0;r--)if(c[r]===t[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);return 0===l.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length?Object(i.a)(n):r.a.runKernel(a.fd,{x:n},{reps:l})}})},THqV:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80");const o=Object(i.b)({ifft_:function(e){return Object(s.b)("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),r.a.runKernel(a.sb,{input:e})}})},TJwl:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return o});var r=n("+hG3"),a=n("zt1N"),s=n("FdT8");function i(e,t,n,a){const[s,i]=r.backend_util.computeOutAndReduceShapes(e,a),o=Object(r.upcastType)(t,"int32"),u=r.util.makeZerosTypedArray(r.util.sizeFromShape(s),o),c=r.util.sizeFromShape(i);for(let r=0;r<u.length;++r){const e=r*c;let t=1;for(let r=0;r<c;++r)t*=n[e+r];u[r]=t}return{outVals:u,outShape:s,outDtype:o}}const o={kernelName:r.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:u}=t,{axis:c,keepDims:l}=o;Object(a.a)(u,"prod");const d=u.shape.length,h=r.util.parseAxisParam(c,u.shape),p=r.backend_util.getAxesPermutation(h,d);let f=h,m=u;const b=[];null!=p&&(m=Object(s.a)({inputs:{x:u},backend:n,attrs:{perm:p}}),b.push(m),f=r.backend_util.getInnerMostAxes(f.length,d));const g=n.data.get(m.dataId).values,{outVals:y,outShape:x,outDtype:v}=i(m.shape,m.dtype,g,f);let w=x;return l&&(w=r.backend_util.expandShapeToKeepDim(x,h)),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(w,v,y)}}},ThxY:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>{const n=e-t;return n*n}),o=Object(s.a)(r.SquaredDifference,i),u={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:o}},TlOw:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("91d6"),a=n("VO80");const s=Object(a.b)({euclideanNorm_:function(e,t=null,n=!1){return Object(r.a)(e,"euclidean",t,n)}})},TyAZ:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({exp_:function(e){const t=Object(s.a)(e,"x","exp");return r.a.runKernel(a.cb,{x:t})}})},"U/2n":function(e,t,n){"use strict";n.d(t,"a",function(){return l});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({maxPool3d_:function(e,t=[1,1,1],n,u,l,d="NDHWC"){const h=Object(s.a)(e,"x","maxPool3d");let p=h,f=!1;4===h.rank&&(f=!0,p=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===p.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`),i.b("NDHWC"===d,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`),Object(o.a)("maxPool3d",u,l);const m=r.a.runKernel(a.Nb,{x:p},{filterSize:t,strides:n,pad:u,dimRoundingMode:l,dataFormat:d});return f?Object(c.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}})},"U/Lz":function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unsortedSegmentSum_:function(e,t,n){const o=Object(s.a)(e,"x","unsortedSegmentSum"),u=Object(s.a)(t,"segmentIds","unsortedSegmentSum","int32");return Object(i.b)(Object(i.v)(n),()=>"numSegments must be of dtype int"),r.a.runKernel(a.ld,{x:o,segmentIds:u},{numSegments:n})}})},U45G:function(e,t,n){"use strict";n.d(t,"a",function(){return h}),n.d(t,"f",function(){return d}),n.d(t,"d",function(){return c}),n.d(t,"e",function(){return l}),n.d(t,"b",function(){return o}),n.d(t,"c",function(){return u});var r=n("auKK"),a=n("NNfn"),s=n("o/e8"),i=n("atXS");function o(e){return i.b(i.u(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const a=Object(s.a)(t,"x","tf.grad","string_or_numeric"),o=null!=n?Object(s.a)(n,"dy","tf.grad"):null;return r.a.tidy(()=>{const{value:t,grads:n}=r.a.gradients(()=>e(a),[a],o);return null!=o&&i.e(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]})}}function u(e){return i.b(i.u(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{i.b(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const a=Object(s.b)(t,"args","tf.grads","string_or_numeric"),o=null!=n?Object(s.a)(n,"dy","tf.grads"):null;return r.a.tidy(()=>{const{value:t,grads:n}=r.a.gradients(()=>e(...a),a,o);return null!=o&&i.e(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n})}}function c(e){return i.b(i.u(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{i.b(t instanceof a.a,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),i.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:o}=r.a.gradients(()=>e(t),[t],n);return p(s),{grad:s[0],value:o}}}function l(e){return i.b(i.u(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{i.b(Array.isArray(t)&&t.every(e=>e instanceof a.a),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),i.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=r.a.gradients(()=>e(...t),t,n);return null!=n&&i.e(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(e,t){i.b(i.u(e),()=>"The f passed in variableGrads(f) must be a function"),i.b(null==t||Array.isArray(t)&&t.every(e=>e instanceof a.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in r.a.registeredVariables)t.push(r.a.registeredVariables[e])}const s=n?t.filter(e=>!e.trainable):null,o=t.length;t=t.filter(e=>e.trainable),i.b(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const{value:u,grads:c}=r.a.gradients(e,t,null,!0);i.b(c.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),i.b(0===u.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`);const l={};return t.forEach((e,t)=>{null!=c[t]&&(l[e.name]=c[t])}),null!=s&&s.forEach(e=>l[e.name]=null),{value:u,grads:l}}function h(e){return r.a.customGrad(e)}function p(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},UI8N:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({floorDiv_:function(e,t){let n=Object(i.a)(e,"a","floorDiv"),o=Object(i.a)(t,"b","floorDiv");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.jb,{a:n,b:o})}})},Ug8H:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({prelu_:function(e,t){const n=Object(s.a)(e,"x","prelu"),i=Object(s.a)(t,"alpha","prelu");return r.a.runKernel(a.kc,{x:n,alpha:i})}})},Um8L:function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}n.r(t),n.d(t,"getBroadcastDims",function(){return r}),n.d(t,"getReductionAxes",function(){return a}),n.d(t,"assertAndGetBroadcastShape",function(){return s})},UvZ8:function(e,t,n){"use strict";n.d(t,"c",function(){return i}),n.d(t,"a",function(){return u}),n.d(t,"b",function(){return c});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>e-t),o=Object(s.b)((e,t,n,r)=>({real:e-n,imag:t-r})),u=Object(s.a)(r.Sub,i,o),c={kernelName:r.Sub,backendName:"cpu",kernelFunc:u}},"V+B2":function(e,t,n){"use strict";var r;n.d(t,"a",function(){return r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},VO80:function(e,t,n){"use strict";n.d(t,"a",function(){return s}),n.d(t,"b",function(){return i});var r=n("auKK"),a=n("atXS");const s="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...e)=>{r.a.startScope(n);try{const t=i(...e);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(t){throw r.a.endScope(null),t}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},VQjN:function(e,t,n){"use strict";n.d(t,"a",function(){return i}),n.d(t,"d",function(){return h}),n.d(t,"b",function(){return d}),n.d(t,"e",function(){return l}),n.d(t,"c",function(){return c});var r=n("atXS"),a=n("kx/G");const s="://";class i{constructor(){this.managers={}}static getInstance(){return null==i.instance&&(i.instance=new i),i.instance}static registerManager(e,t){Object(r.b)(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(s)&&(e=e.slice(0,e.indexOf(s))),Object(r.b)(e.length>0,()=>"scheme must not be an empty string.");const n=i.getInstance();Object(r.b)(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function o(e){if(-1===e.indexOf(s))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${i.getSchemes().join(",")}`);return{scheme:e.split(s)[0],path:e.split(s)[1]}}async function u(e,t,n=!1){Object(r.b)(e!==t,()=>`Old path and new path are the same: '${e}'`);const s=a.a.getLoadHandlers(e);Object(r.b)(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Object(r.b)(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);const u=s[0],c=a.a.getSaveHandlers(t);Object(r.b)(c.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),Object(r.b)(c.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);const l=c[0],d=o(e).scheme,h=o(e).path,p=d===o(e).scheme,f=await u.load();n&&p&&await i.getManager(d).removeModel(h);const m=await l.save(f);return n&&!p&&await i.getManager(d).removeModel(h),m.modelArtifactsInfo}async function c(){const e=i.getSchemes(),t={};for(const n of e){const e=await i.getManager(n).listModels();for(const r in e)t[n+s+r]=e[r]}return t}async function l(e){const t=o(e);return i.getManager(t.scheme).removeModel(t.path)}async function d(e,t){return u(e,t,!1)}async function h(e,t){return u(e,t,!0)}},VhY8:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({topk_:function(e,t=1,n=!0){const i=Object(s.a)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},c={k:t,sorted:n},[l,d]=r.a.runKernel(a.gd,u,c);return{values:l,indices:d}}})},WJRb:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("auKK"),a=n("wFtI");function s(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return r.a.runKernel(a.Db,{},{start:e,stop:t,num:n})}},WVnj:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("auKK"),a=n("atXS"),s=n("6366");function i(e,t,n,i){if(null==i&&(i=Object(a.r)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(a.c)(t);const e=Object(a.O)(t),r=Object(a.O)(n);Object(a.b)(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==Object(a.O)(t.slice(s));Object(a.b)(n[s]===t[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Object(a.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?Object(s.toTypedArray)(e,i):Object(a.m)(e,[],!0),r.a.makeTensor(e,t,i)}},WWBm:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({ceil_:function(e){const t=Object(s.a)(e,"x","ceil","float32");return r.a.runKernel(a.y,{x:t})}})},WXLG:function(e,t,n){"use strict";n.d(t,"a",function(){return l});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=2147483648,l=Object(o.b)({searchSorted_:function(e,t,n="left"){const o=Object(s.a)(e,"sortedSequence","searchSorted"),l=Object(s.a)(t,"values","searchSorted"),d=o.shape[o.shape.length-1],h=l.shape[l.shape.length-1],p=Object(u.a)(o,[-1,d]),f=Object(u.a)(l,[-1,h]);if(p.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(p.shape[0]!==f.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Object(i.O)(f.shape)>=c)throw new Error("values tensor size must less than 2147483648");if(p.shape[1]>=c)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${p.shape[1]}`);return r.a.runKernel(a.Cc,{sortedSequence:p,values:f},{side:n})}})},WYAb:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isInf_:function(e){const t=Object(s.a)(e,"x","isInf");return r.a.runKernel(a.wb,{x:t})}})},Wiw4:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("auKK"),a=n("atXS"),s=n("B3db");function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return Object(s.a)(t,n)}const n=Object(a.F)(Object(a.O)(e),t);return r.a.makeTensor(n,e,t)}},X4fa:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({softmax_:function(e,t=-1){const n=Object(s.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return r.a.runKernel(a.Kc,{logits:n},{dim:t})}})},XcSs:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sinh_:function(e){const t=Object(s.a)(e,"x","sinh");return r.a.runKernel(a.Ic,{x:t})}})},Xr0w:function(e,t,n){"use strict";n.r(t),n.d(t,"assertParamsValid",function(){return a}),n.d(t,"maskToAxes",function(){return s}),n.d(t,"computeOutShape",function(){return i}),n.d(t,"stridesWithElidedDims",function(){return o}),n.d(t,"getNormalizedAxes",function(){return l}),n.d(t,"startIndicesWithElidedDims",function(){return d}),n.d(t,"stopIndicesWithElidedDims",function(){return h}),n.d(t,"stridesForAxis",function(){return p}),n.d(t,"startForAxis",function(){return f}),n.d(t,"stopForAxis",function(){return m}),n.d(t,"isSliceContinous",function(){return b}),n.d(t,"computeFlatOffset",function(){return g}),n.d(t,"parseSliceParams",function(){return y}),n.d(t,"sliceInfo",function(){return x});var r=n("atXS");function a(e,t,n){const a=e.shape.length;r.b(a===t.length,()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`),r.b(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let s=0;s<a;++s)r.b(t[s]+n[s]<=e.shape[s],()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function s(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function o(e,t,n,r){const a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function u(e,t,n){return n<=e?n:n-(t-1)}function c(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function l(e,t,n,r,a,s,i,u,c){const l=e.length;let b=new Array(l),g=new Array(l),y=new Array(l);if(t.length&&n>0){const c=t[0],l=n+1;b=d(i,c,l,r,e),g=h(u,c,l,a,e),y=o(s,c,l,e)}else for(let o=0;o<l;o++)b[o]=f(i,r,s,e,o,c),g[o]=m(u,a,s,e,o,c),y[o]=p(s,o,c);return{begin:b,end:g,strides:y}}function d(e,t,n,r,a){const s=[...a],i=c(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const a=u(t,n,o);let i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function h(e,t,n,a,s){const i=[...s],o=c(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=u(t,n,r);let o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let u=0;u<i.length;u++){const e=s[u];i[u]<0&&(i[u]+=e),i[u]=r.i(0,i[u],s[u])}return i}function p(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,a,s,i){let o=t[s];(e&1<<s||i&1<<s||null==o)&&(o=(n[s]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=a[s];return o<0&&(o+=u),o=r.i(0,o,u-1),o}function m(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=u>0?r.i(0,o,c):r.i(-1,o,c-1),o}function b(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function g(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function y(e,t,n){let a;const s=e.shape.length;let i;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach(e=>{r.b(-1!==e,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map((t,n)=>t>=0?t:(r.b(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-a[n])),[a,i]}function x(e,t,n,r,a,s,i,o,u){let c;if(null==r?(c=new Array(t.length),c.fill(1)):c=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let y=0;y<d.dims;y++)l&&0!=(1<<y&o)&&d.numAddAxisAfterEllipsis++,1<<y&i&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,m=!0;const b=[],g=[];for(let y=0;y<e.length;++y){if(0===h.strides[y])throw Error(`strides[${y}] must be non-zero`);const t=!!(h.shrinkAxisMask&1<<y),n=e[y];if(-1===n){b.push(t?1:-1);continue}const r=[h.beginMask&1<<y,h.endMask&1<<y],a=[h.strides[y]>0?0:-1,h.strides[y]>0?n:n-1];if(t&&h.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[y];const s=!!(h.beginMask&1<<y&&h.endMask&1<<y);if(h.beginValid&&h.endValid){if(t){const e=h.begin[y]<0?n+h.begin[y]:h.begin[y];if(h.begin[y]=e,h.end[y]=h.begin[y]+1,e<0||e>=n)throw Error(`slice index ${h.begin[y]} of dimension ${y} out of bounds.`)}else h.begin[y]=v(h.begin[y],0,h.strides[y],n,r,a),h.end[y]=v(h.end[y],1,h.strides[y],n,r,a);const e=1===h.strides[y]&&0===h.begin[y]&&h.end[y]===n;p=p&&e,f=f&&(0===y&&1===h.strides[y]||e)}else p=p&&1===h.strides[y]&&s,f=f&&(0===y&&1===h.strides[y]||s);let i,o=!1;if(h.beginValid&&h.endValid?(i=h.end[y]-h.begin[y],o=!0):t?(i=1,o=!0):s&&n>=0&&(i=h.strides[y]<0?-n:n,o=!0),o){let e;e=0===i||i<0!=h.strides[y]<0?0:Math.trunc(i/h.strides[y])+(i%h.strides[y]!=0?1:0),b.push(e)}else b.push(-1)}for(let y=0;y<h.finalShapeGatherIndices.length;++y){const e=h.finalShapeGatherIndices[y];e>=0?g.push(b[e]):-2===e&&g.push(1)}return{finalShapeSparse:g.filter((e,t)=>-2!==h.finalShapeGatherIndices[t]),finalShape:g,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function v(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},Xyqe:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({rsqrt_:function(e){const t=Object(s.a)(e,"x","rsqrt","float32");return r.a.runKernel(a.Ac,{x:t})}})},YAKK:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({atan2_:function(e,t){let n=Object(i.a)(e,"a","atan2"),o=Object(i.a)(t,"b","atan2");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.m,{a:n,b:o})}})},YD9d:function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(a,s){function i(e){try{u(r.next(e))}catch(t){s(t)}}function o(e){try{u(r.throw(e))}catch(t){s(t)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},i=this&&this.__generator||function(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(o){s=[6,o],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.createTeachable=t.TeachableMobileNet=void 0;var o=n("zhpf"),u=n("zhpf"),c=n("uLFl"),l=n("bO7W"),d=n("YSVl");function h(e,t){for(var n,r=e.length,a=e.slice(),s=r-1;s>0;s-=1){var i;i=t?Math.floor(t()*(s+1)):Math.floor(Math.random()*(s+1)),a[s]=(n=[a[i],a[s]])[0],a[i]=n[1]}return a}var p=function(e){function t(t,n){var r=e.call(this,o.sequential(),n)||this;return r.totalSamples=0,r.examples=[],r.truncatedModel=t,r}return a(t,e),Object.defineProperty(t.prototype,"asSequentialModel",{get:function(){return this.model},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isTrained",{get:function(){return!!this.model&&this.model.layers&&this.model.layers.length>2},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isPrepared",{get:function(){return!!this.trainDataset},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"numClasses",{get:function(){return this._metadata.labels.length},enumerable:!1,configurable:!0}),t.prototype.addExample=function(e,t){return s(this,void 0,void 0,function(){var n,r,a;return i(this,function(s){var i;return n="object"==typeof(i=t).dataId&&"object"==typeof i.shape?t:c.capture(t,this._metadata.grayscale),r=this.truncatedModel.predict(n),a=r.dataSync(),n.dispose(),r.dispose(),this.examples[e].push(a),this.totalSamples++,[2]})})},t.prototype.predict=function(t,n){return void 0===n&&(n=!1),s(this,void 0,void 0,function(){return i(this,function(r){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,e.prototype.predict.call(this,t,n)]})})},t.prototype.predictTopK=function(t,n,r){return void 0===n&&(n=10),void 0===r&&(r=!1),s(this,void 0,void 0,function(){return i(this,function(a){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,e.prototype.predictTopK.call(this,t,n,r)]})})},t.prototype.prepare=function(){for(var e in this.examples)if(0===e.length)throw new Error("Add some examples before training");var t=this.convertToTfDataset();this.trainDataset=t.trainDataset,this.validationDataset=t.validationDataset},t.prototype.convertToTfDataset=function(){for(var e=0;e<this.examples.length;e++)this.examples[e]=h(this.examples[e],this.seed);var t=[],n=[],r=function(e){var r,s,i=(r=e,(s=new Array(a.numClasses).fill(0))[r]=1,s),o=a.examples[e].length,u=o-Math.ceil(.15*o),c=a.examples[e].slice(0,u).map(function(e){return{data:e,label:i}}),l=a.examples[e].slice(u).map(function(e){return{data:e,label:i}});t=t.concat(c),n=n.concat(l)},a=this;for(e=0;e<this.examples.length;e++)r(e);t=h(t,this.seed),n=h(n,this.seed);var s=o.data.array(t.map(function(e){return e.data})),i=o.data.array(n.map(function(e){return e.data})),u=o.data.array(t.map(function(e){return e.label})),c=o.data.array(n.map(function(e){return e.label}));return{trainDataset:o.data.zip({xs:s,ys:u}),validationDataset:o.data.zip({xs:i,ys:c})}},t.prototype.save=function(e,t){return s(this,void 0,void 0,function(){return i(this,function(n){return[2,this.model.save(e,t)]})})},t.prototype.train=function(e,t){return void 0===t&&(t={}),s(this,void 0,void 0,function(){var n,r,a,s,c,l,d,h,p,f=this;return i(this,function(i){switch(i.label){case 0:if(n=t.onTrainEnd||function(){},t.onTrainEnd=function(e){f.__stopTrainingResolve&&(f.__stopTrainingResolve(),f.__stopTrainingResolve=null),n(e)},this.isPrepared||this.prepare(),r=this.getLabels().length,u.util.assert(r===this.numClasses,function(){return"Can not train, has "+r+" labels and "+f.numClasses+" classes"}),a=this.truncatedModel.outputs[0].shape.slice(1),s=o.util.sizeFromShape(a),c=o.initializers.varianceScaling(this.seed?{seed:3.14}:{}),this.trainingModel=o.sequential({layers:[o.layers.dense({inputShape:[s],units:e.denseUnits,activation:"relu",kernelInitializer:c,useBias:!0}),o.layers.dense({kernelInitializer:c,useBias:!1,activation:"softmax",units:this.numClasses})]}),l=o.train.adam(e.learningRate),this.trainingModel.compile({optimizer:l,loss:"categoricalCrossentropy",metrics:["accuracy"]}),!(e.batchSize>0))throw new Error("Batch size is 0 or NaN. Please choose a non-zero fraction");return d=this.trainDataset.batch(e.batchSize),h=this.validationDataset.batch(e.batchSize),[4,this.trainingModel.fitDataset(d,{epochs:e.epochs,validationData:h,callbacks:t})];case 1:return i.sent(),(p=o.sequential()).add(this.truncatedModel),p.add(this.trainingModel),this.model=p,l.dispose(),[2,this.model]}})})},t.prototype.prepareDataset=function(){for(var e=0;e<this.numClasses;e++)this.examples[e]=[]},t.prototype.setLabel=function(e,t){this._metadata.labels[e]=t},t.prototype.setLabels=function(e){this._metadata.labels=e,this.prepareDataset()},t.prototype.getLabel=function(e){return this._metadata.labels[e]},t.prototype.getLabels=function(){return this._metadata.labels},t.prototype.setName=function(e){this._metadata.modelName=e},t.prototype.getName=function(){return this._metadata.modelName},t.prototype.stopTraining=function(){var e=this;return new Promise(function(t,n){e.trainingModel.stopTraining=!0,e.__stopTrainingResolve=t})},t.prototype.dispose=function(){this.trainingModel.dispose(),e.prototype.dispose.call(this)},t.prototype.calculateAccuracyPerClass=function(){return s(this,void 0,void 0,function(){var e,t,n,r,a,u,c,l,d,h,p,f,m,b,g,y,x,v,w=this;return i(this,function(O){switch(O.label){case 0:return e=this.validationDataset.mapAsync(function(e){return s(w,void 0,void 0,function(){return i(this,function(t){return[2,e.xs]})})}),t=this.validationDataset.mapAsync(function(e){return s(w,void 0,void 0,function(){return i(this,function(t){return[2,e.ys]})})}),n=Math.min(t.size,32),r=Math.ceil(t.size/n),a=e.batch(n),u=t.batch(n),[4,a.iterator()];case 1:return c=O.sent(),[4,u.iterator()];case 2:l=O.sent(),d=[],h=[],v=0,O.label=3;case 3:return v<r?[4,c.next()]:[3,7];case 4:return p=O.sent(),f=this.trainingModel.predict(p.value),m=f.argMax(1),d.push(m),[4,l.next()];case 5:b=O.sent(),g=b.value.argMax(1),h.push(g),p.value.dispose(),f.dispose(),b.value.dispose(),O.label=6;case 6:return v++,[3,3];case 7:if(y=o.concat(h),x=o.concat(d),1!==r)for(v=0;v<d.length;v++)d[v].dispose(),h[v].dispose();return[2,{reference:y,predictions:x}]}})})},t.prototype.setSeed=function(e){this.seed=d(e)},t}(l.CustomMobileNet);t.TeachableMobileNet=p,t.createTeachable=function(e,t){return s(this,void 0,void 0,function(){var n;return i(this,function(r){switch(r.label){case 0:return[4,l.loadTruncatedMobileNet(t)];case 1:return n=r.sent(),[2,new p(n,e)]}})})}},YSVl:function(e,t,n){var r=n("EhIR"),a=n("uDiL"),s=n("pJ6O"),i=n("yuCN"),o=n("euyF"),u=n("ie1u"),c=n("pJ3+");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,e.exports=c},YuTi:function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},Z5Ez:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("SNsm"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({where_:function(e,t,n){const u=Object(s.a)(t,"a","where"),c=Object(s.a)(n,"b","where"),l=Object(s.a)(e,"condition","where","bool"),d=Object(o.assertAndGetBroadcastShape)(Object(o.assertAndGetBroadcastShape)(l.shape,u.shape),c.shape),h=Object(i.a)(l,d),p=Object(i.a)(u,d),f=Object(i.a)(c,d);return r.a.runKernel(a.Dc,{condition:h,t:p,e:f})}})},ZJ6U:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("8Km0"),u=n("VO80");const c=Object(u.b)({concat_:function(e,t=0){Object(i.b)(e.length>=1,()=>"Pass at least one tensor to concat");const n=Object(s.b)(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length?Object(o.a)(n[0]):r.a.runKernel(a.C,n,{axis:t})}})},aNuQ:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("zUqB"),s=n("iSpy");const i=Object(a.a)(e=>Math.log(e)),o=Object(s.b)(r.Log,i),u={kernelName:r.Log,backendName:"cpu",kernelFunc:o}},aSZd:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,o,u=[1,1],c){let l=e;3===e.rank&&(l=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;return 3===d.rank&&(d=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),r.a.runKernel(a.R,{x:l,dy:d},{strides:s,pad:o,dimRoundingMode:c,dilations:u,filterShape:n})}})},aTLu:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sin_:function(e){const t=Object(s.a)(e,"x","sin","float32");return r.a.runKernel(a.Hc,{x:t})}})},adw1:function(e,t,n){"use strict";n.d(t,"a",function(){return f});var r=n("B3db"),a=n("ZJ6U"),s=n("JLAb"),i=n("parS"),o=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("0I63"),d=n("AV8V"),h=n("bTzI"),p=n("THqV");const f=Object(o.b)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=Object(c.a)(e,[n,t]);o=Object(p.a)(r)}else{const f=[n,2*(t-1)],m=Object(c.a)(Object(u.a)(e),[n,t]),b=Object(c.a)(Object(s.a)(e),[n,t]),g=Object(l.a)(Object(h.a)(m,[0,1],[n,t-2]),1),y=Object(i.a)(Object(l.a)(Object(h.a)(b,[0,1],[n,t-2]),1),Object(d.a)(-1)),x=Object(a.a)([m,g],1),v=Object(a.a)([b,y],1),w=Object(c.a)(Object(r.a)(x,v),[f[0],f[1]]);o=Object(p.a)(w)}if(o=Object(u.a)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=Object(c.a)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},atXS:function(e,t,n){"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function c(e,t){const n=Math.random();return t*n+(1-n)*e}function l(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function h(e,t,n=""){d(g(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function p(e){d(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||_(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function b(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function y(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function O(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=(e=>0),n){return new Promise((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()})}function S(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function I(e,t){const n=t.length;return d((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),d(e.every(e=>y(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function N(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:I(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function j(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function E(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function _(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function $(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function R(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function F(e){return"string"==typeof e||e instanceof String}function D(e){return"boolean"==typeof e}function M(e){return"number"==typeof e}function z(e){return Array.isArray(e)?z(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":F(e)?"string":D(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function B(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function V(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=V(e+t*o,i,n,r)}return a}function W(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return V(0,e,t,n)}function U(e,t){const n=G(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function K(e){e.forEach(t=>{d(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Z(e){return e&&e.then&&"function"==typeof e.then}n.d(t,"M",function(){return r}),n.d(t,"N",function(){return a}),n.d(t,"i",function(){return s}),n.d(t,"H",function(){return i}),n.d(t,"S",function(){return o}),n.d(t,"R",function(){return u}),n.d(t,"J",function(){return c}),n.d(t,"l",function(){return l}),n.d(t,"b",function(){return d}),n.d(t,"e",function(){return h}),n.d(t,"d",function(){return p}),n.d(t,"m",function(){return f}),n.d(t,"O",function(){return m}),n.d(t,"y",function(){return b}),n.d(t,"a",function(){return g}),n.d(t,"v",function(){return y}),n.d(t,"T",function(){return x}),n.d(t,"P",function(){return v}),n.d(t,"k",function(){return w}),n.d(t,"L",function(){return O}),n.d(t,"K",function(){return k}),n.d(t,"s",function(){return S}),n.d(t,"I",function(){return I}),n.d(t,"Q",function(){return N}),n.d(t,"o",function(){return T}),n.d(t,"n",function(){return C}),n.d(t,"h",function(){return j}),n.d(t,"B",function(){return E}),n.d(t,"p",function(){return A}),n.d(t,"A",function(){return _}),n.d(t,"g",function(){return $}),n.d(t,"f",function(){return R}),n.d(t,"z",function(){return F}),n.d(t,"t",function(){return D}),n.d(t,"w",function(){return M}),n.d(t,"r",function(){return z}),n.d(t,"u",function(){return L}),n.d(t,"G",function(){return P}),n.d(t,"j",function(){return B}),n.d(t,"U",function(){return W}),n.d(t,"D",function(){return U}),n.d(t,"F",function(){return G}),n.d(t,"E",function(){return H}),n.d(t,"c",function(){return K}),n.d(t,"C",function(){return q}),n.d(t,"q",function(){return X}),n.d(t,"x",function(){return Z})},auKK:function(e,t,n){"use strict";n.d(t,"b",function(){return x}),n.d(t,"a",function(){return v});var r=n("i4e/"),a=n("szMd"),s=n("9JAK"),i=n("wFtI"),o=n("c7gn"),u=n("spQH"),c=n("6366"),l=n("atXS");class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const o=c.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:c.now()-o})}if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then(n=>{h(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then(e=>e.kernelMs),extraInfo:i.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function h(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?l.L(`${r}ms`,9):r.error,o=l.L(e,25),u=t.rank,c=t.size,d=l.L(t.shape.toString(),14);let h="";for(const l in a){const e=a[l];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${l}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${d}\t%c${c}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n("NNfn"),m=n("dsKV");function b(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.b(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){Object(o.d)(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Object(o.d)(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.b(`Initialization of backend ${e} failed`),u.b(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return u.b(`Initialization of backend ${e} failed`),u.b(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=v.runKernel(i.tb,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>v.runKernel(i.x,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==Object(o.c)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=r-t-a-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const c=b(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(b(e)){const{kernelName:t,inputs:a,attrs:s}=e,c=Object(o.c)(t,this.backendName);l.b(null!=c,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();u=c.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy(()=>t(this.backend,a));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:d,attrs:h}=e,p=b(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,d,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()}),r&&this.addTapeNode(c,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=Object(o.b)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(l.b(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const i=n.filter((e,t)=>a[t]);return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let a=e;"string"===(n=n||"float32")&&l.z(e[0])&&(a=e.map(e=>c.encodeString(e)));const s=r.write(a,t,n),i=new f.a(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Object(l.f)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){return this.makeTensorFromTensorInfo({dataId:e,shape:t,dtype:n=n||"float32"},r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,s=new f.a(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new f.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=Object(o.b)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=l.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(m.getTensorsInContainer)(e),n=new Set(t.map(e=>e.id));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(l.b(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));l.b(a instanceof f.a,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const r={},a={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],s=n.inputs;for(const e in s){const i=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach(e=>r[e.id]=!0),o=!0,a[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let u=0;u<e.length;u++){const t=e[u];if(a[t.id]&&i[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=Object(l.D)(Object(l.O)(e),"float32");return v.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach(t=>{const n=e[t.id];i.push(null!=n?n:null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!l.a(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,e=>this.tidy(e),w);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return l.b(l.u(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;l.b(t.every(e=>e instanceof f.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),l.b(n.value instanceof f.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),l.b(l.u(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];l.b(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),l.b(s.every(e=>e instanceof f.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return s.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Object(c.now)(),n=await this.backend.time(e);return n.wallMs=Object(c.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=Object(s.b)();if(null==e._tfengine){const t=new a.b(e);e._tfengine=new y(t)}return Object(a.d)(e._tfengine.ENV),Object(f.g)(()=>e._tfengine),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const v=x();function w(e,t){return v.runKernel(i.d,{a:e,b:t})}},"b++O":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isNaN_:function(e){const t=Object(s.a)(e,"x","isNaN");return r.a.runKernel(a.xb,{x:t})}})},bO7W:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(a,s){function i(e){try{u(r.next(e))}catch(t){s(t)}}function o(e){try{u(r.throw(e))}catch(t){s(t)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},a=this&&this.__generator||function(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(o){s=[6,o],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.loadFromFiles=t.load=t.loadTruncatedMobileNet=t.CustomMobileNet=t.getTopKClasses=t.IMAGE_SIZE=void 0;var s=n("zhpf"),i=n("zhpf"),o=n("uLFl"),u=n("/8/o"),c=n("e1GX"),l=.25,d=.35;t.IMAGE_SIZE=224;var h=function(e){return e.packageVersion=e.packageVersion||c.version,e.packageName=e.packageName||"@teachablemachine/image",e.timeStamp=e.timeStamp||(new Date).toISOString(),e.userMetadata=e.userMetadata||{},e.modelName=e.modelName||"untitled",e.labels=e.labels||[],e.imageSize=e.imageSize||t.IMAGE_SIZE,e},p=function(e,t){if(1===e){if(.25!==t&&.5!==t&&.75!==t&&1!==t)return console.warn("Invalid alpha. Options are: 0.25, 0.50, 0.75 or 1.00."),console.log("Loading model with alpha: ",l.toFixed(2)),l}else if(.35!==t&&.5!==t&&.75!==t&&1!==t)return console.warn("Invalid alpha. Options are: 0.35, 0.50, 0.75 or 1.00."),console.log("Loading model with alpha: ",d.toFixed(2)),d;return t},f=function(e){return r(void 0,void 0,void 0,function(){var t;return a(this,function(n){switch(n.label){case 0:return"string"!=typeof e?[3,3]:[4,fetch(e)];case 1:return[4,n.sent().json()];case 2:return t=n.sent(),[3,4];case 3:if(!(r=e)||!Array.isArray(r.labels))throw new Error("Invalid Metadata provided");t=e,n.label=4;case 4:return[2,h(t)]}var r})})};function m(e,t,n){return void 0===n&&(n=3),r(this,void 0,void 0,function(){var r;return a(this,function(a){switch(a.label){case 0:return[4,t.data()];case 1:return r=a.sent(),[2,s.tidy(function(){n=Math.min(n,r.length);for(var t=[],a=0;a<r.length;a++)t.push({value:r[a],index:a});t.sort(function(e,t){return t.value-e.value});var s=new Float32Array(n),i=new Int32Array(n);for(a=0;a<n;a++)s[a]=t[a].value,i[a]=t[a].index;var o=[];for(a=0;a<i.length;a++)o.push({className:e[i[a]],probability:s[a]});return o})]}})})}t.getTopKClasses=m;var b=function(){function e(e,t){this.model=e,this._metadata=h(t)}return Object.defineProperty(e,"EXPECTED_IMAGE_SIZE",{get:function(){return t.IMAGE_SIZE},enumerable:!1,configurable:!0}),e.prototype.getMetadata=function(){return this._metadata},e.prototype.getTotalClasses=function(){return this.model.output.shape[1]},e.prototype.getClassLabels=function(){return this._metadata.labels},e.prototype.predictTopK=function(e,t,n){return void 0===t&&(t=10),void 0===n&&(n=!1),r(this,void 0,void 0,function(){var r,c,l,d=this;return a(this,function(a){switch(a.label){case 0:return r=u.cropTo(e,this._metadata.imageSize,n),c=s.tidy(function(){var e=o.capture(r,d._metadata.grayscale);return d.model.predict(e)}),[4,m(this._metadata.labels,c,t)];case 1:return l=a.sent(),i.dispose(c),[2,l]}})})},e.prototype.predict=function(e,t){return void 0===t&&(t=!1),r(this,void 0,void 0,function(){var n,r,c,l,d,h=this;return a(this,function(a){switch(a.label){case 0:return n=u.cropTo(e,this._metadata.imageSize,t),[4,(r=s.tidy(function(){var e=o.capture(n,h._metadata.grayscale);return h.model.predict(e)})).data()];case 1:for(c=a.sent(),l=[],d=0;d<c.length;d++)l.push({className:this._metadata.labels[d],probability:c[d]});return i.dispose(r),[2,l]}})})},e.prototype.dispose=function(){this.truncatedModel.dispose()},e}();t.CustomMobileNet=b,t.loadTruncatedMobileNet=function(e){return r(this,void 0,void 0,function(){var n,r,i,o,u,c;return a(this,function(a){switch(a.label){case 0:return n=function(e){if((e=e||{}).checkpointUrl&&e.trainingLayer)return(e.alpha||e.version)&&console.warn("Checkpoint URL passed to modelOptions, alpha options are ignored"),[e.checkpointUrl,e.trainingLayer];if(e.version=e.version||1,1===e.version){e.alpha=e.alpha||l,e.alpha=p(e.version,e.alpha),console.log("Loading mobilenet "+e.version+" and alpha "+e.alpha);var n=e.alpha.toFixed(2);return"1.00"===n&&(n="1.0"),["https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_"+n+"_"+t.IMAGE_SIZE+"/model.json","conv_pw_13_relu"]}if(2===e.version)return e.alpha=e.alpha||d,e.alpha=p(e.version,e.alpha),console.log("Loading mobilenet "+e.version+" and alpha "+e.alpha),["https://storage.googleapis.com/teachable-machine-models/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_"+e.alpha.toFixed(2)+"_"+t.IMAGE_SIZE+"_no_top/model.json","out_relu"];throw new Error("MobileNet V"+e.version+" doesn't exist")}(e),r=n[1],[4,s.loadLayersModel(n[0])];case 1:return i=a.sent(),e&&1===e.version?(o=i.getLayer(r),u=s.model({inputs:i.inputs,outputs:o.output}),(c=s.sequential()).add(u),c.add(s.layers.flatten()),[2,c]):(o=i.getLayer(r),u=s.model({inputs:i.inputs,outputs:o.output}),(c=s.sequential()).add(u),c.add(s.layers.globalAveragePooling2d({})),[2,c])}})})},t.load=function(e,t){return r(this,void 0,void 0,function(){var n,r;return a(this,function(a){switch(a.label){case 0:return[4,s.loadLayersModel(e)];case 1:return n=a.sent(),t?[4,f(t)]:[3,3];case 2:return r=a.sent(),[3,4];case 3:r=null,a.label=4;case 4:return[2,new b(n,r)]}})})},t.loadFromFiles=function(e,t,n){return r(this,void 0,void 0,function(){var r,i,o;return a(this,function(a){switch(a.label){case 0:return[4,s.loadLayersModel(s.io.browserFiles([e,t]))];case 1:return r=a.sent(),[4,new Response(n).json()];case 2:return i=a.sent(),n?[4,f(i)]:[3,4];case 3:return o=a.sent(),[3,5];case 4:o=null,a.label=5;case 5:return[2,new b(r,o)]}})})}},bTzI:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({slice_:function(e,t,n){const i=Object(s.a)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");return r.a.runKernel(a.Jc,{x:i},{begin:t,size:n})}})},bzdD:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({leakyRelu_:function(e,t=.2){const n=Object(s.a)(e,"x","leakyRelu");return r.a.runKernel(a.Ab,{x:n},{alpha:t})}})},"c/ib":function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({resizeBilinear_:function(e,t,n=!1,o=!1){const c=Object(s.a)(e,"images","resizeBilinear");i.b(3===c.rank||4===c.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`),i.b(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),i.b(!1===o||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,h=r.a.runKernel(a.tc,{images:l},{alignCorners:n,halfPixelCenters:o,size:t});return d?Object(u.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},c7gn:function(e,t,n){"use strict";n.d(t,"c",function(){return u}),n.d(t,"b",function(){return c}),n.d(t,"d",function(){return l}),n.d(t,"f",function(){return d}),n.d(t,"e",function(){return h}),n.d(t,"h",function(){return p}),n.d(t,"g",function(){return f}),n.d(t,"a",function(){return m});var r=n("szMd"),a=n("9JAK"),s=n("spQH");const i=Object(a.a)("kernelRegistry",()=>new Map),o=Object(a.a)("gradRegistry",()=>new Map);function u(e,t){const n=b(e,t);return i.get(n)}function c(e){return o.get(e)}function l(e){const t=i.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function d(e){const{kernelName:t,backendName:n}=e,r=b(t,n);i.has(r)&&s.b(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function h(e){const{kernelName:t}=e;o.has(t)&&Object(r.c)().getBool("DEBUG")&&s.b(`Overriding the gradient for '${t}'`),o.set(t,e)}function p(e,t){const n=b(e,t);if(!i.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);i.delete(n)}function f(e){if(!o.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);o.delete(e)}function m(e,t){l(e).forEach(e=>{d(Object.assign({},e,{backendName:t}))})}function b(e,t){return`${t}_${e}`}},c9N1:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({conv2DBackpropInput_:function(e,t,n,o,c,l="NHWC",d){s.b(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),s.b(4===h.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${h.length}.`),s.b(4===p.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`),s.b(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const m="NHWC"===l?h[3]:h[1],b="NHWC"===l?p.shape[3]:p.shape[1];s.b(m===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`),s.b(b===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${b}) must match output depth for filter ${n.shape[3]}.`),i.a("conv2dDerInput",c,d);const g=r.a.runKernel(a.F,{dy:p,filter:n},{strides:o,pad:c,dataFormat:l,dimRoundingMode:d,inputShape:h});return f?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},cdtJ:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NclT"),u=n("VO80");const c=Object(u.b)({batchNorm_:function(e,t,n,u,c,l){null==l&&(l=.001);const d=Object(s.a)(e,"x","batchNorm"),h=Object(s.a)(t,"mean","batchNorm"),p=Object(s.a)(n,"variance","batchNorm");let f,m;null!=c&&(f=Object(s.a)(c,"scale","batchNorm")),null!=u&&(m=Object(s.a)(u,"offset","batchNorm")),i.b(h.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),i.b(null==m||h.rank===m.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),i.b(null==f||h.rank===f.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const b=function(e){let t;return t=0===e.rank||1===e.rank?Object(o.a)(e,[1,1,1,e.size]):2===e.rank?Object(o.a)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),g=r.a.runKernel(a.lb,{x:b,scale:f,offset:m,mean:h,variance:p},{varianceEpsilon:l});return Object(o.a)(g,d.shape)}})},csRb:function(e,t,n){"use strict";n.d(t,"c",function(){return i}),n.d(t,"a",function(){return u}),n.d(t,"b",function(){return c});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>e*t),o=Object(s.b)((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),u=Object(s.a)(r.Multiply,i,o),c={kernelName:r.Multiply,backendName:"cpu",kernelFunc:u}},dWjR:function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,"a",function(){return r})},dYAU:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({spaceToBatchND_:function(e,t,n){const o=Object(s.a)(e,"x","spaceToBatchND");return i.b(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),i.b(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),i.b(o.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),r.a.runKernel(a.Mc,{x:o},{blockShape:t,paddings:n})}})},dauL:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({einsum_:function(e,...t){const n=t.map((e,t)=>Object(s.a)(e,`tensors${t}`,"einsum"));return r.a.runKernel(a.X,n,{equation:e})}})},dnXz:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("o/e8"),a=n("atXS"),s=n("3X4V"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({conv1d_:function(e,t,n,o,c="NWC",l=1,d){const h=Object(r.a)(e,"x","conv1d"),p=Object(r.a)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1]])),a.b(3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),a.b(3===p.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`),i.a("conv1d",o,d),a.b(f.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`),a.b(i.i(n,l),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`),a.b("NWC"===c,()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`);const b=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(u.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],v=Object(s.a)(g,b,y,o,"NHWC",x,d);return m?Object(u.a)(v,[v.shape[2],v.shape[3]]):Object(u.a)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},dsKV:function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",function(){return i}),n.d(t,"assertTypesMatch",function(){return o}),n.d(t,"isTensorInList",function(){return u}),n.d(t,"getTensorsInContainer",function(){return c});var r=n("NNfn"),a=n("I79q"),s=n("atXS");function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a.c)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){Object(s.b)(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function u(e,t){return t.some(t=>t.id===e.id)}function c(e){const t=[];return l(e,t,new Set),t}function l(e,t,n){if(null==e)return;if(e instanceof r.a)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const r in s){const e=s[r];n.has(e)||(n.add(e),l(e,t,n))}}},e1GX:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0,t.version="0.8.4-alpha2"},euyF:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n=a[s]=(n^=n>>>15)^(e^=e>>>12),t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=0==(n=o[127&s]^=r+(i=i+1640531527|0))?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,o[a]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},"fN6/":function(e,t,n){"use strict";n.d(t,"b",function(){return r}),n.d(t,"a",function(){return a});const r=1.7580993408473768,a=1.0507009873554805},fUNa:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e){return(t,n,a,s,i)=>{const o=r.backend_util.assertAndGetBroadcastShape(t,n),u=o.length,c=r.util.computeStrides(o),l=r.util.sizeFromShape(o),d=r.util.getTypedArrayFromDType(i,l),h=t.length,p=n.length,f=r.util.computeStrides(t),m=r.util.computeStrides(n),b=r.backend_util.getBroadcastDims(t,o),g=r.backend_util.getBroadcastDims(n,o);if(b.length+g.length===0)for(let r=0;r<d.length;++r)d[r]=e(a[r%a.length],s[r%s.length]);else for(let y=0;y<d.length;++y){const t=r.util.indexToLoc(y,u,c),n=t.slice(-h);b.forEach(e=>n[e]=0);const i=r.util.locToIndex(n,h,f),o=t.slice(-p);g.forEach(e=>o[e]=0);const l=r.util.locToIndex(o,p,m);d[y]=e(a[i],s[l])}return[d,o]}}},fjZN:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({atan_:function(e){const t=Object(s.a)(e,"x","atan");return r.a.runKernel(a.l,{x:t})}})},fmoR:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("BD40"),a=n("VO80"),s=n("1OSX");const i=Object(a.b)({truncatedNormal_:function(e,t=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.a(t,n,a,!0,i),u=Object(r.a)(e,a);for(let r=0;r<u.values.length;r++)u.values[r]=o.nextValue();return u.toTensor()}})},fn98:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>e>t?1:0),o=Object(s.a)(r.Greater,i,null,"bool"),u={kernelName:r.Greater,backendName:"cpu",kernelFunc:o}},ftYm:function(e,t,n){"use strict";let r;function a(e){r=e}function s(e){if(void 0!==r)return r;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function i(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"mockIsMobile",function(){return a}),n.d(t,"isMobile",function(){return s}),n.d(t,"isBrowser",function(){return i})},"g4+C":function(e,t,n){"use strict";n.d(t,"a",function(){return l});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({depthwiseConv2d_:function(e,t,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(e,"x","depthwiseConv2d","float32"),f=Object(s.a)(t,"filter","depthwiseConv2d","float32");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),i.b(4===f.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),i.b(m.shape[3]===f.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),o.a("depthwiseConv2d",u,h);const g=r.a.runKernel(a.Q,{x:m,filter:f},{strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h});return b?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},g4m1:function(e,t,n){"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||a)}(e,t,n);e.splice(r<0?-(r+1):r,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return u(e,t,n,r,a,0)}function i(e,t,n,r,a,s){return u(e,t,n,r,a,0,!1,s,!0)}function o(e,t,n,r,a,s){return u(e,t,n,r,a,s,!0)}function u(e,t,n,a,s,i,o=!1,u=!1,h=!1){const p=[];for(let r=0;r<t.length;r++)t[r]>s&&p.push({score:t[r],boxIndex:r,suppressBeginIndex:0});p.sort(d);const f=i>0?-.5/i:0,m=[],b=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<s)break;let u=!1;for(let r=m.length-1;r>=o;--r){const n=c(e,i,m[r]);if(n>=a){u=!0;break}if(t.score=t.score*l(a,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),b.push(t.score)):t.score>s&&r(p,t,d))}const g=m.length,y=n-g;u&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=b),h&&(x.validOutputs=g),x}function c(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),y=Math.min(u,h),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(p+f-x)}function l(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",function(){return s}),n.d(t,"b",function(){return i}),n.d(t,"c",function(){return o})},gErV:function(e,t,n){"use strict";n.d(t,"a",function(){return p});var r=n("U45G"),a=n("o/e8"),s=n("3rNm"),i=n("TyAZ"),o=n("E1lT"),u=n("wCH+"),c=n("parS"),l=n("VO80"),d=n("oAkI"),h=n("4FMF");const p=Object(l.b)({logSoftmax_:function(e,t=-1){const n=Object(a.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Object(r.a)((e,n)=>{const r=Object(u.a)(e,t,!0),a=Object(d.a)(e,r),l=Object(d.a)(Object(s.a)(a,"float32"),Object(o.a)(Object(h.a)(Object(i.a)(a),t,!0)));return n([l]),{value:l,gradFunc:(e,n)=>{const[r]=n,a=Object(i.a)(r);return Object(d.a)(e,Object(c.a)(Object(h.a)(e,t,!0),a))}}})(n)}})},hNYx:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("auKK"),a=n("wFtI");function s(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");return r.a.runKernel(a.mc,{},{start:e,stop:t,step:n,dtype:s})}},hT5K:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unique_:function(e,t=0){const n=Object(s.a)(e,"x","unique","string_or_numeric");Object(i.b)(n.rank>0,()=>"The input tensor must be at least 1D");const o={x:n},u={axis:t},[c,l]=r.a.runKernel(a.jd,o,u);return{values:c,indices:l}}})},hinG:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("BD40"),a=n("VO80"),s=n("1OSX");const i=Object(a.b)({randomUniform_:function(e,t=0,n=1,a="float32",i){const o=Object(r.a)(e,a),u=new s.c(t,n,null,i);for(let r=0;r<o.values.length;r++)o.values[r]=u.nextValue();return o.toTensor()}})},hmGj:function(e,t,n){"use strict";n.d(t,"b",function(){return s}),n.d(t,"a",function(){return i});var r=n("+hG3"),a=n("zt1N");function s(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const i={kernelName:r.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Object(a.a)(t,"abs");let i=new Float32Array(r.util.sizeFromShape(t.shape));return i=s(n.data.get(t.dataId).values),n.makeOutput(i,t.shape,t.dtype)}}},"i+Li":function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>Math.max(e,t)),o=Object(s.a)(r.Maximum,i),u={kernelName:r.Maximum,backendName:"cpu",kernelFunc:o}},"i/oj":function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("o0+U");const u=Object(i.b)({scatterND_:function(e,t,n){const i=Object(s.a)(e,"indices","scatterND","int32"),u=Object(s.a)(t,"updates","scatterND");return o.validateInput(u,i,n),r.a.runKernel(a.Bc,{indices:i,updates:u},{shape:n})}})},"i4e/":function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},i8k8:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({maxPoolWithArgmax_:function(e,t,n,i,o=!1){const u=Object(s.a)(e,"x","maxPoolWithArgmax"),c=r.a.runKernel(a.Qb,{x:u},{filterSize:t,strides:n,pad:i,includeBatchInIndex:o});return{result:c[0],indexes:c[1]}}})},iIjY:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({tanh_:function(e){const t=Object(s.a)(e,"x","tanh","float32");return r.a.runKernel(a.ed,{x:t})}})},iOm3:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a){const s=r.util.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let r=0;r<s;r++)i[0]*=n[r];i[1]=n[s];for(let r=s+1;r<n.length;r++)i[2]*=n[r];const o={},u=new Int32Array(n[s]),c=new r.TensorBuffer(i,a,e),l=[],d=1===i[0]&&1===i[2];for(let r=0;r<n[s];r++){let t;if(d)t=e[r].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(c.get(t,r,n));t=e.join(",")}if(void 0!==o[t])u[r]=o[t];else{const e=Object.keys(o).length;o[t]=e,u[r]=e,l.push(r)}}const h=i.slice();h[1]=Object.keys(o).length;const p=new r.TensorBuffer(h,a);l.forEach((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(c.get(n,e,r),n,t,r)});const f=n.slice();return f[s]=h[1],{outputValues:p.values,outputShape:f,indices:u}}},iSpy:function(e,t,n){"use strict";n.d(t,"a",function(){return s}),n.d(t,"b",function(){return i});var r=n("+hG3"),a=n("zt1N");function s(e,t,n){return({inputs:s,attrs:i,backend:o})=>{const{x:u}=s;if(Object(a.a)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=o,l=c.data.get(u.dataId).values,d=r.util.sizeFromShape(u.shape),h=n||u.dtype,p=r.util.getArrayFromDType(h,d);for(let e=0;e<d;++e)p[e]=t(l[e],i);return c.makeTensorInfo(u.shape,h,p)}}function i(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if(Object(a.a)(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,c=u.data.get(o.dataId).values,l=n||o.dtype,d=t(c,l,s);return u.makeTensorInfo(o.shape,l,d)}}},ie1u:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},iuCH:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({abs_:function(e){const t=Object(s.a)(e,"x","abs");return r.a.runKernel("complex64"===t.dtype?a.B:a.a,{x:t})}})},ix3U:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("+hG3"),a=n("zt1N");const s=r.kernel_impls.whereImpl;class i extends r.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.DataStorage(this,Object(r.engine)())}nextDataId(){return i.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(r.env)().get("IS_NODE")&&r.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map(e=>r.util.encodeString(e));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>r.util.decodeString(e));return Object(r.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return Object(r.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.util.now();return e(),{kernelMs:r.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Object(a.a)([e],"where");const t=this.readSync(e.dataId);return s(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}i.nextDataId=0;const o="3.18.0";Object(r.registerBackend)("cpu",()=>new i,1);var u=n("iSpy");const c=Object(u.a)(r.Elu,e=>e>=0?e:Math.exp(e)-1),l={kernelName:r.Elu,backendName:"cpu",kernelFunc:c};var d=n("HdJO");function h(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{alpha:o}=s;Object(a.a)([i],"leakyRelu");const u=r.util.sizeFromShape(i.shape),c=n.data.get(i.dataId).values,l=r.util.getTypedArrayFromDType("float32",u);for(let r=0;r<c.length;r++)l[r]=c[r]<0?o*c[r]:c[r];return n.makeTensorInfo(i.shape,"float32",l)}const p={kernelName:r.LeakyRelu,backendName:"cpu",kernelFunc:h};var f=n("fUNa");const m=Object(f.a)((e,t)=>e<0?t*e:e);function b(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Object(a.a)([r,s],"prelu");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[u,c]=m(r.shape,s.shape,i,o,"float32");return n.makeTensorInfo(c,"float32",u)}const g={kernelName:r.Prelu,backendName:"cpu",kernelFunc:b},y=Object(u.a)(r.Relu,e=>Math.max(0,e)),x={kernelName:r.Relu,backendName:"cpu",kernelFunc:y},v=Object(u.a)(r.Relu6,e=>Math.min(Math.max(0,e),6)),w={kernelName:r.Relu6,backendName:"cpu",kernelFunc:v};var O=n("pGgd");function k(e,t,n,r,a){if("linear"===n)return Object(d.a)({inputs:{x:t},backend:e});if("relu"===n)return y({inputs:{x:t},backend:e});if("elu"===n)return c({inputs:{x:t},backend:e});if("relu6"===n)return v({inputs:{x:t},backend:e});if("prelu"===n)return b({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return h({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Object(O.a)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var S=n("lzW/");function I(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:i}=a,o=r.util.sizeFromShape(s.shape),u=r.util.inferFromImplicitShape(i,o),c=r.util.sizeFromShape(u);r.util.assert(o===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.imag;l.complexTensorInfos.real.shape=u,e.shape=u}return{dataId:s.dataId,shape:u,dtype:s.dtype}}const N={kernelName:r.Reshape,backendName:"cpu",kernelFunc:I};function T(e){const{inputs:t,backend:n,attrs:s}=e,{a:i,b:o}=t,{transposeA:u,transposeB:c}=s;Object(a.a)([i,o],"matMul");const l=i.shape.length,d=o.shape.length,h=u?i.shape[l-2]:i.shape[l-1],p=c?o.shape[d-1]:o.shape[d-2],f=u?i.shape[l-1]:i.shape[l-2],m=c?o.shape[d-2]:o.shape[d-1],b=i.shape.slice(0,-2),g=o.shape.slice(0,-2),y=r.util.sizeFromShape(b),x=r.util.sizeFromShape(g),v=r.broadcast_util.assertAndGetBroadcastShape(i.shape.slice(0,-2),o.shape.slice(0,-2)).concat([f,m]);r.util.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${i.shape} and ${o.shape} and transposeA=${u} and transposeB=${c} must match.`);const w=c?[x,m,p]:[x,p,m],O=I({inputs:{x:i},backend:n,attrs:{shape:u?[y,h,f]:[y,f,h]}}),k=I({inputs:{x:o},backend:n,attrs:{shape:w}}),S=u?O.shape[1]:O.shape[2],N=u?O.shape[2]:O.shape[1],T=c?k.shape[1]:k.shape[2],C=Math.max(y,x),j=n.data.get(O.dataId).values,E=n.data.get(k.dataId).values,A=r.util.computeStrides(O.shape),_=r.util.computeStrides(k.shape),[$,R,F]=u?[A[0],1,A[1]]:[A[0],A[1],1],[D,M,z]=c?[1,_[1],_[0]]:[_[1],1,_[0]],L=N*T,P=Object(r.buffer)([C,N,T],O.dtype),B=P.values,V=n.blockSize;for(let r=0;r<C;r++)for(let e=0;e<N;e+=V)for(let t=0;t<T;t+=V)for(let n=0;n<S;n+=V){const a=Math.min(e+V,N),s=Math.min(t+V,T),i=Math.min(n+V,S);for(let o=e;o<a;o++)for(let e=t;e<s;e++){let t=0;for(let a=n;a<i;a++){const n=Math.min(r,y-1)*$,s=Math.min(r,x-1)*z;t+=j[n+o*R+a*F]*E[a*D+e*M+s]}B[r*L+(o*T+e)]+=t}}return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(v,P.dtype,P.values)}const C={kernelName:r.BatchMatMul,backendName:"cpu",kernelFunc:T},j={kernelName:r._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=T({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),i&&(p=Object(S.a)({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),l&&(f=k(n,h,l,o,d),m.push(h),h=f);for(const b of m)n.disposeIntermediateTensorInfo(b);return h}};var E=n("hmGj");const A=Object(u.a)(r.Acos,e=>Math.acos(e)),_={kernelName:r.Acos,backendName:"cpu",kernelFunc:A},$=Object(u.a)(r.Acosh,e=>Math.acosh(e)),R={kernelName:r.Acosh,backendName:"cpu",kernelFunc:$},F={kernelName:r.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;Object(a.a)(t,"addN");const i=s.map(e=>n.data.get(e.dataId).values),o=Object(r.buffer)(s[0].shape,s[0].dtype),u=o.values;for(let r=0;r<s.length;r++){const e=i[r];for(let t=0;t<u.length;t++)u[t]+=e[t]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};var D=n("FdT8");const M={kernelName:r.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,keepDims:u}=s;Object(a.a)(i,"all");const c=r.util.parseAxisParam(o,i.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,i.shape.length);let h=i;null!=d&&(h=Object(D.a)({inputs:{x:i},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,i.shape.length)),r.backend_util.assertAxesAreInnerMostDims("all",l,h.shape.length);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let r=0;r<b.length;++r){const e=r*m;let t=g[e];for(let n=0;n<m;++n){const r=g[e+n];t=t&&r}b[r]=t}null!=d&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(p,h.dtype,b);if(u){const e=I({inputs:{x:y},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}},z={kernelName:r.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,keepDims:u}=s;Object(a.a)(i,"any");const c=r.util.parseAxisParam(o,i.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,i.shape.length);let h=i;null!=d&&(h=Object(D.a)({inputs:{x:i},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,i.shape.length)),r.backend_util.assertAxesAreInnerMostDims("any",l,h.shape.length);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let r=0;r<b.length;++r){const e=r*m;let t=g[e];for(let n=0;n<m;++n){const r=g[e+n];t=t||r}b[r]=t}null!=d&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(p,h.dtype,b);if(u){const e=I({inputs:{x:y},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}},L={kernelName:r.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o}=s;Object(a.a)(i,"argMax");let u=r.util.parseAxisParam(o,i.shape);const c=r.backend_util.getAxesPermutation(u,i.shape.length);let l=i;const d=[];null!=c&&(l=Object(D.a)({inputs:{x:i},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMax",u,l.shape.length);const[h,p]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(h),m=r.util.makeZerosTypedArray(f,"int32"),b=r.util.sizeFromShape(p),g=n.data.get(l.dataId).values;for(let r=0;r<m.length;++r){const e=r*b;let t=g[e],n=0;for(let r=0;r<b;++r){const a=g[e+r];a>t&&(t=a,n=r)}m[r]=n}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",m)}},P={kernelName:r.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o}=s;Object(a.a)(i,"argMin");let u=r.util.parseAxisParam(o,i.shape);const c=r.backend_util.getAxesPermutation(u,i.shape.length);let l=i;const d=[];null!=c&&(l=Object(D.a)({inputs:{x:i},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMin",u,l.shape.length);const[h,p]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(h),m=r.util.makeZerosTypedArray(f,"int32"),b=r.util.sizeFromShape(p),g=n.data.get(l.dataId).values;for(let r=0;r<m.length;++r){const e=r*b;let t=g[e],n=0;for(let r=0;r<b;++r){const a=g[e+r];a<t&&(t=a,n=r)}m[r]=n}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",m)}},B=Object(u.a)(r.Asin,e=>Math.asin(e)),V={kernelName:r.Asin,backendName:"cpu",kernelFunc:B},W=Object(u.a)(r.Asinh,e=>Math.asinh(e)),U={kernelName:r.Asinh,backendName:"cpu",kernelFunc:W},G=Object(u.a)(r.Atan,e=>Math.atan(e)),H={kernelName:r.Atan,backendName:"cpu",kernelFunc:G};var K=n("vx0h");const q=Object(f.a)((e,t)=>Math.atan2(e,t)),X=Object(K.a)(r.Atan2,q),Z={kernelName:r.Atan2,backendName:"cpu",kernelFunc:X},Y=Object(u.a)(r.Atanh,e=>Math.atanh(e)),J={kernelName:r.Atanh,backendName:"cpu",kernelFunc:Y};function Q(e,t,n,a,s,i){const o=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(r.buffer)(s.outShape,n),g=b.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let r=0;r<s.batchSize;++r){const t=r*y,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let b=0;b<s.outHeight;++b){const y=b*o-p,w=Math.max(0,y),O=Math.min(s.inHeight,d+y),k=t+b*x;for(let t=0;t<s.outWidth;++t){const o=t*u-f,d=Math.max(0,o),p=Math.min(s.inWidth,h+o);let b=m,y=0,x=0;for(let t=w;t<O;t+=c){const s=n+t*a[1];for(let t=d;t<p;t+=l){const n=e[s+t*a[2]+r];"max"===i&&n>b?b=n:"avg"===i&&(y+=n,x++)}if(isNaN(b))break}g[k+t*v+r]="avg"===i?y/x:b}}}return b}function ee(e,t,n,a,s=!1,i=!1){const o=Object(r.buffer)(a.outShape,"int32"),u=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,b=Object(r.buffer)(t,n,e);for(let r=0;r<a.batchSize;++r)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*u-f;let g=n;for(;g<0;)g+=l;const y=Math.min(a.inHeight,h+n);for(let u=0;u<a.outWidth;++u){const h=u*c-m;let f=h;for(;f<0;)f+=d;const x=Math.min(a.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=g;t<y;t+=l){const o=t-n;for(let n=f;n<x;n+=d){const u=n-h,c=b.get(r,t,n,e);c>v&&(v=c,w=s?i?((r*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:o*p+u)}}o.set(w,r,t,u,e)}}return o}function te(e,t,n,a,s,i){const o=s.strideDepth,u=s.strideHeight,c=s.strideWidth,l=s.dilationDepth,d=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,b=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Object(r.buffer)(s.outShape,n),w=v.values,O=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let r=0;r<s.batchSize;++r){const t=r*O,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let v=0;v<s.outDepth;++v){const O=v*o-b;let N=O;for(;N<0;)N+=l;const T=Math.min(s.inDepth,p+O),C=t+v*k;for(let t=0;t<s.outHeight;++t){const o=t*u-g;let p=o;for(;p<0;)p+=d;const b=Math.min(s.inHeight,f+o),v=C+t*S;for(let t=0;t<s.outWidth;++t){const o=t*c-y;let u=o;for(;u<0;)u+=h;const f=Math.min(s.inWidth,m+o),g=v+t*I;let O=x,k=0,S=0;for(let t=N;t<T;t+=l){const s=n+t*a[1];for(let t=p;t<b;t+=d){const n=s+t*a[2];for(let t=u;t<f;t+=h){const s=e[n+t*a[3]+r];if("max"===i&&s>O?O=s:"avg"===i&&(k+=s,S++),isNaN(O))break}if(isNaN(O))break}if(isNaN(O))break}w[g+r]="avg"===i?k/S:O}}}}return v}const ne={kernelName:r.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t;Object(a.a)(i,"avgPool");const{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=s;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`);const h=r.backend_util.computePool2DInfo(i.shape,o,u,1,c,l);let p;if(1===h.filterWidth&&1===h.filterHeight&&r.util.arraysEqual(h.inShape,h.outShape))p=Object(d.a)({inputs:{x:i},backend:n});else{const e=n.data.get(i.dataId).values,t=r.util.computeStrides(i.shape),a=Q(e,0,i.dtype,t,h,"avg");p=n.makeTensorInfo(h.outShape,i.dtype,a.values)}return p}},re={kernelName:r.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{filterSize:o,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=s;Object(a.a)(i,"avgPool3d");const h=r.backend_util.computePool3DInfo(i.shape,o,u,1,c,l,d),p=te(n.data.get(i.dataId).values,0,i.dtype,r.util.computeStrides(i.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},ae={kernelName:r.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,input:o}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s;Object(a.a)([i,o],"avgPool3DGrad");const h=r.backend_util.computePool3DInfo(o.shape,u,c,1,l,d),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=h.dilationDepth,v=h.dilationHeight,w=h.dilationWidth,O=h.effectiveFilterDepth,k=h.effectiveFilterHeight,S=h.effectiveFilterWidth,I=O-1-h.padInfo.front,N=S-1-h.padInfo.left,T=k-1-h.padInfo.top,C=Object(r.buffer)(o.shape,"float32"),j=1/(b*g*y),E=n.bufferSync(i);for(let r=0;r<h.batchSize;++r)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inDepth;++t)for(let n=0;n<h.inHeight;++n)for(let a=0;a<h.inWidth;++a){const s=t-I,i=n-T,o=a-N;let u=0;for(let t=0;t<O;t+=x){const n=(s+t)/p;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=v){const a=(i+t)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let t=0;t<S;t+=w){const s=(o+t)/m;s<0||s>=h.outWidth||Math.floor(s)!==s||(u+=E.get(r,n,a,s,e))}}}C.set(u*j,r,t,n,a,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},se={kernelName:r.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,input:o}=t,u=o;Object(a.a)([i,o],"avgPoolGrad");const{filterSize:c,strides:l,pad:d}=s,h=r.backend_util.computePool2DInfo(u.shape,c,l,1,d),p=h.strideHeight,f=h.strideWidth,m=h.filterHeight,b=h.filterWidth,g=h.dilationHeight,y=h.dilationWidth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=v-1-h.padInfo.left,O=x-1-h.padInfo.top,k=Object(r.buffer)(u.shape,"float32"),S=1/(m*b),I=n.data.get(i.dataId).values,N=Object(r.buffer)(i.shape,"float32",I);for(let r=0;r<h.batchSize;++r)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){const a=t-O,s=n-w;let i=0;for(let t=0;t<x;t+=g){const n=(a+t)/p;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let t=0;t<v;t+=y){const a=(s+t)/f;a<0||a>=h.outWidth||Math.floor(a)!==a||(i+=N.get(r,n,a,e))}}k.set(i*S,r,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},ie={kernelName:r.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,scale:o,offset:u,mean:c,variance:l}=t;r.util.assert(c.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.util.assert(null==u||c.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.util.assert(null==o||c.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Object(a.a)([i,c,l,o,u],"batchNorm");let{varianceEpsilon:d}=s;null==d&&(d=.001);const h=n.data.get(i.dataId).values,p=n.data.get(c.dataId).values,f=n.data.get(l.dataId).values,m=o?n.data.get(o.dataId).values:new Float32Array([1]),b=u?n.data.get(u.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=b.length,x=m.length,v=f.length,w=p.length;let O=0,k=0,S=0,I=0;for(let r=0;r<h.length;++r)g[r]=b[O++]+(h[r]-p[k++])*m[S++]/Math.sqrt(f[I++]+d),O>=y&&(O=0),k>=w&&(k=0),S>=x&&(S=0),I>=v&&(I=0);return n.makeTensorInfo(i.shape,i.dtype,g)}};var oe=n("I10X");const ue={kernelName:r.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{blockShape:o,crops:u}=s;Object(a.a)([i],"batchToSpaceND");const c=o.reduce((e,t)=>e*t),l=r.backend_util.getReshaped(i.shape,o,c),d=r.backend_util.getPermuted(l.length,o.length),h=r.backend_util.getReshapedPermuted(i.shape,o,c),p=r.backend_util.getSliceBeginCoords(u,o.length),f=r.backend_util.getSliceSize(h,u,o.length),m=I({inputs:{x:i},backend:n,attrs:{shape:l}}),b=Object(D.a)({inputs:{x:m},backend:n,attrs:{perm:d}}),g=I({inputs:{x:b},backend:n,attrs:{shape:h}}),y=Object(oe.a)({inputs:{x:g},backend:n,attrs:{begin:p,size:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),y}};var ce=n("GqF2");const le={kernelName:r.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=Object(ce.a)(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}},de={kernelName:r.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,u=r.backend_util.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}};var he=n("+gpH"),pe=n("RoEo");const fe=Object(u.a)(r.ClipByValue,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e),me={kernelName:r.ClipByValue,backendName:"cpu",kernelFunc:fe};var be=n("kne7");const ge={kernelName:r.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r.util.sizeFromShape(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.imag,o=n.data.get(s.complexTensorInfos.real.dataId).values,u=n.data.get(i.dataId).values;for(let r=0;r<o.length;r++)a[r]=Math.hypot(o[r],u[r]);return n.makeOutput(a,t.shape,"float32")}};var ye=n("wAP4");function xe(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const ve={kernelName:r.Imag,backendName:"cpu",kernelFunc:xe};var we=n("DPiU");function Oe(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,i=r.util.parseAxisParam(s,t[0].shape)[0];let o=r.backend_util.computeOutShape(t.map(e=>e.shape),i);if(0===r.util.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter(e=>r.util.sizeFromShape(e.shape)>0);if(1===u.length)return Object(d.a)({inputs:{x:u[0]},backend:n});const c=u.map(e=>e.shape);if(r.backend_util.assertParamsConsistent(c,i),"complex64"===u[0].dtype){const e=u.map(e=>Object(we.a)({inputs:{input:e},backend:n})),t=u.map(e=>xe({inputs:{input:e},backend:n})),r=Oe({inputs:e,backend:n,attrs:{axis:i}}),a=Oe({inputs:t,backend:n,attrs:{axis:i}}),s=Object(be.a)({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const l=u.map(e=>{const t=r.util.sizeFromShape(e.shape.slice(i));return I({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),h=l.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=r.backend_util.computeOutShape(l.map(e=>e.shape),1);const p=1===l[0].shape[0],f=Object(ye.a)(h,o,t[0].dtype,p),m=r.backend_util.computeOutShape(u.map(e=>e.shape),i),b=n.makeTensorInfo(m,t[0].dtype,f);return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}const ke={kernelName:r.Concat,backendName:"cpu",kernelFunc:Oe};function Se(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,filter:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}=s;Object(a.a)([i,o],"conv2d");const p=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(i.shape,o.shape,u,d,c,h,!1,p),m=f.filterHeight,b=f.filterWidth,g=f.dilationHeight,y=f.dilationWidth,x=f.padInfo.left,v=f.padInfo.top,w="channelsLast"===f.dataFormat,O=new r.TensorBuffer(f.outShape,i.dtype),k=r.util.computeStrides(i.shape),S=r.util.computeStrides(o.shape),I=k[0],N=w?k[1]:k[2],T=w?k[2]:1,C=w?1:k[1],j=O.strides[0],E=w?O.strides[1]:O.strides[2],A=w?O.strides[2]:1,_=w?1:O.strides[1],$=n.data.get(i.dataId).values,R=n.data.get(o.dataId).values,F=O.values;for(let r=0;r<f.batchSize;++r){const e=r*I,t=r*j;for(let n=0;n<f.outHeight;++n){const r=t+n*E,a=n*f.strideHeight-v;for(let t=0;t<m;++t){const n=a+t*g;if(n<0||n>=f.inHeight)continue;const s=t*S[0],i=e+n*N;for(let e=0;e<f.outWidth;++e){const t=r+e*A,n=e*f.strideWidth-x;for(let e=0;e<b;++e){const r=n+e*y;if(r<0||r>=f.inWidth)continue;const a=i+r*T;let o=s+e*S[1];for(let e=0;e<f.inChannels;++e){const n=$[a+e*C];for(let e=0;e<f.outChannels;++e)F[t+e*_]+=n*R[o+e];o+=f.outChannels}}}}}}return n.makeTensorInfo(O.shape,O.dtype,F)}const Ie={kernelName:r.Conv2D,backendName:"cpu",kernelFunc:Se},Ne={kernelName:r.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,dy:o}=t,{strides:u,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:h}=s;Object(a.a)([i,o],"conv2dBackpropFilter");const p=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(i.shape,h,u,1,c,d,!1,p),{strideHeight:m,strideWidth:b,filterHeight:g,filterWidth:y}=f,x="channelsLast"===f.dataFormat,v=new r.TensorBuffer(f.filterShape,"float32"),w=f.padInfo.left,O=f.padInfo.top,k=n.data.get(i.dataId).values,S=n.data.get(o.dataId).values,I=new r.TensorBuffer(i.shape,i.dtype,k),N=new r.TensorBuffer(o.shape,o.dtype,S);for(let r=0;r<g;++r){const e=Math.max(0,Math.ceil((O-r)/m)),t=Math.min(f.outHeight,(f.inHeight+O-r)/m);for(let n=0;n<y;++n){const a=Math.max(0,Math.ceil((w-n)/b)),s=Math.min(f.outWidth,(f.inWidth+w-n)/b);for(let i=0;i<f.inChannels;++i)for(let o=0;o<f.outChannels;++o){let u=0;for(let c=0;c<f.batchSize;++c)for(let l=e;l<t;++l){const e=r+l*m-O;for(let t=a;t<s;++t){const r=n+t*b-w;u+=x?I.get(c,e,r,i)*N.get(c,l,t,o):I.get(c,i,e,r)*N.get(c,o,l,t)}}v.set(u,r,n,i,o)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Te={kernelName:r.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,filter:o}=t,{inputShape:u,strides:c,pad:l,dataFormat:d,dimRoundingMode:h}=s;Object(a.a)([i,o],"conv2dBackpropInput");const p=r.util.computeStrides(o.shape),f=r.util.computeStrides(i.shape);let m=r.backend_util.convertConv2DDataFormat(d);const b=r.backend_util.computeConv2DInfo(u,o.shape,c,1,l,h,!1,m),g=new r.TensorBuffer(b.inShape,"float32"),y=g.values,x=n.data.get(i.dataId).values,v=n.data.get(o.dataId).values,[w,O,k]=p,{batchSize:S,filterHeight:I,filterWidth:N,inChannels:T,inHeight:C,inWidth:j,outChannels:E,outHeight:A,outWidth:_,strideHeight:$,strideWidth:R}=b;m=b.dataFormat;const F=I-1-b.padInfo.top,D=N-1-b.padInfo.left,M="channelsLast"===m,z=g.strides[0],L=M?g.strides[1]:g.strides[2],P=M?g.strides[2]:1,B=M?1:g.strides[1],V=f[0],W=M?f[1]:f[2],U=M?f[2]:1,G=M?1:f[1];for(let r=0;r<S;++r)for(let e=0;e<T;++e)for(let t=0;t<C;++t){const n=t-F,a=Math.max(0,Math.ceil(n/$)),s=Math.min(A,(I+n)/$);for(let i=0;i<j;++i){const o=i-D,u=Math.max(0,Math.ceil(o/R)),c=Math.min(_,(N+o)/R);let l=0;for(let t=a;t<s;++t){const a=t*$-n;for(let n=u;n<c;++n){const s=V*r+W*t+U*n,i=w*(I-1-a)+O*(N-1-(n*R-o))+k*e;for(let e=0;e<E;++e)l+=x[s+G*e]*v[i+e]}}y[z*r+L*t+P*i+B*e]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Ce={kernelName:r.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,filter:o}=t,{strides:u,pad:c,dilations:l}=s;Object(a.a)([i,o],"conv3d");const d=r.backend_util.computeConv3DInfo(i.shape,o.shape,u,l,c),{filterDepth:h,filterHeight:p,filterWidth:f,dilationDepth:m,dilationHeight:b,dilationWidth:g,padInfo:y}=d,x=y.front,v=y.left,w=y.top,O=new r.TensorBuffer(d.outShape,i.dtype),k=n.data.get(i.dataId).values,S=n.data.get(o.dataId).values,I=O.values,N=r.util.computeStrides(i.shape),T=r.util.computeStrides(o.shape);for(let r=0;r<d.batchSize;++r){const e=r*N[0],t=r*O.strides[0];for(let n=0;n<d.outDepth;++n){const r=t+n*O.strides[1],a=n*d.strideDepth-x;for(let t=0;t<h;++t){const n=a+t*m;if(n<0||n>=d.inDepth)continue;const s=t*T[0],i=e+n*N[1];for(let e=0;e<d.outHeight;++e){const t=r+e*O.strides[2],n=e*d.strideHeight-w;for(let e=0;e<p;++e){const r=n+e*b;if(r<0||r>=d.inHeight)continue;const a=s+e*T[1],o=i+r*N[2];for(let e=0;e<d.outWidth;++e){const n=t+e*d.outChannels,r=e*d.strideWidth-v;for(let e=0;e<f;++e){const t=r+e*g;if(t<0||t>=d.inWidth)continue;const s=o+t*d.inChannels;let i=a+e*T[2];for(let e=0;e<d.inChannels;++e){const t=k[s+e];for(let e=0;e<d.outChannels;++e)I[n+e]+=t*S[i+e];i+=d.outChannels}}}}}}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}},je={kernelName:r.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,dy:o}=t,{strides:u,pad:c,filterShape:l}=s;Object(a.a)([i,o],"conv3dBackpropFilterV2");const d=r.util.computeStrides(i.shape),h=r.util.computeStrides(o.shape),p=r.backend_util.computeConv3DInfo(i.shape,l,u,1,c),f=p.strideDepth,m=p.strideHeight,b=p.strideWidth,g=p.filterDepth,y=p.filterHeight,x=p.filterWidth,v=new r.TensorBuffer(p.filterShape,"float32"),w=v.values,[O,k,S,I]=v.strides,N=n.data.get(o.dataId).values,[T,C,j,E]=h,A=n.data.get(i.dataId).values,[_,$,R,F]=d,D=p.padInfo.front,M=p.padInfo.left,z=p.padInfo.top;for(let r=0;r<g;++r){const e=Math.max(0,Math.ceil((D-r)/f)),t=Math.min(p.outDepth,(p.inDepth+D-r)/f),n=r*O;for(let a=0;a<y;++a){const s=Math.max(0,Math.ceil((z-a)/m)),i=Math.min(p.outHeight,(p.inHeight+z-a)/m),o=a*k+n;for(let n=0;n<x;++n){const u=Math.max(0,Math.ceil((M-n)/b)),c=Math.min(p.outWidth,(p.inWidth+M-n)/b),l=n*S+o;for(let o=0;o<p.inChannels;++o){const d=o*I+l;for(let l=0;l<p.outChannels;++l){let h=0;for(let d=0;d<p.batchSize;++d){const p=d*_,g=d*T;for(let d=e;d<t;++d){const e=(r+d*f-D)*$+p,t=d*C+g;for(let r=s;r<i;++r){const s=(a+r*m-z)*R+e,i=r*j+t;for(let e=u;e<c;++e)h+=A[(n+e*b-M)*F+s+o]*N[e*E+i+l]}}}w[d+l]=h}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Ee={kernelName:r.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,filter:o}=t,{pad:u,strides:c,inputShape:l}=s;Object(a.a)([i],"conv3dBackpropInputV2");const d=r.util.computeStrides(i.shape),h=r.util.computeStrides(o.shape),p=r.backend_util.computeConv3DInfo(l,o.shape,c,1,u),f=new r.TensorBuffer(p.inShape,"float32"),m=f.values,[b,g,y,x]=f.strides,v=n.data.get(i.dataId).values,[w,O,k,S]=d,I=n.data.get(o.dataId).values,[N,T,C,j]=h,{batchSize:E,filterDepth:A,filterHeight:_,filterWidth:$,inChannels:R,inDepth:F,inHeight:D,inWidth:M,outChannels:z,outDepth:L,outHeight:P,outWidth:B,strideDepth:V,strideHeight:W,strideWidth:U}=p,G=A-1-p.padInfo.front,H=_-1-p.padInfo.top,K=$-1-p.padInfo.left;for(let r=0;r<E;++r)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-G,a=Math.max(0,Math.ceil(n/V)),s=Math.min(L,(A+n)/V);for(let i=0;i<D;++i){const o=i-H,u=Math.max(0,Math.ceil(o/W)),c=Math.min(P,(_+o)/W);for(let l=0;l<M;++l){const d=l-K,h=Math.max(0,Math.ceil(d/U)),p=Math.min(B,($+d)/U);let f=0;for(let t=a;t<s;++t){const a=t*V-n;for(let n=u;n<c;++n){const s=n*W-o;for(let i=h;i<p;++i){const o=w*r+O*t+k*n+S*i,u=N*(A-1-a)+T*(_-1-s)+C*($-1-(i*U-d))+j*e;for(let e=0;e<z;++e)f+=v[o+e]*I[u+e]}}}m[b*r+g*t+y*i+x*l+e]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Ae=Object(u.a)(r.Cos,e=>Math.cos(e)),_e={kernelName:r.Cos,backendName:"cpu",kernelFunc:Ae},$e=Object(u.a)(r.Cosh,e=>Math.cosh(e)),Re={kernelName:r.Cosh,backendName:"cpu",kernelFunc:$e},Fe={kernelName:r.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:i,boxInd:o}=t,{cropSize:u,method:c,extrapolationValue:l}=a,[d,h,p,f]=s.shape,m=i.shape[0],[b,g]=u,y=Object(r.buffer)([m,b,g,f],"float32"),x=n.data.get(i.dataId).values,v=n.data.get(o.dataId).values,w=n.data.get(s.dataId).values,O=r.util.computeStrides(s.shape),k=r.util.computeStrides(y.shape);for(let r=0;r<m;r++){const e=4*r,t=x[e],n=x[e+1],a=x[e+2],s=x[e+3],i=v[r];if(i>=d)continue;const o=b>1?(a-t)*(h-1)/(b-1):0,u=g>1?(s-n)*(p-1)/(g-1):0;for(let d=0;d<b;d++){const e=b>1?t*(h-1)+d*o:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<f;e++)y.values[e+t*k[2]+d*k[1]+r*k[0]]=l;else if("bilinear"===c){const t=Math.floor(e),a=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const c=g>1?n*(p-1)+e*u:.5*(n+s)*(p-1);if(c<0||c>p-1){for(let t=0;t<f;t++)y.values[t+e*k[2]+d*k[1]+r*k[0]]=l;continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let n=0;n<f;n++){let s=n+h*O[2]+t*O[1]+i*O[0];const u=w[s];s=n+m*O[2]+t*O[1]+i*O[0];const c=w[s];s=n+h*O[2]+a*O[1]+i*O[0];const l=w[s];s=n+m*O[2]+a*O[1]+i*O[0];const p=w[s],f=u+(c-u)*b;s=n+e*k[2]+d*k[1]+r*k[0],y.values[s]=f+(l+(p-l)*b-f)*o}}}else for(let t=0;t<g;++t){const a=g>1?n*(p-1)+t*u:.5*(n+s)*(p-1);if(a<0||a>p-1){for(let e=0;e<f;e++)y.values[e+t*k[2]+d*k[1]+r*k[0]]=l;continue}const o=Math.round(a),c=Math.round(e);for(let e=0;e<f;e++)y.values[e+t*k[2]+d*k[1]+r*k[0]]=w[e+o*O[2]+c*O[1]+i*O[0]]}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},De={kernelName:r.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,exclusive:u,reverse:c}=s;Object(a.a)(i,"cumprod");const l=r.backend_util.getAxesPermutation([o],i.shape.length);let d=i;null!=l&&(d=Object(D.a)({inputs:{x:i},backend:n,attrs:{perm:l}}));const h=r.backend_util.getInnerMostAxes(1,i.shape.length)[0];if(h!==d.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${h}`);const p=Object(r.upcastType)(d.dtype,"int32"),f=r.util.makeOnesTypedArray(r.util.sizeFromShape(d.shape),p),m=n.data.get(d.dataId).values,b=d.shape[d.shape.length-1],g=c?(e,t)=>e+b-t-1:(e,t)=>e+t;for(let r=0;r<m.length;r+=b)for(let e=0;e<b;e++){const t=g(r,e);if(0===e)f[t]=u?1:m[t];else{const n=g(r,e-1);f[t]=u?m[n]*f[n]:m[t]*f[n]}}const y=n.makeTensorInfo(d.shape,p,f);if(null!=l){const e=r.backend_util.getUndoAxesPermutation(l),t=Object(D.a)({inputs:{x:y},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(d),t}return y}},Me={kernelName:r.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,exclusive:u,reverse:c}=s;Object(a.a)(i,"cumsum");const l=r.backend_util.getAxesPermutation([o],i.shape.length);let d=i;null!=l&&(d=Object(D.a)({inputs:{x:i},backend:n,attrs:{perm:l}}));const h=r.backend_util.getInnerMostAxes(1,i.shape.length)[0];if(h!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${h}`);const p=Object(r.upcastType)(d.dtype,"int32"),f=r.util.makeZerosTypedArray(r.util.sizeFromShape(d.shape),p),m=n.data.get(d.dataId).values,b=d.shape[d.shape.length-1],g=c?(e,t)=>e+b-t-1:(e,t)=>e+t;for(let r=0;r<m.length;r+=b)for(let e=0;e<b;e++){const t=g(r,e);if(0===e)f[t]=u?0:m[t];else{const n=g(r,e-1);f[t]=u?m[n]+f[n]:m[t]+f[n]}}const y=n.makeTensorInfo(d.shape,p,f);if(null!=l){const e=r.backend_util.getUndoAxesPermutation(l),t=Object(D.a)({inputs:{x:y},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(d),t}return y}},ze={kernelName:r.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=Object(ce.a)(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Object(ce.b)(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},Le={kernelName:r.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:i,dataFormat:o}=a;r.util.assert("NHWC"===o,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const u=s.shape[0],c=s.shape[1],l=s.shape[2],d=s.shape[3],h=c*i,p=l*i,f=d/(i*i),m=n.data.get(s.dataId).values,b=new Float32Array(u*h*p*f);let g=0;for(let r=0;r<u;++r)for(let e=0;e<h;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<p;++e){const a=Math.floor(e/i),s=(n*i+e%i)*f;for(let e=0;e<f;++e)b[g++]=m[e+s+d*(a+l*(t+c*r))]}}return n.makeTensorInfo([u,h,p,f],s.dtype,b)}};function Pe(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,filter:o}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d}=s;Object(a.a)([i,o],"depthwiseConv2DNative");const h=r.util.computeStrides(i.shape),p=r.util.computeStrides(o.shape);let f=l;null==f&&(f=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);const m=r.backend_util.computeConv2DInfo(i.shape,o.shape,u,f,c,d,!0),{filterHeight:b,filterWidth:g,dilationHeight:y,dilationWidth:x,padInfo:v}=m,w=v.left,O=v.top,k=m.outChannels/m.inChannels,S=new r.TensorBuffer(m.outShape,i.dtype),I=n.data.get(i.dataId).values,N=n.data.get(o.dataId).values,T=S.values;for(let r=0;r<m.batchSize;++r){const e=r*h[0],t=r*S.strides[0];for(let n=0;n<m.outHeight;++n){const r=t+n*S.strides[1],a=n*m.strideHeight-O;for(let t=0;t<b;++t){const n=a+t*y;if(n<0||n>=m.inHeight)continue;const s=t*p[0],i=e+n*h[1];for(let e=0;e<m.outWidth;++e){const t=r+e*S.strides[2],n=e*m.strideWidth-w;for(let e=0;e<g;++e){const r=n+e*x;if(r<0||r>=m.inWidth)continue;const a=i+r*m.inChannels;let o=t,u=s+e*p[1];for(let e=0;e<m.inChannels;++e){const t=I[a+e];for(let e=0;e<k;++e)T[o+e]+=t*N[u+e];o+=k,u+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const Be={kernelName:r.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Pe},Ve={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,dy:o}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,filterShape:h}=s;Object(a.a)([i,o],"depthwiseConv2dNativeBackpropFilter");const p=r.backend_util.computeConv2DInfo(i.shape,h,u,c,l,d,!0),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=p,y=new r.TensorBuffer(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=p.outChannels/p.inChannels,O=n.data.get(i.dataId).values,k=new r.TensorBuffer(i.shape,i.dtype,O),S=n.data.get(o.dataId).values,I=new r.TensorBuffer(o.shape,o.dtype,S);for(let r=0;r<b;++r){const e=Math.max(0,Math.ceil((v-r)/f)),t=Math.min(p.outHeight,(p.inHeight+v-r)/f);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((x-n)/m)),s=Math.min(p.outWidth,(p.inWidth+x-n)/m);for(let i=0;i<p.outChannels;++i){const o=Math.trunc(i/w),u=i%w;let c=0;for(let l=0;l<p.batchSize;++l)for(let u=e;u<t;++u){const e=r+u*f-v;for(let t=a;t<s;++t)c+=k.get(l,e,n+t*m-x,o)*I.get(l,u,t,i)}y.set(c,r,n,o,u)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},We={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,filter:o}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,inputShape:h}=s;Object(a.a)([i,o],"depthwiseConv2DNativeBackpropInput");const p=r.util.computeStrides(i.shape),f=r.util.computeStrides(o.shape),m=r.backend_util.computeConv2DInfo(h,o.shape,u,c,l,d,!0),b=new r.TensorBuffer(m.inShape,"float32"),g=b.values,[y,x,v]=b.strides,w=n.data.get(i.dataId).values,[O,k,S]=p,I=n.data.get(o.dataId).values,[N,T,C]=f,{batchSize:j,filterHeight:E,filterWidth:A,inChannels:_,inHeight:$,inWidth:R,outChannels:F,outHeight:D,outWidth:M,strideHeight:z,strideWidth:L}=m,P=E-1-m.padInfo.top,B=A-1-m.padInfo.left,V=F/_;for(let r=0;r<j;++r)for(let e=0;e<_;++e)for(let t=0;t<$;++t){const n=t-P,a=Math.max(0,Math.ceil(n/z)),s=Math.min(D,(E+n)/z);for(let i=0;i<R;++i){const o=i-B,u=Math.max(0,Math.ceil(o/L)),c=Math.min(M,(A+o)/L);let l=0;for(let t=a;t<s;++t){const a=t*z-n;for(let n=u;n<c;++n){const s=O*r+k*t+S*n,i=N*(E-1-a)+T*(A-1-(n*L-o))+C*e;for(let t=0;t<V;++t)l+=w[s+(e*V+t)]*I[i+t]}}g[y*r+x*t+v*i+e]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Ue={kernelName:r.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=r.util.sizeFromShape(a.shape),i=n.data.get(a.dataId).values,o=Object(r.buffer)([s,s],a.dtype),u=o.values;for(let r=0;r<i.length;r++)u[r*s+r]=i[r];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},Ge={kernelName:r.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=c.data.get(a.dataId).values,d=a.shape.length,h=c.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:x,padInfo:v,strideHeight:w,strideWidth:O,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:N,outShape:T}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u),C=r.util.sizeFromShape(T),j=T.length,E=r.util.getArrayFromDType(a.dtype,C);for(let A=0;A<f;++A)for(let e=0;e<y;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const i=n*O-v.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<S;++t){const c=i+t*N;if(c>=0&&c<b){const i=r.util.locToIndex([A,n,c,o],d,r.util.computeStrides(a.shape)),f=r.util.locToIndex([e,t,o],p,r.util.computeStrides(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}E[r.util.locToIndex([A,e,n,o],j,r.util.computeStrides(T))]=u}}}return{dataId:c.write(r.util.toTypedArray(E,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},He={kernelName:r.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:i}=e,{strides:o,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),h=r.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:O,filterWidth:k,dilationHeight:S,dilationWidth:I,outShape:N}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",c);r.util.assert(i.rank===N.length,()=>`Error in ${r.Dilation2DBackpropFilter}, dy must have the same rank as output ${N.length}, but got ${i.rank}`);const T=r.util.toNestedArray(N,l.data.get(i.dataId).values),C=r.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<p;++r)for(let e=0;e<g;++e){const t=e*v-x.top;for(let n=0;n<y;++n){const a=n*w-x.left;for(let s=0;s<b;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let e=0;e<O;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<k;++t){const c=a+t*I;if(c>=0&&c<m){const a=d[r][n][c][s]+h[e][t][s];a>i&&(i=a,o=e,u=t)}}}C[o][u][s]+=T[r][e][n][s]}}}return{dataId:l.write(r.util.toTypedArray(C,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Ke={kernelName:r.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:i}=e,{strides:o,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),h=r.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:O,filterWidth:k,dilationHeight:S,dilationWidth:I,outShape:N}=r.backend_util.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",c);r.util.assert(i.rank===N.length,()=>`Error in ${r.Dilation2DBackpropInput}, dy must have the same rank as output ${N.length}, but got ${i.rank}`);const T=r.util.toNestedArray(N,l.data.get(i.dataId).values),C=r.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let r=0;r<p;++r)for(let e=0;e<g;++e){const t=e*v-x.top;for(let n=0;n<y;++n){const a=n*w-x.left;for(let s=0;s<b;++s){let i=Number.MIN_SAFE_INTEGER,o=t<0?0:t,u=a<0?0:a;for(let e=0;e<O;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<k;++t){const c=a+t*I;if(c>=0&&c<m){const a=d[r][n][c][s]+h[e][t][s];a>i&&(i=a,o=n,u=c)}}}C[r][o][u][s]+=T[r][e][n][s]}}}return{dataId:l.write(r.util.toTypedArray(C,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var qe=n("csRb"),Xe=n("0eCf");function Ze(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,keepDims:u}=s;let c;Object(a.a)(i,"sum"),c="bool"===i.dtype?Object(he.a)({inputs:{x:i},backend:n,attrs:{dtype:"int32"}}):Object(d.a)({inputs:{x:i},backend:n});const l=c.shape.length,h=r.util.parseAxisParam(o,c.shape),p=r.backend_util.getAxesPermutation(h,l);let f=h,m=c;null!=p&&(m=Object(D.a)({inputs:{x:c},backend:n,attrs:{perm:p}}),f=r.backend_util.getInnerMostAxes(f.length,l)),r.backend_util.assertAxesAreInnerMostDims("sum",f,m.shape.length);const[b,g]=r.backend_util.computeOutAndReduceShapes(m.shape,f),y=r.backend_util.upcastType(m.dtype,"int32");let x=Object(Xe.a)(n,b,y);const v=r.util.sizeFromShape(g),w=n.data.get(x.dataId).values,O=n.data.get(m.dataId).values;for(let r=0;r<w.length;++r){const e=r*v;let t=0;for(let n=0;n<v;++n)t+=O[e+n];w[r]=t}if(u){const e=x;x=I({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(x.shape,h)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(c),null!=p&&n.disposeIntermediateTensorInfo(m),x}const Ye={kernelName:r.Sum,backendName:"cpu",kernelFunc:Ze},Je={kernelName:r.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,i=t,{allDims:o,summedDims:u,idDims:c}=r.backend_util.decodeEinsumEquation(s,i.length);r.backend_util.checkEinsumDimSizes(o.length,c,i);const{path:l,steps:d}=r.backend_util.getEinsumComputePath(u,c),h=d.length;let p=null,f=o.length;const m=[];for(let b=0;b<h;++b){for(const e of d[b]){const{permutationIndices:t,expandDims:a}=r.backend_util.getEinsumPermutation(f,c[e]);let s;r.backend_util.isIdentityPermutation(t)?s=i[e]:(s=Object(D.a)({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),m.push(s));const o=s.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);r.util.arraysEqual(s.shape,o)||(s=I({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===p?p=s:(p=Object(qe.a)({inputs:{a:s,b:p},backend:n}),m.push(p))}b<h-1&&(l[b]>=0&&(p=Ze({inputs:{x:p},backend:n,attrs:{axis:l[b]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const r of m)r!==p&&n.disposeIntermediateTensorInfo(r);return p}},Qe={kernelName:r.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:i}=t;Object(a.a)([s,i],"eluGrad");const o=new Float32Array(r.util.sizeFromShape(i.shape)),u=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values;for(let r=0;r<u.length;++r){const e=u[r];o[r]=e>=1?c[r]:c[r]*(e+1)}return n.makeTensorInfo(i.shape,"float32",o)}};var et=n("QqYx");const tt=r.backend_util.ERF_P,nt=r.backend_util.ERF_A1,rt=r.backend_util.ERF_A2,at=r.backend_util.ERF_A3,st=r.backend_util.ERF_A4,it=r.backend_util.ERF_A5,ot=Object(u.a)(r.Erf,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+tt*n);return t*(1-((((it*r+st)*r+at)*r+rt)*r+nt)*r*Math.exp(-n*n))}),ut={kernelName:r.Erf,backendName:"cpu",kernelFunc:ot};var ct=n("+wyz");function lt(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:i}=a,o=s.shape.length,u=s.shape.slice();let c=i;return i<0&&(r.util.assert(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+i+1),u.splice(c,0,1),I({inputs:{x:s},backend:n,attrs:{shape:u}})}const dt={kernelName:r.ExpandDims,backendName:"cpu",kernelFunc:lt};var ht=n("vWEu");const pt=Object(f.a)((e,t)=>e/t),ft=Object(K.a)(r.RealDiv,pt),mt={kernelName:r.RealDiv,backendName:"cpu",kernelFunc:ft};var bt=n("UvZ8");function gt(e,t,n){const a=e.shape,s=a[0],i=a[1],o=n.data.get(e.dataId),u=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[s,i],d=r.util.sizeFromShape(l),h=r.util.getTypedArrayFromDType("float32",d),p=r.util.getTypedArrayFromDType("float32",d);for(let g=0;g<s;g++){const e=Object(oe.a)({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,i]}}),a=Object(oe.a)({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,i]}}),s=Object(be.a)({inputs:{real:e,imag:a},backend:n}),{real:o,imag:l}=yt(s,t,n),d=r.backend_util.mergeRealAndImagArrays(o,l);for(let t=0;t<i;t++){const e=r.backend_util.getComplexWithIndex(d,t);h[g*i+t]=e.real,p[g*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",p),b=Object(be.a)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function yt(e,t,n){const a=r.util.sizeFromShape(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((u=a)&u-1)){const s=xt(i,o,a,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",s.real),t=n.makeTensorInfo(u,"float32",s.imag),i=n.makeTensorInfo([],"float32",r.util.createScalarValue(a,"float32")),o=Object(d.a)({inputs:{x:i},backend:n}),c=mt.kernelFunc({inputs:{a:e,b:i},backend:n}),l=mt.kernelFunc({inputs:{a:t,b:o},backend:n}),h=n.data.get(c.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:h,imag:p}}return s}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,o=0;for(let a=0;a<t;a++){const u=r.backend_util.exponent(s*a,t,n),c=r.backend_util.getComplexWithIndex(e,a);i+=c.real*u.real-c.imag*u.imag,o+=c.real*u.imag+c.imag*u.real}n&&(i/=t,o/=t),r.backend_util.assignToTypedArray(a,i,o,s)}return a}(r.backend_util.mergeRealAndImagArrays(i,o),a,t);return r.backend_util.splitRealAndImagArrays(e)}var u}function xt(e,t,n,a,s){if(1===n)return{real:e,imag:t};const i=r.backend_util.mergeRealAndImagArrays(e,t),o=n/2,u=r.backend_util.complexWithEvenIndex(i),c=u.real,l=u.imag,d=[c.length],h=s.makeTensorInfo(d,"float32",c),p=s.makeTensorInfo(d,"float32",l),f=Object(be.a)({inputs:{real:h,imag:p},backend:s}),m=r.backend_util.complexWithOddIndex(i),b=m.real,g=m.imag,y=[b.length],x=s.makeTensorInfo(y,"float32",b),v=s.makeTensorInfo(y,"float32",g),w=Object(be.a)({inputs:{real:x,imag:v},backend:s}),O=xt(c,l,o,a,s),k=O.real,I=O.imag,N=[k.length],T=s.makeTensorInfo(N,"float32",k),C=s.makeTensorInfo(N,"float32",I),j=Object(be.a)({inputs:{real:T,imag:C},backend:s}),E=xt(b,g,o,a,s),A=E.real,_=E.imag,$=[A.length],R=s.makeTensorInfo($,"float32",A),F=s.makeTensorInfo($,"float32",_),D=Object(be.a)({inputs:{real:R,imag:F},backend:s}),M=r.backend_util.exponents(n,a),z=[M.real.length],L=s.makeTensorInfo(z,"float32",M.real),P=s.makeTensorInfo(z,"float32",M.imag),B=Object(be.a)({inputs:{real:L,imag:P},backend:s}),V=Object(qe.a)({inputs:{a:B,b:D},backend:s}),W=Object(S.a)({inputs:{a:j,b:V},backend:s}),U=Object(bt.a)({inputs:{a:j,b:V},backend:s}),G=Object(we.a)({inputs:{input:W},backend:s}),H=Object(we.a)({inputs:{input:U},backend:s}),K=xe({inputs:{input:W},backend:s}),q=xe({inputs:{input:U},backend:s}),X=Oe({inputs:[G,H],backend:s,attrs:{axis:0}}),Z=Oe({inputs:[K,q],backend:s,attrs:{axis:0}}),Y=s.data.get(X.dataId).values,J=s.data.get(Z.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(Z),{real:Y,imag:J}}const vt={kernelName:r.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),i=a.shape[a.shape.length-1],o=I({inputs:{x:a},backend:n,attrs:{shape:[s/i,i]}}),u=gt(o,!1,n),c=I({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};function wt(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:i}=n,o=i||r.util.inferDtype(s),u=r.util.getArrayFromDType(o,r.util.sizeFromShape(a));return function(e,t,n){e.fill(t)}(u,s),t.makeTensorInfo(a,o,u)}const Ot={kernelName:r.Fill,backendName:"cpu",kernelFunc:wt},kt={kernelName:r.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,a=t,s=r.util.getTypedArrayFromDType(n.dtype,r.util.sizeFromShape(n.shape)),[i,o,u,c]=n.shape,l=a.data.get(n.dataId).values;for(let r=0;r<i;r++){const e=r*u*o*c;for(let t=0;t<o;t++){const n=t*(u*c);for(let t=0;t<u;t++){const r=t*c;for(let a=0;a<c;a++){const i=Math.round(u-t-1),o=e+n+r+a;let d=l[o];i>=0&&i<u&&(d=l[e+n+i*c+a]),s[o]=d}}}}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var St=n("01bp");const It=Object(f.a)((e,t)=>Math.floor(e/t)),Nt=Object(K.a)(r.FloorDiv,It,null,"int32"),Tt={kernelName:r.FloorDiv,backendName:"cpu",kernelFunc:Nt},Ct={kernelName:r.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Se({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const e=m;if("NCHW"===l&&1===i.shape.length&&1!==i.shape[0]){const e=I({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Object(S.a)({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Object(S.a)({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===l&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=I({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=k(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=k(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}},jt={kernelName:r.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Pe({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=Object(S.a)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=k(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var Et=n("lwMf");const At={kernelName:r.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,i=r.util.sizeFromShape(a.shape),o=s.shape,u=o[o.length-1],[c,l,d,h]=r.backend_util.prepareAndValidate(a,s);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const p=n.data.get(s.dataId).values,f=n.bufferSync(a),m=Object(Et.a)(p,f,a.dtype,l,u,d,h,a.shape,i);return n.makeTensorInfo(c,a.dtype,m.values)}};var _t=n("AoxF");const $t={kernelName:r.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,indices:o}=t,{axis:u,batchDims:c}=s;Object(a.a)([i,o],"gatherV2");const l=r.util.parseAxisParam(u,i.shape)[0],d=n.data.get(o.dataId).values,h=i.shape[l];for(let a=0;a<d.length;++a){const e=d[a];r.util.assert(e<=h-1&&e>=0,()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`)}let p=c;null==c&&(p=0);const f=r.util.sizeFromShape(o.shape),m=r.backend_util.segment_util.collectGatherOpShapeInfo(i,o,l,p),b=I({inputs:{x:i},backend:n,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),g=I({inputs:{x:o},backend:n,attrs:{shape:[m.batchSize,f/m.batchSize]}}),y=[m.batchSize,m.outerSize,f/m.batchSize,m.sliceSize],x=n.bufferSync(g),v=n.bufferSync(b),w=Object(_t.a)(v,x,y);return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(m.outputShape,w.dtype,w.values)}};var Rt=n("fn98"),Ft=n("qVni");const Dt={kernelName:r.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),i=a.shape[a.shape.length-1],o=I({inputs:{x:a},backend:n,attrs:{shape:[s/i,i]}}),u=gt(o,!0,n),c=I({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}},Mt=Object(u.a)(r.IsFinite,e=>Number.isFinite(e)?1:0,"bool"),zt={kernelName:r.IsFinite,backendName:"cpu",kernelFunc:Mt},Lt=Object(u.a)(r.IsInf,e=>Math.abs(e)===1/0?1:0,"bool"),Pt={kernelName:r.IsInf,backendName:"cpu",kernelFunc:Lt},Bt=Object(u.a)(r.IsNan,e=>Number.isNaN(e)?1:0,"bool"),Vt={kernelName:r.IsNan,backendName:"cpu",kernelFunc:Bt};var Wt=n("shNq"),Ut=n("Dhi/"),Gt=n("74aC");const Ht={kernelName:r.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Object(Gt.a)(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}};var Kt=n("aNuQ");const qt=Object(u.a)(r.Log1p,e=>Math.log1p(e)),Xt={kernelName:r.Log1p,backendName:"cpu",kernelFunc:qt},Zt=Object(f.a)((e,t)=>e&&t),Yt=Object(K.a)(r.LogicalAnd,Zt,null,"bool"),Jt={kernelName:r.LogicalAnd,backendName:"cpu",kernelFunc:Yt},Qt=Object(u.a)(r.LogicalNot,e=>e?0:1,"bool"),en={kernelName:r.LogicalNot,backendName:"cpu",kernelFunc:Qt},tn=Object(f.a)((e,t)=>e||t),nn=Object(K.a)(r.LogicalOr,tn,null,"bool"),rn={kernelName:r.LogicalOr,backendName:"cpu",kernelFunc:nn},an={kernelName:r.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=s;Object(a.a)(i,"LRN");const d=i.shape[3],h=d-1,p=n.data.get(i.dataId).values,f=r.util.sizeFromShape(i.shape),m=new Float32Array(f);function b(e){const t=e%d;let n=e-t+Math.max(0,t-o);const r=e-t+Math.min(t+o,h);let a=0;for(;n<=r;n++){const e=p[n];a+=e*e}return a}for(let r=0;r<f;r++){const e=b(r),t=p[r]*Math.pow(u+c*e,-l);m[r]=t}return n.makeTensorInfo(i.shape,i.dtype,m)}},sn={kernelName:r.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,y:o,dy:u}=t,{depthRadius:c,bias:l,alpha:d,beta:h}=s;Object(a.a)(u,"LRNGrad");const p=r.util.sizeFromShape(u.shape),f=u.shape[3],m=n.data.get(u.dataId).values,b=n.data.get(i.dataId).values,g=n.data.get(o.dataId).values,y=new Float32Array(p),x=p;for(let r=0;r<x;r++){const e=r%f,t=r-e+Math.max(0,e-c),n=r-e+Math.min(f,e+c+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(b[r],2);a=d*a+l;for(let s=t;s<n;s++){let e=-2*d*h*b[s]*g[r]/a;r===s&&(e+=Math.pow(a,-h)),e*=m[r],y[s]+=e}}return n.makeTensorInfo(u.shape,i.dtype,y)}};var on=n("B7Gm"),un=n("EjVc");function cn(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{reductionIndices:o,keepDims:u}=s,c=n;let l=i.shape;const d=l.length,h=r.util.parseAxisParam(o,l);let p=h;const f=r.backend_util.getAxesPermutation(p,d);let m=c.data.get(i.dataId).values;if(null!=f){const e=new Array(d);for(let t=0;t<e.length;t++)e[t]=l[f[t]];m=Object(un.a)(m,l,i.dtype,f,e),p=r.backend_util.getInnerMostAxes(p.length,d),l=e}Object(a.a)(i,"max"),r.backend_util.assertAxesAreInnerMostDims("max",p,d);const[b,g]=r.backend_util.computeOutAndReduceShapes(l,p),y=r.util.sizeFromShape(g),x=Object(on.a)(m,y,b,i.dtype),v=c.write(x,b,i.dtype);let w=b;return u&&(w=r.backend_util.expandShapeToKeepDim(b,h)),{dataId:v,shape:w,dtype:i.dtype}}const ln={kernelName:r.Max,backendName:"cpu",kernelFunc:cn};var dn=n("i+Li");const hn={kernelName:r.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t;Object(a.a)(i,"maxPool");const{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=s;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`);const h=r.backend_util.computePool2DInfo(i.shape,o,u,1,c,l);let p;if(1===h.filterWidth&&1===h.filterHeight&&r.util.arraysEqual(h.inShape,h.outShape))p=Object(d.a)({inputs:{x:i},backend:n});else{const e=n.data.get(i.dataId).values,t=r.util.computeStrides(i.shape),a=Q(e,0,i.dtype,t,h,"max");p=n.makeTensorInfo(h.outShape,i.dtype,a.values)}return p}},pn={kernelName:r.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{filterSize:o,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=s;Object(a.a)(i,"maxPool3d");const h=r.backend_util.computePool3DInfo(i.shape,o,u,1,c,l,d),p=te(n.data.get(i.dataId).values,0,i.dtype,r.util.computeStrides(i.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},fn={kernelName:r.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,input:o}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=s;Object(a.a)([i,o],"maxPool3DGrad");const h=r.backend_util.computePool3DInfo(o.shape,u,c,1,l,d),p=function(e,t){const n=Object(r.buffer)(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let b=0;b<t.inChannels;++b)for(let g=0;g<t.outDepth;++g){const y=g*a-p;let x=y;for(;x<0;)x+=o;const v=Math.min(t.inDepth,l+y);for(let a=0;a<t.outHeight;++a){const l=a*s-f;let p=l;for(;p<0;)p+=u;const w=Math.min(t.inHeight,d+l);for(let s=0;s<t.outWidth;++s){const f=s*i-m;let O=f;for(;O<0;)O+=c;const k=Math.min(t.inWidth,h+f);let S=Number.NEGATIVE_INFINITY,I=-1;for(let t=x;t<v;t+=o){const n=t-y;for(let a=p;a<w;a+=u){const s=a-l;for(let i=O;i<k;i+=c){const o=i-f,u=e.get(r,t,a,i,b);u>=S&&(S=u,I=n*d*h+s*d+o)}}}n.set(I,r,g,a,s,b)}}}return n}(n.bufferSync(o),h),f=h.strideDepth,m=h.strideHeight,b=h.strideWidth,g=h.dilationDepth,y=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterDepth,w=h.effectiveFilterHeight,O=h.effectiveFilterWidth,k=v-1-h.padInfo.front,S=O-1-h.padInfo.left,I=w-1-h.padInfo.top,N=Object(r.buffer)(o.shape,"float32"),T=n.bufferSync(i);for(let r=0;r<h.batchSize;++r)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inDepth;++t)for(let n=0;n<h.inHeight;++n)for(let a=0;a<h.inWidth;++a){const s=t-k,i=n-I,o=a-S;let u=0;for(let t=0;t<v;t+=g){const n=(s+t)/f;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let a=0;a<w;a+=y){const s=(i+a)/m;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let i=0;i<O;i+=x){const c=(o+i)/b;if(c<0||c>=h.outWidth||Math.floor(c)!==c)continue;const l=v*w*O-1-p.get(r,n,s,c,e)===t*w*O+a*O+i?1:0;0!==l&&(u+=T.get(r,n,s,c,e)*l)}}}N.set(u,r,t,n,a,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},mn={kernelName:r.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:i,input:o,output:u}=t,c=o;Object(a.a)([o,u],"maxPoolGrad");const{filterSize:l,strides:d,pad:h,dimRoundingMode:p}=s,f=r.backend_util.computePool2DInfo(c.shape,l,d,1,h,p),m=n.data.get(c.dataId).values,b=Object(r.buffer)(f.outShape,c.dtype,ee(m,c.shape,c.dtype,f).values),g=f.strideHeight,y=f.strideWidth,x=f.dilationHeight,v=f.dilationWidth,w=f.effectiveFilterHeight,O=f.effectiveFilterWidth,k=O-1-f.padInfo.left,S=w-1-f.padInfo.top,I=Object(r.buffer)(c.shape,"float32"),N=n.data.get(i.dataId).values,T=Object(r.buffer)(i.shape,"float32",N);for(let r=0;r<f.batchSize;++r)for(let e=0;e<f.inChannels;++e)for(let t=0;t<f.inHeight;++t)for(let n=0;n<f.inWidth;++n){const a=t-S,s=n-k;let i=0;for(let t=0;t<w;t+=x){const n=(a+t)/g;if(!(n<0||n>=f.outHeight||Math.floor(n)!==n))for(let a=0;a<O;a+=v){const o=(s+a)/y;if(o<0||o>=f.outWidth||Math.floor(o)!==o)continue;const u=w*O-1-b.get(r,n,o,e)===t*O+a?1:0;0!==u&&(i+=T.get(r,n,o,e)*u)}}I.set(i,r,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},bn={kernelName:r.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:i,strides:o,pad:u,includeBatchInIndex:c}=t,l=n;Object(a.a)(s,"MaxPoolWithArgmax");const d=l.data.get(s.dataId).values,h=r.backend_util.computePool2DInfo(s.shape,i,o,[1,1],u),[p,f]=function(e,t,n,a,s){const i=Q(e,0,n,r.util.computeStrides(t),s,"max"),o=ee(e,t,n,s,!0,a);return[i.values,o.values]}(d,s.shape,s.dtype,c,h),m=l.write(p,h.outShape,s.dtype),b=l.write(f,h.outShape,s.dtype);return[{dataId:m,shape:h.outShape,dtype:s.dtype},{dataId:b,shape:h.outShape,dtype:"int32"}]}},gn={kernelName:r.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=r.util.parseAxisParam(i,s.shape),c=r.backend_util.computeOutAndReduceShapes(s.shape,u),l=r.util.sizeFromShape(c[1]),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=Object(he.a)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=ft({inputs:{a:p,b:h},backend:n});d.push(f);const m=Ze({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}},yn={kernelName:r.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{axis:o,keepDims:u}=s;Object(a.a)(i,"min");const c=r.util.parseAxisParam(o,i.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,i.shape.length);let h=i;null!=d&&(h=Object(D.a)({inputs:{x:i},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,i.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,h.shape.length);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let r=0;r<b.length;++r){const e=r*m;let t=g[e];for(let n=0;n<m;++n){const r=g[e+n];(Number.isNaN(r)||r<t)&&(t=r)}b[r]=t}null!=d&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(p,h.dtype,b);if(u){const e=I({inputs:{x:y},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}};var xn=n("A7Us");const vn={kernelName:r.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{paddings:o,mode:u}=s;Object(a.a)(i,"mirrorPad");const c=o.map((e,t)=>e[0]+i.shape[t]+e[1]),l=o.map(e=>e[0]),d=o.map((e,t)=>e[0]+i.shape[t]),h="reflect"===u?0:1,p=n.data.get(i.dataId).values,f=i.shape.length,m=r.util.computeStrides(i.shape),b=r.util.sizeFromShape(c),g=c.length,y=r.util.computeStrides(c),x=r.util.getTypedArrayFromDType(i.dtype,b);for(let a=0;a<b;a++){let e=r.util.indexToLoc(a,g,y);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-h:e[n]>=d[n]&&(e[n]=2*(d[n]-1)-e[n]+h);e=e.map((e,t)=>e-l[t]);const t=r.util.locToIndex(e,f,m);x[a]=p[t]}return{dataId:n.write(x,c,i.dtype),shape:c,dtype:i.dtype}}},wn=Object(f.a)((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),On=Object(K.a)(r.Mod,wn),kn={kernelName:r.Mod,backendName:"cpu",kernelFunc:On};var Sn=n("YSVl");function In(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:i}=a,o=s.shape.length;let u=i;if(-1===u&&(u=o-1),u!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${u}`);const c=r.util.parseAxisParam([u],s.shape),l=cn({inputs:{x:s},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=r.backend_util.expandShapeToKeepDim(l.shape,c),h=I({inputs:{x:l},backend:n,attrs:{shape:d}}),p=Object(bt.a)({inputs:{a:s,b:h},backend:n}),f=Object(ct.a)({inputs:{x:p},backend:n}),m=Ze({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),b=I({inputs:{x:m},backend:n,attrs:{shape:d}}),g=ft({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const Nn={kernelName:r.Softmax,backendName:"cpu",kernelFunc:In},Tn={kernelName:r.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:i}=t,{numSamples:o,seed:u,normalized:c}=s;Object(a.a)(i,"multinomial");const l=c?i:In({inputs:{logits:i},backend:n,attrs:{dim:-1}}),d=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,f=[d,o],m=r.util.makeZerosTypedArray(r.util.sizeFromShape(f),"int32");for(let r=0;r<d;++r){const e=r*h,t=new Float32Array(h-1);t[0]=p[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+p[e+r];const n=Sn.alea(u.toString()),a=r*o;for(let r=0;r<o;++r){const e=n();m[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){m[a+r]=n;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(f,"int32",m)}};var Cn=n("tuD/");const jn=r.kernel_impls.nonMaxSuppressionV3Impl,En={kernelName:r.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c}=r;Object(a.a)(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,{selectedIndices:h}=jn(l,d,o,u,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},An=r.kernel_impls.nonMaxSuppressionV4Impl,_n={kernelName:r.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=r;Object(a.a)(s,"NonMaxSuppressionPadded");const d=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:p,validOutputs:f}=An(d,h,o,u,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},$n=r.kernel_impls.nonMaxSuppressionV5Impl,Rn={kernelName:r.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=r;Object(a.a)(s,"NonMaxSuppressionWithScore");const d=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,p=o,f=u,m=c,b=l,{selectedIndices:g,selectedScores:y}=$n(d,h,p,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var Fn=n("H68w");const Dn={kernelName:r.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:i}=t,{depth:o,onValue:u,offValue:c}=s;Object(a.a)(i,"oneHot");const l=r.util.sizeFromShape(i.shape),d=new Float32Array(l*o);d.fill(c);const h=n.data.get(i.dataId).values;for(let r=0;r<l;++r)h[r]>=0&&h[r]<o&&(d[r*o+h[r]]=u);return n.makeTensorInfo([...i.shape,o],"int32",d)}};function Mn(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Object(we.a)({inputs:{input:r},backend:n}),t=Mn({inputs:{x:e},backend:n}),a=xe({inputs:{input:r},backend:n}),s=Mn({inputs:{x:a},backend:n}),i=Object(be.a)({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return wt({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const zn={kernelName:r.ZerosLike,backendName:"cpu",kernelFunc:Mn},Ln={kernelName:r.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Object(we.a)({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=xe({inputs:{input:a},backend:r}),i=Mn({inputs:{x:s},backend:r}),o=Object(be.a)({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return wt({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function Pn(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return lt({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],c=Oe({inputs:t.map(e=>{const t=lt({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t}),backend:n,attrs:{axis:s}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}const Bn={kernelName:r.Pack,backendName:"cpu",kernelFunc:Pn},Vn={kernelName:r.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{paddings:o,constantValue:u}=s;Object(a.a)(i,"pad");const c=o.map((e,t)=>e[0]+i.shape[t]+e[1]),l=o.map(e=>e[0]),d=n.data.get(i.dataId).values,h=r.util.sizeFromShape(i.shape),p=i.shape.length,f=r.util.computeStrides(i.shape),m=r.util.sizeFromShape(c),b=c.length,g=r.util.computeStrides(c),y=r.util.getTypedArrayFromDType(i.dtype,m);0!==u&&y.fill(u);for(let a=0;a<h;a++){const e=r.util.indexToLoc(a,p,f).map((e,t)=>e+l[t]);y[r.util.locToIndex(e,b,g)]=d[a]}return{dataId:n.write(y,c,i.dtype),shape:c,dtype:i.dtype}}},Wn=Object(f.a)((e,t)=>Math.pow(e,t)),Un=Object(K.a)(r.Pow,Wn),Gn={kernelName:r.Pow,backendName:"cpu",kernelFunc:Un};var Hn=n("TJwl"),Kn=n("Q9nt");const qn={kernelName:r.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Object(Kn.a)(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},Xn=Object(u.a)(r.Reciprocal,e=>1/e),Zn={kernelName:r.Reciprocal,backendName:"cpu",kernelFunc:Xn},Yn={kernelName:r.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:i}=t,{alignCorners:o,halfPixelCenters:u,size:c}=s;Object(a.a)(i,"resizeBilinear");const l=r.util.computeStrides(i.shape),[d,h]=c,[p,f,m,b]=i.shape,g=n.data.get(i.dataId).values,y=new Float32Array(r.util.sizeFromShape([p,d,h,b])),x=[o&&d>1?f-1:f,o&&h>1?m-1:m],v=[o&&d>1?d-1:d,o&&h>1?h-1:h];let w=0;const O=x[0]/v[0],k=x[1]/v[1];for(let r=0;r<p;r++)for(let e=0;e<d;e++){let t;t=u?O*(e+.5)-.5:O*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(f-1,Math.ceil(t)),i=r*l[0]+n*l[1],o=r*l[0]+s*l[1];for(let e=0;e<h;e++){let t;t=u?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(m-1,Math.ceil(t)),c=i+n*l[2],d=o+n*l[2],h=i+s*l[2],p=o+s*l[2];for(let e=0;e<b;e++){const t=g[c+e],n=g[d+e],s=t+(g[h+e]-t)*r;y[w++]=s+(n+(g[p+e]-n)*r-s)*a}}}return n.makeTensorInfo([p,d,h,b],"float32",y)}},Jn={kernelName:r.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:i,dy:o}=t,{alignCorners:u}=s;Object(a.a)([o,i],"resizeBilinearGrad");const c=r.util.computeStrides(i.shape),[l,d,h,p]=i.shape,[,f,m]=o.shape,b=new Float32Array(l*d*h*p),g=[u&&f>1?d-1:d,u&&m>1?h-1:h],y=[u&&f>1?f-1:f,u&&m>1?m-1:m],x=g[0]/y[0],v=g[1]/y[1],w=n.data.get(o.dataId).values;let O=0;for(let r=0;r<l;r++){const e=r*c[0];for(let t=0;t<f;t++){const n=t*x,r=Math.floor(n),a=Math.min(Math.ceil(n),d-1),s=e+r*c[1],i=e+a*c[1],o=n-r,u=1-o;for(let e=0;e<m;e++){const t=e*v,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,l=1-a,d=s+n*c[2],f=s+r*c[2],m=i+n*c[2],g=i+r*c[2],y=u*l,x=u*a,k=o*l,S=o*a;for(let e=0;e<p;e++){const t=w[O++];b[d+e]+=t*y,b[f+e]+=t*x,b[m+e]+=t*k,b[g+e]+=t*S}}}}return n.makeTensorInfo([l,h,d,p],"float32",b)}},Qn={kernelName:r.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:i}=t,{alignCorners:o,halfPixelCenters:u,size:c}=s;Object(a.a)(i,"resizeNearestNeighbor");const l=r.util.computeStrides(i.shape),[d,h]=c,[p,f,m,b]=i.shape,g=n.data.get(i.dataId).values,y=new Float32Array(p*d*h*b),x=[o&&d>1?f-1:f,o&&h>1?m-1:m],v=[o&&d>1?d-1:d,o&&h>1?h-1:h],w=x[0]/v[0],O=x[1]/v[1];let k=0;for(let r=0;r<p;r++){const e=r*l[0];for(let t=0;t<d;t++){const n=u?w*(t+.5):w*t;let r=Math.min(f-1,o?Math.round(n):Math.floor(n));u&&(r=Math.max(0,r));const a=e+r*l[1];for(let e=0;e<h;e++){const t=u?O*(e+.5):O*e;let n=Math.min(m-1,o?Math.round(t):Math.floor(t));u&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<b;e++)y[k++]=g[r+e]}}}return n.makeTensorInfo([p,d,h,b],i.dtype,y)}},er={kernelName:r.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:i,dy:o}=t,{alignCorners:u}=s;Object(a.a)([o,i],"resizeNearestNeighborGrad");const c=r.util.computeStrides(i.shape),l=r.util.computeStrides(o.shape),[d,h,p,f]=i.shape,[,m,b]=o.shape,g=new Float32Array(d*h*p*f),y=n.data.get(o.dataId).values,x=[u&&m>1?h-1:h,u&&b>1?p-1:p],v=[u&&m>1?m-1:m,u&&b>1?b-1:b],w=x[0]/v[0],O=x[1]/v[1],k=1/w,S=1/O,I=2*Math.ceil(k)+2,N=2*Math.ceil(S)+2;for(let r=0;r<d;r++){const e=r*c[0];for(let t=0;t<h;t++){const n=e+t*c[1],r=Math.floor(t*k),a=Math.floor(r-I/2);for(let s=0;s<p;s++){const r=n+s*c[2],i=Math.floor(s*S),o=Math.floor(i-N/2);for(let n=0;n<f;n++){let i=0;for(let r=0;r<I;r++){const c=r+a;if(c<0||c>=m)continue;const d=e+c*l[1],f=c*w;if(t===Math.min(h-1,u?Math.round(f):Math.floor(f)))for(let e=0;e<N;e++){const t=e+o;if(t<0||t>=b)continue;const r=d+t*l[2],a=t*O;s===Math.min(p-1,u?Math.round(a):Math.floor(a))&&(i+=y[r+n])}}g[r+n]=i}}}}return n.makeTensorInfo(i.shape,i.dtype,g)}},tr={kernelName:r.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{dims:o}=s;Object(a.a)(i,"reverse");const u=i.shape.length,c=r.util.parseAxisParam(o,i.shape);if(0===u)return Object(d.a)({inputs:{x:i},backend:n});const l=new r.TensorBuffer(i.shape,i.dtype),h=n.bufferSync(i);for(let r=0;r<l.size;r++){const e=l.indexToLoc(r),t=e.slice();c.forEach(e=>t[e]=i.shape[e]-1-t[e]),l.set(h.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},nr={kernelName:r.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:i,center:o}=t,u=n,c=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[l,d,h,p]=a.shape,[f,m]=r.backend_util.getImageCenter(o,d,h),b=Math.sin(s),g=Math.cos(s),y=u.data.get(a.dataId).values;for(let r=0;r<l;r++){const e=r*h*d*p;for(let t=0;t<d;t++){const n=t*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let s=0;s<p;s++){const o=[l,t,r,s],u=o[2],x=o[1];let v=(u-f)*g-(x-m)*b,w=(u-f)*b+(x-m)*g;v=Math.round(v+f),w=Math.round(w+m);let O=i;"number"!=typeof i&&(O=3===s?255:i[s]),v>=0&&v<h&&w>=0&&w<d&&(O=y[e+w*(h*p)+v*p+s]),c[e+n+a+s]=O}}}}return{dataId:u.write(c,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},rr=Object(u.a)(r.Round,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),ar={kernelName:r.Round,backendName:"cpu",kernelFunc:rr};var sr=n("xOKT"),ir=n("I6Cx");const or={kernelName:r.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:i}=t,{shape:o}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=r.backend_util.calculateShapes(i,s,o),p=n.bufferSync(s),f=n.bufferSync(i),m=Object(ir.a)(p,f,o,h,l,c,u,d,0,!0);return n.makeTensorInfo(o,m.dtype,m.values)}};function ur(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function cr(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}const lr={kernelName:r.SearchSorted,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:s,values:i}=t,{side:o}=a,u=function(e,t,n,a,s,i){const o=r.util.getArrayFromDType("int32",n*s);for(let r=0;r<n;++r){const n=e.slice(r*a,(r+1)*a),u=r*s;for(let e=0;e<s;++e)o[u+e]="left"===i?ur(n,t[e+u]):cr(n,t[e+u])}return o}(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],o);return n.makeTensorInfo(i.shape,"int32",u)}},dr={kernelName:r.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:i,e:o}=t;Object(a.a)([s,i,o],"select");const u=s.shape.length,c=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,d=n.data.get(o.dataId).values,h=Object(r.upcastType)(i.dtype,o.dtype),p=r.util.makeZerosTypedArray(r.util.sizeFromShape(i.shape),h);let f=0;const m=0===u||u>1||1===i.shape.length?1:r.util.sizeFromShape(i.shape.slice(1));for(let r=0;r<c.length;r++)for(let e=0;e<m;e++)p[f++]=1===c[r]?l[r]:d[r];return n.makeTensorInfo(i.shape,h,p)}},hr=r.backend_util.SELU_SCALEALPHA,pr=r.backend_util.SELU_SCALE,fr=Object(u.a)(r.Selu,e=>e>=0?pr*e:hr*(Math.exp(e)-1)),mr={kernelName:r.Selu,backendName:"cpu",kernelFunc:fr},br=Object(u.a)(r.Sign,e=>e<0?-1:e>0?1:0),gr={kernelName:r.Sign,backendName:"cpu",kernelFunc:br},yr=Object(u.a)(r.Sin,e=>Math.sin(e)),xr={kernelName:r.Sin,backendName:"cpu",kernelFunc:yr},vr=Object(u.a)(r.Sinh,e=>Math.sinh(e)),wr={kernelName:r.Sinh,backendName:"cpu",kernelFunc:vr},Or=Math.log(1.1920928955078125e-7)+2,kr=Object(u.a)(r.Softplus,e=>{const t=e>-Or,n=e<Or,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a}),Sr={kernelName:r.Softplus,backendName:"cpu",kernelFunc:kr},Ir={kernelName:r.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{blockShape:o,paddings:u}=s;Object(a.a)([i],"spaceToBatchND");const c=r.util.sizeFromShape(o),l=[[0,0]];l.push(...u);for(let r=1+o.length;r<i.shape.length;++r)l.push([0,0]);const d=Vn.kernelFunc({inputs:{x:i},backend:n,attrs:{paddings:l,constantValue:0}}),h=r.backend_util.getReshaped(d.shape,o,c,!1),p=r.backend_util.getPermuted(h.length,o.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,o,c,!1),m=I({inputs:{x:d},backend:n,attrs:{shape:h}}),b={x:m},g={perm:p},y=Object(D.a)({inputs:b,backend:n,attrs:g}),x=I({inputs:{x:y},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),x}};var Nr=n("Gy5z");const Tr={kernelName:r.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[d,h,p,f,m]=Object(Nr.a)(o,r.shape,r.dtype,u,a.dtype,c,l);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var Cr=n("MaBh");const jr={kernelName:r.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[c,l,d]=Object(Cr.a)(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};var Er=n("PwBI");const Ar={kernelName:r.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[c,l]=Object(Er.a)(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(l,r.dtype,c)}},_r={kernelName:r.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[c,l]=Object(Er.a)(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(l,r.dtype,c)}},$r={kernelName:r.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=r.backend_util.calculateShapes(i,s,u),f=!1,m=n.bufferSync(s);let b;switch(i.dtype){case"bool":{const e=n.bufferSync(i),t=Boolean(n.data.get(o.dataId).values[0]);b=Object(ir.a)(m,e,u,p,d,l,c,h,t,f);break}case"float32":{const e=n.bufferSync(i),t=n.data.get(o.dataId).values[0];b=Object(ir.a)(m,e,u,p,d,l,c,h,t,f);break}case"int32":{const e=n.bufferSync(i),t=n.data.get(o.dataId).values[0];b=Object(ir.a)(m,e,u,p,d,l,c,h,t,f);break}case"string":{const e=n.bufferSync(i),t=r.util.decodeString(n.data.get(o.dataId).values[0]);b=Object(ir.a)(m,e,u,p,d,l,c,h,t,f);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(u,b.dtype,b.values)}},Rr={kernelName:r.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=a,u=r.util.parseAxisParam(o,s.shape)[0],c=r.backend_util.prepareSplitSize(s,i,u),l=new Array(s.shape.length).fill(0),d=s.shape.slice();return c.map(e=>{const t=[...d];t[u]=e;const r=Object(oe.a)({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[u]+=e,r})}};var Fr=n("N7VH");const Dr={kernelName:r.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Object(a.a)(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let a=0;a<s.length;++a){const e=s[a];i[a]=e*e}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Mr=n("ThxY");const zr=Object(u.a)(r.Step,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),Lr={kernelName:r.Step,backendName:"cpu",kernelFunc:zr};var Pr=n("4tfB");const Br={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{begin:o,end:u,strides:c,beginMask:l,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:f}=s;Object(a.a)(i,"stridedSlice");const{finalShapeSparse:m,finalShape:b,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:v,end:w,strides:O}=r.slice_util.sliceInfo(i.shape,o,u,c,l,d,h,p,f);let k;if(g)k=I({inputs:{x:i},backend:n,attrs:{shape:b}});else if(y||x){r.util.assert(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const e=r.slice_util.computeOutShape(v,w,O),t=Object(oe.a)({inputs:{x:i},backend:n,attrs:{begin:v,size:e}});k=I({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(i),t=Object(Pr.a)(m,e,O,v);k=n.makeTensorInfo(b,t.dtype,t.values)}return k}};var Vr=n("j2iD");const Wr={kernelName:r.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,h=n.data.get(l.dataId).values,p=n.data.get(d.dataId).values,[f,m]=Object(Vr.a)(h,p,a,s,i,o,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var Ur=n("uDer");const Gr={kernelName:r.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[c,l,d]=Object(Ur.a)(o,u,a),h=l.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var Hr=n("pCbQ");const Kr={kernelName:r.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(s.dataId).values,o=Object(Hr.a)(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},qr=Object(u.a)(r.Tan,e=>Math.tan(e)),Xr={kernelName:r.Tan,backendName:"cpu",kernelFunc:qr},Zr=Object(u.a)(r.Tanh,e=>Math.tanh(e)),Yr={kernelName:r.Tanh,backendName:"cpu",kernelFunc:Zr};var Jr=n("AwLj");const Qr={kernelName:r.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;Object(a.a)(s,"tile");const o=Object(Jr.a)(n.bufferSync(s),i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}};var ea=n("8R1p");const ta={kernelName:r.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:o}=r;Object(a.a)(s,"topk");const u=n.data.get(s.dataId).values,[c,l]=Object(ea.a)(u,s.shape,s.dtype,i,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},na={kernelName:r.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:i}=t,{interpolation:o,fillMode:u,fillValue:c,outputShape:l}=n,[d,h,p,f]=s.shape,[m,b]=null!=l?l:[h,p],g=[d,m,b,f],y=r.util.computeStrides(s.shape),x=y[0],v=y[1],w=y[2],O=r.util.getTypedArrayFromDType(s.dtype,r.util.sizeFromShape(g));O.fill(c);const k=a.data.get(s.dataId).values,S=a.data.get(i.dataId).values;for(let r=0;r<d;++r){const e=1===i.shape[0]?S:S.subarray(8*r,8*r+8);for(let t=0;t<m;++t)for(let n=0;n<b;++n)for(let a=0;a<f;++a){let s;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const l=(e[3]*n+e[4]*t+e[5])/i,d=ra((e[0]*n+e[1]*t+e[2])/i,p,u),f=ra(l,h,u);switch(o){case"nearest":s=sa(k,h,p,x,v,w,r,f,d,a,c);break;case"bilinear":s=ia(k,h,p,x,v,w,r,f,d,a,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}O[r*x+t*v+n*w+a]=s}return a.makeTensorInfo(g,s.dtype,O)}return{dataId:a.write(O,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function ra(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;return n<0?t<=1?n=0:n+=t*(Math.trunc(-n/(t-1))+1):n>t-1&&(t<=1?n=0:n-=t*Math.trunc(n/(t-1))),r.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.util.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function aa(e,t,n,r,a,s,i,o,u,c,l){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+c]:l}function sa(e,t,n,r,a,s,i,o,u,c,l){return aa(e,t,n,r,a,s,i,Math.round(o),Math.round(u),c,l)}function ia(e,t,n,r,a,s,i,o,u,c,l){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1;return(p-o)*((f-u)*aa(e,t,n,r,a,s,i,d,h,c,l)+(u-h)*aa(e,t,n,r,a,s,i,d,f,c,l))+(o-d)*((f-u)*aa(e,t,n,r,a,s,i,p,h,c,l)+(u-h)*aa(e,t,n,r,a,s,i,p,f,c,l))}var oa=n("iOm3");const ua=[j,E.a,_,R,S.b,F,M,z,L,P,V,U,H,Z,J,ne,re,ae,se,C,ie,ue,le,de,he.b,pe.a,me,be.b,ge,ke,Ie,Ne,Te,Ce,je,Ee,_e,Re,Fe,De,Me,ze,Le,Be,Ve,We,Ue,Ge,He,Ke,Je,l,Qe,et.b,ut,ct.b,dt,ht.a,vt,Ot,kt,St.a,Tt,Ct,jt,At,$t,Rt.a,Ft.a,d.b,Dt,ve,zt,Pt,Vt,p,Wt.a,Ut.a,Ht,Kt.a,Xt,Jt,en,rn,an,sn,ln,dn.a,hn,pn,fn,mn,bn,gn,yn,xn.a,vn,kn,Tn,qe.b,Cn.a,En,_n,Rn,Fn.a,Dn,Ln,Bn,Vn,Gn,g,Hn.a,qn,we.b,mt,Zn,x,w,N,Yn,Jn,Qn,er,tr,nr,ar,sr.a,or,lr,dr,mr,O.b,gr,xr,wr,oe.b,Nn,Sr,Ir,Tr,jr,Ar,_r,$r,Rr,Fr.a,Dr,Mr.a,Lr,Br,Wr,Gr,Kr,bt.b,Ye,Xr,Yr,Qr,ta,na,D.b,{kernelName:r.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;Object(a.a)(i,"unique");const o=r.data.get(i.dataId).values,{outputValues:u,outputShape:c,indices:l}=Object(oa.a)(o,s,i.shape,i.dtype);return[r.makeTensorInfo(c,i.dtype,u),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:r.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let c=0;for(let p=0;p<i;p++)p!==s&&(u[c++]=a.shape[p]);const l=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let p=0;p<h.length;p++){l[s]=p;const e=Object(oe.a)({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[p]=I({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return h}},{kernelName:r.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:i,segmentIds:o}=t,{numSegments:u}=s;Object(a.a)(i,"unsortedSegmentSum");const c=[],l=[],d=i.shape.length-o.shape.length;let h=o;for(let r=0;r<d;++r){const e=lt({inputs:{input:h},backend:n,attrs:{dim:r+1}});h=e,l.push(e)}for(let a=0;a<u;++a){const e=r.util.createScalarValue(a,"int32"),t=n.makeTensorInfo([],"int32",e),s=Object(et.a)({inputs:{a:t,b:h},backend:n}),o=Object(he.a)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=Object(qe.a)({inputs:{a:o,b:i},backend:n}),d=Ze({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});c.push(d),l.push(t),l.push(s),l.push(o),l.push(u),l.push(d)}const p=Pn({inputs:c,backend:n,attrs:{axis:0}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},zn];for(const ca of ua)Object(r.registerKernel)(ca)},j2iD:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("+hG3");class a{constructor(e,t,n,a,s,i){this.separator=r.util.encodeString(e),this.nGramWidths=t,this.leftPad=r.util.encodeString(n),this.rightPad=r.util.encodeString(a),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),c=Math.max(0,o-(a-(i+1))),l=s-(u+c),d=t+(u>0?0:i-o);let h=0;h+=u*this.leftPad.length;for(let t=0;t<l;++t)h+=e[d+t].length;h+=c*this.rightPad.length,h+=(u+c+l-1)*this.separator.length,n[r+i]=new Uint8Array(h);const p=n[r+i];let f=0;const m=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[d+t]),m(this.separator);if(l>0){m(e[d+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,i=r.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=s;++t)i[t]=0;return[e,i]}i[0]=0;for(let r=1;r<=s;++r){const e=t[r]-t[r-1];let n=0;this.nGramWidths.forEach(t=>{n+=this.getNumNGrams(e,t)}),this.preserveShort&&e>0&&0===n&&(n=1),i[r]=i[r-1]+n}const o=new Array(i[s]);for(let r=0;r<s;++r){const n=t[r];let a=i[r];if(this.nGramWidths.forEach(s=>{const i=this.getNumNGrams(t[r+1]-t[r],s);this.createNGrams(e,n,o,a,i,s),a+=i}),this.preserveShort&&a===i[r]){const s=t[r+1]-t[r];if(0===s)continue;this.createNGrams(e,n,o,a,1,s+2*this.padWidth)}}return[o,i]}}function s(e,t,n,r,s,i,o,u){return new a(n,r,s,i,o,u).compute(e,t)}},jLCh:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,o,u=[1,1],c){let l=t,d=!1;3===t.rank&&(d=!0,l=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h=r.a.runKernel(a.S,{dy:l,filter:n},{strides:s,pad:o,dimRoundingMode:c,dilations:u,inputShape:e});return d?Object(i.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})},jXH2:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({tile_:function(e,t){const n=Object(s.a)(e,"x","tile","string_or_numeric");return i.b(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),r.a.runKernel(a.fd,{x:n},{reps:t})}})},jgXy:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("VO80");const c=Object(u.b)({erf_:function(e){let t=Object(s.a)(e,"x","erf");return i.b("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Object(o.a)(t,"float32")),r.a.runKernel(a.bb,{x:t})}})},k7Jv:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("auKK"),a=n("o/e8"),s=n("VO80");const i=Object(s.b)({square_:function(e){const t=Object(a.a)(e,"x","square");return r.a.runKernel("Square",{x:t},{})}})},k9tH:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({mirrorPad_:function(e,t,n){i.b("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const o=Object(s.a)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.b(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);const u="reflect"===n?1:0;for(let r=0;r<o.rank;r++)i.b(2===t[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),i.b(t[r][0]>=0&&t[r][0]<=o.shape[r]-u&&t[r][1]>=0&&t[r][1]<=o.shape[r]-u,()=>`Padding in dimension ${r} cannot be greater than or equal to ${o.shape[r]-u} or less than 0 for input of shape ${o.shape}`);return r.a.runKernel(a.Vb,{x:o},{paddings:t,mode:n})}})},kRdc:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({add_:function(e,t){let n=Object(i.a)(e,"a","add"),o=Object(i.a)(t,"b","add");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.d,{a:n,b:o})}})},kXpR:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({relu_:function(e){const t=Object(s.a)(e,"x","relu");return r.a.runKernel(a.qc,{x:t})}})},kaMP:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({gather_:function(e,t,n=0,i=0){const o=Object(s.a)(e,"x","gather"),u=Object(s.a)(t,"indices","gather","int32");return r.a.runKernel(a.pb,{x:o,indices:u},{axis:n,batchDims:i})}})},kne7:function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return a});const a={kernelName:n("+hG3").Complex,backendName:"cpu",kernelFunc:r}},"kx/G":function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"e",function(){return a}),n.d(t,"d",function(){return s}),n.d(t,"c",function(){return i}),n.d(t,"b",function(){return o});class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==r.instance&&(r.instance=new r),r.instance}static registerSaveRouter(e){r.getInstance().saveRouters.push(e)}static registerLoadRouter(e){r.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return r.getHandlers(e,"save")}static getLoadHandlers(e,t){return r.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(t=>{const r=t(e,n);null!==r&&a.push(r)}),a}}const a=e=>r.registerSaveRouter(e),s=e=>r.registerLoadRouter(e),i=e=>r.getSaveHandlers(e),o=(e,t)=>r.getLoadHandlers(e,t)},l0gX:function(e,t,n){"use strict";n.d(t,"a",function(){return d});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("uBja"),c=n("VO80"),l=n("NclT");const d=Object(c.b)({avgPool_:function(e,t,n,c,d){const h=Object(s.a)(e,"x","avgPool","float32");i.b(u.i(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let p=h,f=!1;3===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===p.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`),u.a("avgPool",c,d);let m=r.a.runKernel(a.o,{x:p},{filterSize:t,strides:n,pad:c,dimRoundingMode:d});return m=Object(o.a)(m,h.dtype),f?Object(l.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},lg8H:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("o/e8"),a=n("atXS"),s=n("WVnj");function i(e,t){Object(a.d)(e);const n=Object(r.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(s.a)(e,null,n,t)}},lwMf:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a,s,i,o,u,c){const l=Object(r.buffer)([a,i],n);for(let r=0;r<a;r++){const n=[];let a=0;for(let t=0;t<s;t++){const i=e[r*s+t];a+=i*o[t],n.push(i)}if(a<0||a>=c/i)throw new Error(`Invalid indices: ${n} does not index into ${u}`);for(let e=0;e<i;e++)l.values[r*i+e]=t.get(...t.indexToLoc(a*i+e))}return l}},"lzW/":function(e,t,n){"use strict";n.d(t,"c",function(){return i}),n.d(t,"a",function(){return u}),n.d(t,"b",function(){return c});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>e+t),o=Object(s.b)((e,t,n,r)=>({real:e+n,imag:t+r})),u=Object(s.a)(r.Add,i,o),c={kernelName:r.Add,backendName:"cpu",kernelFunc:u}},mEeB:function(e,t,n){"use strict";n.d(t,"a",function(){return r});const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},mdDO:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({conv3DBackpropInput_:function(e,t,n,i,u){s.b(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let c=e,l=t,d=!1;4===t.rank&&(d=!0,l=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),c=[1,e[0],e[1],e[2],e[3]]);const h=c[4],p=l.shape[4];s.b(5===c.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${c.length}.`),s.b(5===l.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${l.rank}`),s.b(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),s.b(h===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`),s.b(p===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`);const f=r.a.runKernel(a.I,{dy:l,filter:n},{pad:u,strides:i,inputShape:c});return d?Object(o.a)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}})},"n+ZZ":function(e,t,n){"use strict";n.d(t,"a",function(){return l});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({maxPool_:function(e,t,n,u,l){const d=Object(s.a)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.b(4===h.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`),i.b(o.i(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),o.a("maxPool",u,l);const f=r.a.runKernel(a.Mb,{x:h},{filterSize:t,strides:n,pad:u,dimRoundingMode:l});return p?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},"n/2y":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({softplus_:function(e){const t=Object(s.a)(e,"x","softplus");return r.a.runKernel(a.Lc,{x:t})}})},njhW:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({elu_:function(e){const t=Object(s.a)(e,"x","elu","float32");return r.a.runKernel(a.Y,{x:t})}})},"o/e8":function(e,t,n){"use strict";n.d(t,"c",function(){return u}),n.d(t,"a",function(){return d}),n.d(t,"b",function(){return h});var r=n("auKK"),a=n("szMd"),s=n("NNfn"),i=n("atXS"),o=n("6366");function u(e,t){let n=e;if(Object(i.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(i.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(i.A)(e))return void Object(i.b)(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);Object(i.b)(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Object(i.b)(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let a=0;a<e.length;++a)c(e[a],r,n.concat(a))}function l(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,a="numeric"){if(e instanceof s.a)return l(a,e.dtype,t,n),e;let c=Object(i.r)(e);if("string"!==c&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),l(a,c,t,n),null==e||!Object(i.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==e?"null":e.constructor.name}'`);const d=u(e,c);Object(i.A)(e)||Array.isArray(e)||(e=[e]);const h="string"!==c?Object(o.toTypedArray)(e,c):Object(i.m)(e,[],!0);return r.a.makeTensor(h,d,c)}function h(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>d(e,`${t}[${a}]`,n,r))}},"o0+U":function(e,t,n){"use strict";n.r(t),n.d(t,"validateUpdateShape",function(){return a}),n.d(t,"validateInput",function(){return s}),n.d(t,"calculateShapes",function(){return i});var r=n("atXS");function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function i(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,i=n.length;let o=1;for(let r=s;r<i;++r)o*=n[r];const u=s<1?1:s;return{sliceRank:s,numUpdates:Object(r.O)(t.shape)/u,sliceSize:o,strides:[...Object(r.j)(n.slice(0,s)),1],outputSize:Object(r.O)(n)}}},o3Rt:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({acos_:function(e){const t=Object(s.a)(e,"x","acos");return r.a.runKernel(a.b,{x:t})}})},oAkI:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({sub_:function(e,t){let n=Object(i.a)(e,"a","sub"),o=Object(i.a)(t,"b","sub");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.bd,{a:n,b:o})}})},"oJu+":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({zerosLike_:function(e){const t=Object(s.a)(e,"x","zerosLike");return r.a.runKernel(a.nd,{x:t})}})},p4Cv:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("AoCb"),a=n("o/e8");const s=async function(e){const t=Object(a.a)(e,"condition","whereAsync","bool"),n=await t.data(),s=Object(r.a)(t.shape,n);return e!==t&&t.dispose(),s}},pCbQ:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t){const n=r.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}},pGgd:function(e,t,n){"use strict";n.d(t,"c",function(){return i}),n.d(t,"a",function(){return o}),n.d(t,"b",function(){return u});var r=n("+hG3"),a=n("zUqB"),s=n("iSpy");const i=Object(a.a)(e=>1/(1+Math.exp(-e))),o=Object(s.a)(r.Sigmoid,e=>1/(1+Math.exp(-e))),u={kernelName:r.Sigmoid,backendName:"cpu",kernelFunc:o}},"pJ3+":function(e,t,n){var r;!function(a,s){var i,o=this,u=256,c=s.pow(u,6),l=s.pow(2,52),d=2*l,h=255;function p(e,t,n){var r=[],h=g(b((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(r){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(a)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,g(y(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(s.random=e,t):e})(x,h,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function b(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(b(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=p,g(s.random(),a),e.exports){e.exports=p;try{i=n(3)}catch(x){}}else void 0===(r=(function(){return p}).call(t,n,t,e))||(e.exports=r)}([],Math)},pJ6O:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},parS:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({mul_:function(e,t){let n=Object(i.a)(e,"a","mul"),o=Object(i.a)(t,"b","mul");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.Yb,{a:n,b:o})}})},q5jb:function(e,t,n){"use strict";n.r(t);var r=n("hmGj");n.d(t,"simpleAbsImpl",function(){return r.b});var a=n("lzW/");n.d(t,"addImpl",function(){return a.c});var s=n("GqF2");n.d(t,"bincountImpl",function(){return s.a}),n.d(t,"bincountReduceImpl",function(){return s.b});var i=n("RoEo");n.d(t,"ceilImpl",function(){return i.b});var o=n("wAP4");n.d(t,"concatImpl",function(){return o.a});var u=n("QqYx");n.d(t,"equalImpl",function(){return u.c});var c=n("+wyz");n.d(t,"expImpl",function(){return c.c});var l=n("vWEu");n.d(t,"expm1Impl",function(){return l.b});var d=n("01bp");n.d(t,"floorImpl",function(){return d.b});var h=n("lwMf");n.d(t,"gatherNdImpl",function(){return h.a});var p=n("AoxF");n.d(t,"gatherV2Impl",function(){return p.a});var f=n("fn98");n.d(t,"greaterImpl",function(){return f.b});var m=n("qVni");n.d(t,"greaterEqualImpl",function(){return m.b});var b=n("shNq");n.d(t,"lessImpl",function(){return b.b});var g=n("Dhi/");n.d(t,"lessEqualImpl",function(){return g.b});var y=n("74aC");n.d(t,"linSpaceImpl",function(){return y.a});var x=n("aNuQ");n.d(t,"logImpl",function(){return x.b});var v=n("B7Gm");n.d(t,"maxImpl",function(){return v.a});var w=n("i+Li");n.d(t,"maximumImpl",function(){return w.b});var O=n("A7Us");n.d(t,"minimumImpl",function(){return O.b});var k=n("csRb");n.d(t,"multiplyImpl",function(){return k.c});var S=n("tuD/");n.d(t,"negImpl",function(){return S.b});var I=n("H68w");n.d(t,"notEqualImpl",function(){return I.b});var N=n("TJwl");n.d(t,"prodImpl",function(){return N.b});var T=n("Q9nt");n.d(t,"rangeImpl",function(){return T.a});var C=n("xOKT");n.d(t,"rsqrtImpl",function(){return C.b});var j=n("I6Cx");n.d(t,"scatterImpl",function(){return j.a});var E=n("pGgd");n.d(t,"sigmoidImpl",function(){return E.c});var A=n("I10X");n.d(t,"sliceImpl",function(){return A.c});var _=n("Gy5z");n.d(t,"sparseFillEmptyRowsImpl",function(){return _.a});var $=n("MaBh");n.d(t,"sparseReshapeImpl",function(){return $.a});var R=n("PwBI");n.d(t,"sparseSegmentReductionImpl",function(){return R.a});var F=n("N7VH");n.d(t,"sqrtImpl",function(){return F.b});var D=n("ThxY");n.d(t,"squaredDifferenceImpl",function(){return D.b});var M=n("4tfB");n.d(t,"stridedSliceImpl",function(){return M.a});var z=n("j2iD");n.d(t,"stringNGramsImpl",function(){return z.a});var L=n("uDer");n.d(t,"stringSplitImpl",function(){return L.a});var P=n("pCbQ");n.d(t,"stringToHashBucketFastImpl",function(){return P.a});var B=n("UvZ8");n.d(t,"subImpl",function(){return B.c});var V=n("AwLj");n.d(t,"tileImpl",function(){return V.a});var W=n("8R1p");n.d(t,"topKImpl",function(){return W.a});var U=n("EjVc");n.d(t,"transposeImpl",function(){return U.a});var G=n("iOm3");n.d(t,"uniqueImpl",function(){return G.a})},qVni:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>e>=t?1:0),o=Object(s.a)(r.GreaterEqual,i,null,"bool"),u={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:o}},r9q9:function(e,t,n){"use strict";n.d(t,"a",function(){return f});var r=n("o/e8"),a=n("atXS"),s=n("kRdc"),i=n("NuWS"),o=n("TyAZ"),u=n("E1lT"),c=n("wCH+"),l=n("VO80"),d=n("NclT"),h=n("oAkI"),p=n("4FMF");const f=Object(l.b)({logSumExp_:function(e,t=null,n=!1){const l=Object(r.a)(e,"x","logSumExp"),f=Object(a.I)(t,l.shape),m=Object(c.a)(l,f,!0),b=Object(h.a)(l,m),g=Object(o.a)(b),y=Object(p.a)(g,f),x=Object(u.a)(y),v=Object(s.a)(Object(d.a)(m,x.shape),x);if(n){const e=Object(i.e)(v.shape,f);return Object(d.a)(v,e)}return v}})},rm0a:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({min_:function(e,t=null,n=!1){const i=Object(s.a)(e,"x","min");return r.a.runKernel(a.Tb,{x:i},{axis:t,keepDims:n})}})},s57M:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({selu_:function(e){const t=Object(s.a)(e,"x","selu");return r.a.runKernel(a.Ec,{x:t})}})},shNq:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("fUNa"),s=n("vx0h");const i=Object(a.a)((e,t)=>e<t?1:0),o=Object(s.a)(r.Less,i,null,"bool"),u={kernelName:r.Less,backendName:"cpu",kernelFunc:o}},shz4:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({lessEqual_:function(e,t){let n=Object(i.a)(e,"a","lessEqual","string_or_numeric"),u=Object(i.a)(t,"b","lessEqual","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.Cb,{a:n,b:u})}})},spQH:function(e,t,n){"use strict";n.d(t,"b",function(){return a}),n.d(t,"a",function(){return s});var r=n("szMd");function a(...e){Object(r.c)().getBool("IS_TEST")||Object(r.c)().getBool("PROD")||console.warn(...e)}function s(...e){Object(r.c)().getBool("IS_TEST")||Object(r.c)().getBool("PROD")||console.log(...e)}},szMd:function(e,t,n){"use strict";n.d(t,"b",function(){return a}),n.d(t,"c",function(){return i}),n.d(t,"a",function(){return o}),n.d(t,"d",function(){return u});var r=n("atXS");class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}function s(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function i(){return o}let o=null;function u(e){o=e}},tQDl:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({reciprocal_:function(e){const t=Object(s.a)(e,"x","reciprocal");return r.a.runKernel(a.pc,{x:t})}})},th0q:function(e,t,n){"use strict";n.d(t,"a",function(){return m});var r=n("atXS"),a=n("B3db"),s=n("ZJ6U"),i=n("JLAb"),o=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("bTzI"),d=n("RbuM"),h=n("Wiw4"),p=n("oJu+"),f=n("Grcp");const m=Object(o.b)({rfft_:function(e,t){Object(r.b)("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,m=Object(l.a)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,m=Object(s.a)([e,Object(h.a)(r)],e.shape.length-1),n=t}else m=e;const b=Object(p.a)(m),g=Object(c.a)(Object(a.a)(m,b),[o,n]),y=Object(f.a)(g),x=Math.floor(n/2)+1,v=Object(u.a)(y),w=Object(i.a)(y),O=Object(d.a)(v,[x,n-x],v.shape.length-1),k=Object(d.a)(w,[x,n-x],w.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=x,Object(c.a)(Object(a.a)(O[0],k[0]),S)}})},"tuD/":function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return o});var r=n("+hG3"),a=n("zt1N"),s=n("csRb");function i(e,t,n){const a=r.util.createScalarValue(-1,n);return Object(s.c)([],t,a,e,n)}const o={kernelName:r.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Object(a.a)(r,"neg");const s=n.data.get(r.dataId).values,[o,u]=i(s,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}}},uBja:function(e,t,n){"use strict";n.d(t,"e",function(){return a}),n.d(t,"f",function(){return s}),n.d(t,"g",function(){return i}),n.d(t,"b",function(){return o}),n.d(t,"c",function(){return u}),n.d(t,"d",function(){return c}),n.d(t,"j",function(){return f}),n.d(t,"i",function(){return m}),n.d(t,"h",function(){return b}),n.d(t,"a",function(){return g});var r=n("atXS");function a(e,t,n,r,a="NHWC",s){return o(e,[...t,e[3]],n,s,r,null,null,b(a))}function s(e,t,n,r,a,s,i="channelsLast"){const[u,c]=l(t);let d;if("channelsLast"===i)d=[u,c,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);d=[u,c,e[1],e[1]]}return o(e,d,n,r,a,s,!1,i)}function i(e,t,n,r,a,s,i="NDHWC"){const[o,c,l]=d(t);let h,p;if("NDHWC"===i)p="channelsLast",h=[o,c,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",h=[o,c,l,e[1],e[1]]}return u(e,h,n,r,a,!1,p,s)}function o(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[u,d,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,m,d,f]=e}const[b,g,,y]=t,[x,v]=l(n),[w,O]=l(r),k=h(b,w),S=h(g,O),{padInfo:I,outHeight:N,outWidth:T}=function(e,t,n,r,a,s,i,o,u){let l,d,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=c(e,t,n));const s=e[1];return[p((e[0]-t+2*r)/n+1,a),p((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),c=e-u,p=Math.floor(o/2);l={top:u,bottom:c,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const c="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],b="channelsLast"===u?e[2][1]:e[3][1];l={top:c,bottom:f,left:m,right:b,type:0===c&&0===f&&0===m&&0===b?"VALID":"EXPLICIT"},d=p((t-s+c+f)/r+1,o),h=p((n-i+m+b)/a+1,o)}}return{padInfo:l,outHeight:d,outWidth:h}}(a,d,f,x,v,k,S,s,o),C=i?y*m:y;let j;return"channelsFirst"===o?j=[u,C,N,T]:"channelsLast"===o&&(j=[u,N,T,C]),{batchSize:u,dataFormat:o,inHeight:d,inWidth:f,inChannels:m,outHeight:N,outWidth:T,outChannels:C,padInfo:I,strideHeight:x,strideWidth:v,filterHeight:b,filterWidth:g,effectiveFilterHeight:k,effectiveFilterWidth:S,dilationHeight:w,dilationWidth:O,inShape:e,outShape:j,filterShape:t}}function u(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,f,m,b]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,f,m,b]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,b,l,f,m]=e}const[g,y,x,,v]=t,[w,O,k]=d(n),[S,I,N]=d(r),T=h(g,S),C=h(y,I),j=h(x,N),{padInfo:E,outDepth:A,outHeight:_,outWidth:$}=function(e,t,n,r,a,s,i,o,u,l,d){let h,f,m,b;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=c(e,t,r));const i=e[1],o=e[2];return[p((e[0]-t+2*a)/r+1,s),p((i-t+2*a)/r+1,s),p((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,d);f=s[0],m=s[1],b=s[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/s),b=Math.ceil(r/i);const e=(f-1)*a+o-t,c=(m-1)*s+u-n,d=(b-1)*i+l-r,p=Math.floor(e/2),g=e-p,y=Math.floor(c/2),x=c-y,v=Math.floor(d/2);h={top:y,bottom:x,left:v,right:d-v,front:p,back:g,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/a),m=Math.ceil((n-u+1)/s),b=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:f,outHeight:m,outWidth:b}}(a,l,f,m,w,O,k,T,C,j,o),R=s?v*b:v;let F;return"channelsFirst"===i?F=[u,R,A,_,$]:"channelsLast"===i&&(F=[u,A,_,$,R]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:f,inWidth:m,inChannels:b,outDepth:A,outHeight:_,outWidth:$,outChannels:R,padInfo:E,strideDepth:w,strideHeight:O,strideWidth:k,filterDepth:g,filterHeight:y,filterWidth:x,effectiveFilterDepth:T,effectiveFilterHeight:C,effectiveFilterWidth:j,dilationDepth:S,dilationHeight:I,dilationWidth:N,inShape:e,outShape:F,filterShape:t}}function c(e,t,n,r=1){const a=h(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function l(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"==typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=l(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function b(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function g(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.b(r.v(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach(t=>{t.forEach(t=>{r.b(r.v(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})})}}}},uDer:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var r=n("+hG3");function a(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function s(e,t,n){const s=e.length,i=[];let o=0,u=0;const c=new Array(s);for(let r=0;r<s;++r){const s=i.length;a(e[r],t,n,i);const l=i.length-s;c[r]=l,o+=l,u=Math.max(u,l)}const l=r.util.getArrayFromDType("int32",2*o),d=new Array(o),h=[s,u];let p=0;for(let r=0;r<s;++r)for(let e=0;e<c[r];++e)l[2*p]=r,l[2*p+1]=e,d[p]=i[p],++p;return[l,d,h]}},uDiL:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},uLFl:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.cropTensor=t.capture=void 0;var r=n("zhpf");function a(e,t,n){var a=Math.min(e.shape[0],e.shape[1]),s=e.shape[0]/2-a/2,i=e.shape[1]/2-a/2;if(t&&!n){var o=e.slice([s,i,0],[a,a,3]);return o=o.reshape([a*a,1,3]),o=(o=r.mul(o,[.2989,.587,.114])).reshape([a,a,3]),o=r.sum(o,-1),r.expandDims(o,-1)}return e.slice([s,i,0],[a,a,3])}t.capture=function(e,t){return r.tidy(function(){return a(r.browser.fromPixels(e),t).expandDims(0).toFloat().div(r.scalar(127)).sub(r.scalar(1))})},t.cropTensor=a},ubnP:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({equal_:function(e,t){let n=Object(i.a)(e,"a","equal","string_or_numeric"),u=Object(i.a)(t,"b","equal","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.ab,{a:n,b:u})}})},ukBL:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({gatherND_:function(e,t){const n=Object(s.a)(t,"indices","gatherND","int32"),i=Object(s.a)(e,"x","gatherND","string_or_numeric");return r.a.runKernel(a.ob,{params:i,indices:n})}})},ulO0:function(e,t,n){"use strict";n.d(t,"a",function(){return d});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("3rNm"),c=n("VO80"),l=n("NclT");const d=Object(c.b)({avgPool3d_:function(e,t,n,c,d,h="NDHWC"){const p=Object(s.a)(e,"x","avgPool3d","float32");let f=p,m=!1;4===p.rank&&(m=!0,f=Object(l.a)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.b(5===f.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${f.rank}.`),i.b("NDHWC"===h,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${h}`),Object(o.a)("avgPool3d",c,d);let b=r.a.runKernel(a.p,{x:f},{filterSize:t,strides:n,pad:c,dimRoundingMode:d,dataFormat:h});return b=Object(u.a)(b,f.dtype),m?Object(l.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},usyV:function(e,t,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,t,n){var a=n.value;if("function"!=typeof a)throw new TypeError("@boundMethod decorator can only be applied to methods not: ".concat(r(a)));var s=!1;return{configurable:!0,get:function(){if(s||this===e.prototype||this.hasOwnProperty(t)||"function"!=typeof a)return a;var n=a.bind(this);return s=!0,Object.defineProperty(this,t,{configurable:!0,get:function(){return n},set:function(e){a=e,delete this[t]}}),s=!1,n},set:function(e){a=e}}}function s(e){var t;return"undefined"!=typeof Reflect&&"function"==typeof Reflect.ownKeys?t=Reflect.ownKeys(e.prototype):(t=Object.getOwnPropertyNames(e.prototype),"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(e.prototype)))),t.forEach(function(t){if("constructor"!==t){var n=Object.getOwnPropertyDescriptor(e.prototype,t);"function"==typeof n.value&&Object.defineProperty(e.prototype,t,a(e,t,n))}}),e}function i(){return 1===arguments.length?s.apply(void 0,arguments):a.apply(void 0,arguments)}n.r(t),n.d(t,"boundMethod",function(){return a}),n.d(t,"boundClass",function(){return s}),n.d(t,"default",function(){return i})},uy0A:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({greaterEqual_:function(e,t){let n=Object(i.a)(e,"a","greaterEqual","string_or_numeric"),u=Object(i.a)(t,"b","greaterEqual","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.rb,{a:n,b:u})}})},vGLV:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sparseToDense_:function(e,t,n,i=0){const o=Object(s.a)(e,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(t,"sparseValues","sparseToDense","string_or_numeric"),c=Object(s.a)(i,"defaultValue","sparseToDense",u.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);if(0!==t.rank&&(1!==t.rank||t.size!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,c),r.a.runKernel(a.Rc,{sparseIndices:o,sparseValues:u,defaultValue:c},{outputShape:n})}})},vWEu:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("zUqB"),s=n("iSpy");const i=Object(a.a)(e=>Math.expm1(e)),o=Object(s.b)(r.Expm1,i),u={kernelName:r.Expm1,backendName:"cpu",kernelFunc:o}},vx0h:function(e,t,n){"use strict";n.d(t,"a",function(){return o}),n.d(t,"b",function(){return u});var r=n("+hG3"),a=n("zt1N"),s=n("+gpH"),i=n("kne7");function o(e,t,n,o){return null==n?({inputs:n,backend:s})=>{const{a:i,b:u}=n,c=s;Object(a.a)([i,u],e);const l=c.data.get(i.dataId).values,d=c.data.get(u.dataId).values,h="string"===i.dtype?r.backend_util.fromUint8ToStringArray(l):l,p="string"===i.dtype?r.backend_util.fromUint8ToStringArray(d):d,f=o||i.dtype,[m,b]=t(i.shape,u.shape,h,p,f);return c.makeTensorInfo(b,f,m)}:({inputs:e,backend:r})=>{const{a:a,b:u}=e,c=r;if("complex64"===a.dtype||"complex64"===u.dtype){const e=Object(s.a)({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.imag,o=c.data.get(t.complexTensorInfos.real.dataId).values,l=c.data.get(r.dataId).values,d=Object(s.a)({inputs:{x:u},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(d.dataId),p=h.complexTensorInfos.imag,f=c.data.get(h.complexTensorInfos.real.dataId).values,m=c.data.get(p.dataId).values,[b,g,y]=n(a.shape,u.shape,o,l,f,m),x=c.makeTensorInfo(y,"float32",b),v=c.makeTensorInfo(y,"float32",g),w=Object(i.a)({inputs:{real:x,imag:v},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(d),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(v),w}{const e=c.data.get(a.dataId).values,n=c.data.get(u.dataId).values,r=o||a.dtype,[s,i]=t(a.shape,u.shape,e,n,r);return c.makeTensorInfo(i,r,s)}}}function u(e){return(t,n,a,s,i,o)=>{const u=r.backend_util.assertAndGetBroadcastShape(t,n),c=r.util.sizeFromShape(u),l=u.length,d=r.util.computeStrides(u),h=r.util.getTypedArrayFromDType("float32",c),p=r.util.getTypedArrayFromDType("float32",c),f=r.backend_util.getBroadcastDims(t,u),m=r.backend_util.getBroadcastDims(n,u),b=r.backend_util.mergeRealAndImagArrays(a,s),g=r.backend_util.mergeRealAndImagArrays(i,o),y=t.length,x=r.util.computeStrides(t),v=n.length,w=r.util.computeStrides(n);if(f.length+m.length===0)for(let r=0;r<h.length;r++){const t=r%b.length,n=r%g.length,a=e(b[2*t],b[2*t+1],g[2*n],g[2*n+1]);h[r]=a.real,p[r]=a.imag}else for(let O=0;O<h.length;O++){const t=r.util.indexToLoc(O,l,d),n=t.slice(-y);f.forEach(e=>n[e]=0);const a=r.util.locToIndex(n,y,x),s=t.slice(-v);m.forEach(e=>s[e]=0);const i=r.util.locToIndex(s,v,w),o=e(b[2*a],b[2*a+1],g[2*i],g[2*i+1]);h[O]=o.real,p[O]=o.imag}return[h,p,u]}}},wAP4:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t,n,a){const s=r.util.getArrayFromDType(n,r.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach(e=>{const n=r.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n})}else{let a=0;e.forEach(e=>{const i="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[r+t]=i[o++]}a+=e.shape[1]})}return s}},"wCH+":function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({max_:function(e,t=null,n=!1){const i=Object(s.a)(e,"x","max");return r.a.runKernel(a.Lb,{x:i},{reductionIndices:t,keepDims:n})}})},wE5H:function(e,t,n){"use strict";n.d(t,"g",function(){return o}),n.d(t,"f",function(){return u}),n.d(t,"c",function(){return c}),n.d(t,"b",function(){return l}),n.d(t,"e",function(){return d}),n.d(t,"h",function(){return h}),n.d(t,"m",function(){return p}),n.d(t,"n",function(){return f}),n.d(t,"t",function(){return m}),n.d(t,"d",function(){return b}),n.d(t,"l",function(){return g}),n.d(t,"u",function(){return y}),n.d(t,"r",function(){return x}),n.d(t,"o",function(){return v}),n.d(t,"k",function(){return w}),n.d(t,"q",function(){return O}),n.d(t,"i",function(){return k}),n.d(t,"j",function(){return S}),n.d(t,"p",function(){return I}),n.d(t,"a",function(){return N}),n.d(t,"s",function(){return T});var r=n("auKK"),a=n("szMd"),s=n("NNfn"),i=n("dsKV");function o(){Object(a.c)().set("PROD",!0)}function u(){Object(a.c)().set("DEBUG",!0)}function c(){Object(a.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(e){Object(a.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.a.disposeVariables()}function h(){return r.a}function p(){return r.a.memory()}function f(e){return r.a.profile(e)}function m(e,t){return r.a.tidy(e,t)}function b(e){Object(i.getTensorsInContainer)(e).forEach(e=>e.dispose())}function g(e){return r.a.keep(e)}function y(e){return r.a.time(e)}function x(e){return r.a.setBackend(e)}function v(){return r.a.ready()}function w(){return r.a.backendName}function O(e){r.a.removeBackend(e)}function k(e){return r.a.findBackend(e)}function S(e){return r.a.findBackendFactory(e)}function I(e,t,n=1){return r.a.registerBackend(e,t,n)}function N(){return r.a.backend}function T(e,t){Object(a.c)().setPlatform(e,t)}Object(s.e)(l)},wFtI:function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return a}),n.d(t,"c",function(){return s}),n.d(t,"d",function(){return i}),n.d(t,"e",function(){return o}),n.d(t,"f",function(){return u}),n.d(t,"g",function(){return c}),n.d(t,"h",function(){return l}),n.d(t,"i",function(){return d}),n.d(t,"j",function(){return h}),n.d(t,"k",function(){return p}),n.d(t,"l",function(){return f}),n.d(t,"n",function(){return m}),n.d(t,"m",function(){return b}),n.d(t,"o",function(){return g}),n.d(t,"r",function(){return y}),n.d(t,"p",function(){return x}),n.d(t,"q",function(){return v}),n.d(t,"s",function(){return w}),n.d(t,"t",function(){return O}),n.d(t,"u",function(){return k}),n.d(t,"w",function(){return S}),n.d(t,"v",function(){return I}),n.d(t,"x",function(){return N}),n.d(t,"y",function(){return T}),n.d(t,"z",function(){return C}),n.d(t,"A",function(){return j}),n.d(t,"B",function(){return E}),n.d(t,"C",function(){return A}),n.d(t,"D",function(){return _}),n.d(t,"E",function(){return $}),n.d(t,"F",function(){return R}),n.d(t,"G",function(){return F}),n.d(t,"H",function(){return D}),n.d(t,"I",function(){return M}),n.d(t,"J",function(){return z}),n.d(t,"K",function(){return L}),n.d(t,"M",function(){return P}),n.d(t,"N",function(){return B}),n.d(t,"L",function(){return V}),n.d(t,"O",function(){return W}),n.d(t,"P",function(){return U}),n.d(t,"Q",function(){return G}),n.d(t,"R",function(){return H}),n.d(t,"S",function(){return K}),n.d(t,"T",function(){return q}),n.d(t,"U",function(){return X}),n.d(t,"W",function(){return Z}),n.d(t,"V",function(){return Y}),n.d(t,"oc",function(){return J}),n.d(t,"X",function(){return Q}),n.d(t,"Y",function(){return ee}),n.d(t,"Z",function(){return te}),n.d(t,"bb",function(){return ne}),n.d(t,"ab",function(){return re}),n.d(t,"cb",function(){return ae}),n.d(t,"db",function(){return se}),n.d(t,"eb",function(){return ie}),n.d(t,"fb",function(){return oe}),n.d(t,"gb",function(){return ue}),n.d(t,"hb",function(){return ce}),n.d(t,"ib",function(){return le}),n.d(t,"jb",function(){return de}),n.d(t,"lb",function(){return he}),n.d(t,"pb",function(){return pe}),n.d(t,"ob",function(){return fe}),n.d(t,"qb",function(){return me}),n.d(t,"rb",function(){return be}),n.d(t,"tb",function(){return ge}),n.d(t,"sb",function(){return ye}),n.d(t,"ub",function(){return xe}),n.d(t,"vb",function(){return ve}),n.d(t,"wb",function(){return we}),n.d(t,"xb",function(){return Oe}),n.d(t,"Ab",function(){return ke}),n.d(t,"Bb",function(){return Se}),n.d(t,"Cb",function(){return Ie}),n.d(t,"Db",function(){return Ne}),n.d(t,"Eb",function(){return Te}),n.d(t,"Fb",function(){return Ce}),n.d(t,"Hb",function(){return je}),n.d(t,"Ib",function(){return Ee}),n.d(t,"Jb",function(){return Ae}),n.d(t,"Gb",function(){return _e}),n.d(t,"Kb",function(){return $e}),n.d(t,"yb",function(){return Re}),n.d(t,"zb",function(){return Fe}),n.d(t,"Lb",function(){return De}),n.d(t,"Rb",function(){return Me}),n.d(t,"Mb",function(){return ze}),n.d(t,"Pb",function(){return Le}),n.d(t,"Nb",function(){return Pe}),n.d(t,"Ob",function(){return Be}),n.d(t,"Qb",function(){return Ve}),n.d(t,"Sb",function(){return We}),n.d(t,"Tb",function(){return Ue}),n.d(t,"Ub",function(){return Ge}),n.d(t,"Vb",function(){return He}),n.d(t,"Wb",function(){return Ke}),n.d(t,"Xb",function(){return qe}),n.d(t,"Yb",function(){return Xe}),n.d(t,"Zb",function(){return Ze}),n.d(t,"dc",function(){return Ye}),n.d(t,"ac",function(){return Je}),n.d(t,"bc",function(){return Qe}),n.d(t,"cc",function(){return et}),n.d(t,"fc",function(){return tt}),n.d(t,"ec",function(){return nt}),n.d(t,"gc",function(){return rt}),n.d(t,"hc",function(){return at}),n.d(t,"ic",function(){return st}),n.d(t,"jc",function(){return it}),n.d(t,"kc",function(){return ot}),n.d(t,"lc",function(){return ut}),n.d(t,"mc",function(){return ct}),n.d(t,"nc",function(){return lt}),n.d(t,"pc",function(){return dt}),n.d(t,"qc",function(){return ht}),n.d(t,"sc",function(){return pt}),n.d(t,"vc",function(){return ft}),n.d(t,"wc",function(){return mt}),n.d(t,"tc",function(){return bt}),n.d(t,"uc",function(){return gt}),n.d(t,"rc",function(){return yt}),n.d(t,"xc",function(){return xt}),n.d(t,"zc",function(){return vt}),n.d(t,"Ac",function(){return wt}),n.d(t,"Bc",function(){return Ot}),n.d(t,"Cc",function(){return kt}),n.d(t,"Dc",function(){return St}),n.d(t,"Ec",function(){return It}),n.d(t,"Jc",function(){return Nt}),n.d(t,"Hc",function(){return Tt}),n.d(t,"Ic",function(){return Ct}),n.d(t,"Gc",function(){return jt}),n.d(t,"Fc",function(){return Et}),n.d(t,"Lc",function(){return At}),n.d(t,"Tc",function(){return _t}),n.d(t,"cd",function(){return $t}),n.d(t,"Mc",function(){return Rt}),n.d(t,"Sc",function(){return Ft}),n.d(t,"Kc",function(){return Dt}),n.d(t,"Nc",function(){return Mt}),n.d(t,"Oc",function(){return zt}),n.d(t,"Pc",function(){return Lt}),n.d(t,"Qc",function(){return Pt}),n.d(t,"Rc",function(){return Bt}),n.d(t,"Vc",function(){return Vt}),n.d(t,"Uc",function(){return Wt}),n.d(t,"Xc",function(){return Ut}),n.d(t,"Yc",function(){return Gt}),n.d(t,"Zc",function(){return Ht}),n.d(t,"ad",function(){return Kt}),n.d(t,"bd",function(){return qt}),n.d(t,"dd",function(){return Xt}),n.d(t,"ed",function(){return Zt}),n.d(t,"fd",function(){return Yt}),n.d(t,"gd",function(){return Jt}),n.d(t,"hd",function(){return Qt}),n.d(t,"id",function(){return en}),n.d(t,"jd",function(){return tn}),n.d(t,"kd",function(){return nn}),n.d(t,"ld",function(){return rn}),n.d(t,"md",function(){return an}),n.d(t,"nd",function(){return sn}),n.d(t,"Wc",function(){return on}),n.d(t,"kb",function(){return un}),n.d(t,"yc",function(){return cn}),n.d(t,"od",function(){return ln}),n.d(t,"mb",function(){return dn}),n.d(t,"nb",function(){return hn});const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",O="BatchToSpaceND",k="Bincount",S="BroadcastTo",I="BroadcastArgs",N="Cast",T="Ceil",C="ClipByValue",j="Complex",E="ComplexAbs",A="Concat",_="Conv2D",$="Conv2DBackpropFilter",R="Conv2DBackpropInput",F="Conv3D",D="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",z="Cos",L="Cosh",P="Cumprod",B="Cumsum",V="CropAndResize",W="DenseBincount",U="DepthToSpace",G="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",q="Diag",X="Dilation2D",Z="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",J="RealDiv",Q="Einsum",ee="Elu",te="EluGrad",ne="Erf",re="Equal",ae="Exp",se="ExpandDims",ie="Expm1",oe="FFT",ue="Fill",ce="FlipLeftRight",le="Floor",de="FloorDiv",he="FusedBatchNorm",pe="GatherV2",fe="GatherNd",me="Greater",be="GreaterEqual",ge="Identity",ye="IFFT",xe="Imag",ve="IsFinite",we="IsInf",Oe="IsNan",ke="LeakyRelu",Se="Less",Ie="LessEqual",Ne="LinSpace",Te="Log",Ce="Log1p",je="LogicalAnd",Ee="LogicalNot",Ae="LogicalOr",_e="LogSoftmax",$e="LowerBound",Re="LRN",Fe="LRNGrad",De="Max",Me="Maximum",ze="MaxPool",Le="MaxPoolGrad",Pe="MaxPool3D",Be="MaxPool3DGrad",Ve="MaxPoolWithArgmax",We="Mean",Ue="Min",Ge="Minimum",He="MirrorPad",Ke="Mod",qe="Multinomial",Xe="Multiply",Ze="Neg",Ye="NotEqual",Je="NonMaxSuppressionV3",Qe="NonMaxSuppressionV4",et="NonMaxSuppressionV5",tt="OnesLike",nt="OneHot",rt="Pack",at="PadV2",st="Pool",it="Pow",ot="Prelu",ut="Prod",ct="Range",lt="Real",dt="Reciprocal",ht="Relu",pt="Reshape",ft="ResizeNearestNeighbor",mt="ResizeNearestNeighborGrad",bt="ResizeBilinear",gt="ResizeBilinearGrad",yt="Relu6",xt="Reverse",vt="Round",wt="Rsqrt",Ot="ScatterNd",kt="SearchSorted",St="Select",It="Selu",Nt="Slice",Tt="Sin",Ct="Sinh",jt="Sign",Et="Sigmoid",At="Softplus",_t="Sqrt",$t="Sum",Rt="SpaceToBatchND",Ft="SplitV",Dt="Softmax",Mt="SparseFillEmptyRows",zt="SparseReshape",Lt="SparseSegmentMean",Pt="SparseSegmentSum",Bt="SparseToDense",Vt="SquaredDifference",Wt="Square",Ut="StridedSlice",Gt="StringNGrams",Ht="StringSplit",Kt="StringToHashBucketFast",qt="Sub",Xt="Tan",Zt="Tanh",Yt="Tile",Jt="TopK",Qt="Transform",en="Transpose",tn="Unique",nn="Unpack",rn="UnsortedSegmentSum",an="UpperBound",sn="ZerosLike",on="Step",un="FromPixels",cn="RotateWithOffset",ln="_FusedMatMul",dn="FusedConv2D",hn="FusedDepthwiseConv2D"},"wI/y":function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({clipByValue_:function(e,t,n){const o=Object(s.a)(e,"x","clipByValue");return i.b(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),r.a.runKernel(a.z,{x:o},{clipValueMin:t,clipValueMax:n})}})},wXC5:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({dilation2d_:function(e,t,n,o,c=[1,1],l="NHWC"){const d=Object(s.a)(e,"x","dilation2d"),h=Object(s.a)(t,"filter","dilation2d");i.b(3===d.rank||4===d.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`),i.b(3===h.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${h.rank}.`),i.b("NHWC"===l,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${l}`);let p=d,f=!1;3===d.rank&&(p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m=r.a.runKernel(a.U,{x:p,filter:h},{strides:n,pad:o,dilations:c});return f?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},waK1:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cosh_:function(e){const t=Object(s.a)(e,"x","cosh","float32");return r.a.runKernel(a.K,{x:t})}})},wion:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var r=n("auKK"),a=n("atXS"),s=n("B3db"),i=n("Wiw4");function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=Object(i.a)(e,"float32");return Object(s.a)(t,n)}const n=Object(a.D)(Object(a.O)(e),t);return r.a.makeTensor(n,e,t)}},wxQM:function(e,t,n){"use strict";n.d(t,"a",function(){return l});var r=n("U45G"),a=n("o/e8"),s=n("parS"),i=n("O7f5"),o=n("VO80"),u=n("/7N0"),c=n("n/2y");const l=Object(o.b)({logSigmoid_:function(e){const t=Object(a.a)(e,"x","logSigmoid");return Object(r.a)(e=>({value:Object(i.a)(Object(c.a)(Object(i.a)(e))),gradFunc:t=>Object(s.a)(t,Object(u.a)(Object(i.a)(e)))}))(t)}})},x0IE:function(e,t,n){"use strict";n.d(t,"a",function(){return d}),n.d(t,"b",function(){return p}),n("Kajj");var r=n("szMd"),a=n("NQ+5"),s=n("kx/G");const i="tensorflowjs",o="models_store",u="model_info_store";function c(){if(!Object(r.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function l(e){const t=e.result;t.createObjectStore(o,{keyPath:"modelPath"}),t.createObjectStore(u,{keyPath:"modelPath"})}class d{constructor(e){if(this.indexedDB=c(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(i,1);r.onupgradeneeded=()=>l(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(o,"readonly"),r=t.objectStore(o).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Object(a.h)(t),i=s.transaction(u,"readwrite");let c=i.objectStore(u);const l=c.put({modelPath:this.modelPath,modelArtifactsInfo:r});let d;l.onsuccess=()=>{d=s.transaction(o,"readwrite");const a=d.objectStore(o).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});a.onsuccess=()=>e({modelArtifactsInfo:r}),a.onerror=e=>{c=i.objectStore(u);const t=c.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(a.error)),t.onerror=e=>(s.close(),n(a.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==d?s.close():d.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}d.URL_SCHEME="indexeddb://";const h=e=>{return Object(r.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(d.URL_SCHEME)?(t=e.slice(d.URL_SCHEME.length),new d(t)):null;var t};s.a.registerSaveRouter(h),s.a.registerLoadRouter(h);class p{constructor(){this.indexedDB=c()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(i,1);n.onupgradeneeded=()=>l(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(u,"readonly"),s=a.objectStore(u).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(d.URL_SCHEME)?t.slice(d.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(i,1);r.onupgradeneeded=()=>l(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(u,"readwrite"),i=s.objectStore(u),c=i.get(e);let l;c.onsuccess=()=>{if(null==c.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{l=a.transaction(o,"readwrite");const r=l.objectStore(o).delete(e);r.onsuccess=()=>t(c.result.modelArtifactsInfo),r.onerror=e=>n(c.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(c.error))}},c.onerror=e=>(a.close(),n(c.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}},x3y4:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("UI8N"),u=n("VO80");const c=Object(u.b)({div_:function(e,t){let n=Object(i.a)(e,"a","div"),u=Object(i.a)(t,"b","div");return[n,u]=Object(s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype?Object(o.a)(n,u):r.a.runKernel(a.oc,{a:n,b:u},{})}})},xOKT:function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n("+hG3"),a=n("zUqB"),s=n("iSpy");const i=Object(a.a)(e=>1/Math.sqrt(e)),o=Object(s.b)(r.Rsqrt,i),u={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:o}},yRKQ:function(e,t,n){"use strict";n.d(t,"a",function(){return p});var r=n("auKK"),a=n("wE5H"),s=n("wFtI"),i=n("o/e8"),o=n("atXS"),u=n("B3db"),c=n("JLAb"),l=n("O7f5"),d=n("VO80"),h=n("17CO");const p=Object(d.b)({transpose_:function(e,t,n){const d=Object(i.a)(e,"x","transpose");if(null==t&&(t=d.shape.map((e,t)=>t).reverse()),o.b(d.rank===t.length,()=>`Error in transpose: rank of input ${d.rank} must match length of perm ${t}.`),t.forEach(e=>{o.b(e>=0&&e<d.rank,()=>"All entries in 'perm' must be between 0 and "+(d.rank-1)+` but got ${t}`)}),d.rank<=1)return d.clone();const p={x:d},f={perm:t};return"complex64"===d.dtype?Object(a.t)(()=>{let e=Object(h.a)(d),t=Object(c.a)(d);return e=r.a.runKernel(s.id,{x:e},f),t=r.a.runKernel(s.id,{x:t},f),n&&(t=Object(l.a)(t)),Object(u.a)(e,t)}):r.a.runKernel(s.id,p,f)}})},yfHJ:function(e,t,n){"use strict";n.d(t,"a",function(){return u});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({pow_:function(e,t){let n=Object(i.a)(e,"base","pow"),o=Object(i.a)(t,"exp","pow");return[n,o]=Object(s.makeTypesMatch)(n,o),r.a.runKernel(a.jc,{a:n,b:o})}})},yuCN:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],r[a]=n^=(e^=e<<13)^e<<9,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},"zR+/":function(e,t,n){"use strict";n.d(t,"a",function(){return i});var r=n("o/e8"),a=n("c9N1"),s=n("VO80");const i=Object(s.b)({conv2dTranspose_:function(e,t,n,s,i,o){const u=Object(r.a)(e,"x","conv2dTranspose"),c=Object(r.a)(t,"filter","conv2dTranspose");return Object(a.a)(n,u,c,s,i,"NHWC",o)}})},zUnb:function(e,t,n){"use strict";function r(e){return"function"==typeof e}n.r(t);let a=!1;const s={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){if(e){const e=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+e.stack)}else a&&console.log("RxJS: Back to a better error behavior. Thank you. <3");a=e},get useDeprecatedSynchronousErrorHandling(){return a}};function i(e){setTimeout(()=>{throw e},0)}const o={closed:!0,next(e){},error(e){if(s.useDeprecatedSynchronousErrorHandling)throw e;i(e)},complete(){}},u=(()=>Array.isArray||(e=>e&&"number"==typeof e.length))();function c(e){return null!==e&&"object"==typeof e}const l=(()=>{function e(e){return Error.call(this),this.message=e?`${e.length} errors occurred during unsubscription:\n${e.map((e,t)=>`${t+1}) ${e.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=e,this}return e.prototype=Object.create(Error.prototype),e})();let d=(()=>{class e{constructor(e){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,e&&(this._ctorUnsubscribe=!0,this._unsubscribe=e)}unsubscribe(){let t;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:a,_unsubscribe:s,_subscriptions:i}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof e)n.remove(this);else if(null!==n)for(let e=0;e<n.length;++e)n[e].remove(this);if(r(s)){a&&(this._unsubscribe=void 0);try{s.call(this)}catch(o){t=o instanceof l?h(o.errors):[o]}}if(u(i)){let e=-1,n=i.length;for(;++e<n;){const n=i[e];if(c(n))try{n.unsubscribe()}catch(o){t=t||[],o instanceof l?t=t.concat(h(o.errors)):t.push(o)}}}if(t)throw new l(t)}add(t){let n=t;if(!t)return e.EMPTY;switch(typeof t){case"function":n=new e(t);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof e)){const t=n;n=new e,n._subscriptions=[t]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof e){if(r===this)return n;n._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return n;r.push(this)}const a=this._subscriptions;return null===a?this._subscriptions=[n]:a.push(n),n}remove(e){const t=this._subscriptions;if(t){const n=t.indexOf(e);-1!==n&&t.splice(n,1)}}}return e.EMPTY=function(e){return e.closed=!0,e}(new e),e})();function h(e){return e.reduce((e,t)=>e.concat(t instanceof l?t.errors:t),[])}const p=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class f extends d{constructor(e,t,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=o;break;case 1:if(!e){this.destination=o;break}if("object"==typeof e){e instanceof f?(this.syncErrorThrowable=e.syncErrorThrowable,this.destination=e,e.add(this)):(this.syncErrorThrowable=!0,this.destination=new m(this,e));break}default:this.syncErrorThrowable=!0,this.destination=new m(this,e,t,n)}}[p](){return this}static create(e,t,n){const r=new f(e,t,n);return r.syncErrorThrowable=!1,r}next(e){this.isStopped||this._next(e)}error(e){this.isStopped||(this.isStopped=!0,this._error(e))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(e){this.destination.next(e)}_error(e){this.destination.error(e),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:e}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=e,this}}class m extends f{constructor(e,t,n,a){let s;super(),this._parentSubscriber=e;let i=this;r(t)?s=t:t&&(s=t.next,n=t.error,a=t.complete,t!==o&&(i=Object.create(t),r(i.unsubscribe)&&this.add(i.unsubscribe.bind(i)),i.unsubscribe=this.unsubscribe.bind(this))),this._context=i,this._next=s,this._error=n,this._complete=a}next(e){if(!this.isStopped&&this._next){const{_parentSubscriber:t}=this;s.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}}error(e){if(!this.isStopped){const{_parentSubscriber:t}=this,{useDeprecatedSynchronousErrorHandling:n}=s;if(this._error)n&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)n?(t.syncErrorValue=e,t.syncErrorThrown=!0):i(e),this.unsubscribe();else{if(this.unsubscribe(),n)throw e;i(e)}}}complete(){if(!this.isStopped){const{_parentSubscriber:e}=this;if(this._complete){const t=()=>this._complete.call(this._context);s.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?(this.__tryOrSetError(e,t),this.unsubscribe()):(this.__tryOrUnsub(t),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(e,t){try{e.call(this._context,t)}catch(n){if(this.unsubscribe(),s.useDeprecatedSynchronousErrorHandling)throw n;i(n)}}__tryOrSetError(e,t,n){if(!s.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{t.call(this._context,n)}catch(r){return s.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=r,e.syncErrorThrown=!0,!0):(i(r),!0)}return!1}_unsubscribe(){const{_parentSubscriber:e}=this;this._context=null,this._parentSubscriber=null,e.unsubscribe()}}const b=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function g(e){return e}let y=(()=>{class e{constructor(e){this._isScalar=!1,e&&(this._subscribe=e)}lift(t){const n=new e;return n.source=this,n.operator=t,n}subscribe(e,t,n){const{operator:r}=this,a=function(e,t,n){if(e){if(e instanceof f)return e;if(e[p])return e[p]()}return e||t||n?new f(e,t,n):new f(o)}(e,t,n);if(a.add(r?r.call(a,this.source):this.source||s.useDeprecatedSynchronousErrorHandling&&!a.syncErrorThrowable?this._subscribe(a):this._trySubscribe(a)),s.useDeprecatedSynchronousErrorHandling&&a.syncErrorThrowable&&(a.syncErrorThrowable=!1,a.syncErrorThrown))throw a.syncErrorValue;return a}_trySubscribe(e){try{return this._subscribe(e)}catch(t){s.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),function(e){for(;e;){const{closed:t,destination:n,isStopped:r}=e;if(t||r)return!1;e=n&&n instanceof f?n:null}return!0}(e)?e.error(t):console.warn(t)}}forEach(e,t){return new(t=x(t))((t,n)=>{let r;r=this.subscribe(t=>{try{e(t)}catch(a){n(a),r&&r.unsubscribe()}},n,t)})}_subscribe(e){const{source:t}=this;return t&&t.subscribe(e)}[b](){return this}pipe(...e){return 0===e.length?this:(0===(t=e).length?g:1===t.length?t[0]:function(e){return t.reduce((e,t)=>t(e),e)})(this);var t}toPromise(e){return new(e=x(e))((e,t)=>{let n;this.subscribe(e=>n=e,e=>t(e),()=>e(n))})}}return e.create=t=>new e(t),e})();function x(e){if(e||(e=s.Promise||Promise),!e)throw new Error("no Promise impl found");return e}const v=(()=>{function e(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return e.prototype=Object.create(Error.prototype),e})();class w extends d{constructor(e,t){super(),this.subject=e,this.subscriber=t,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const e=this.subject,t=e.observers;if(this.subject=null,!t||0===t.length||e.isStopped||e.closed)return;const n=t.indexOf(this.subscriber);-1!==n&&t.splice(n,1)}}class O extends f{constructor(e){super(e),this.destination=e}}let k=(()=>{class e extends y{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[p](){return new O(this)}lift(e){const t=new S(this,this);return t.operator=e,t}next(e){if(this.closed)throw new v;if(!this.isStopped){const{observers:t}=this,n=t.length,r=t.slice();for(let a=0;a<n;a++)r[a].next(e)}}error(e){if(this.closed)throw new v;this.hasError=!0,this.thrownError=e,this.isStopped=!0;const{observers:t}=this,n=t.length,r=t.slice();for(let a=0;a<n;a++)r[a].error(e);this.observers.length=0}complete(){if(this.closed)throw new v;this.isStopped=!0;const{observers:e}=this,t=e.length,n=e.slice();for(let r=0;r<t;r++)n[r].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(e){if(this.closed)throw new v;return super._trySubscribe(e)}_subscribe(e){if(this.closed)throw new v;return this.hasError?(e.error(this.thrownError),d.EMPTY):this.isStopped?(e.complete(),d.EMPTY):(this.observers.push(e),new w(this,e))}asObservable(){const e=new y;return e.source=this,e}}return e.create=(e,t)=>new S(e,t),e})();class S extends k{constructor(e,t){super(),this.destination=e,this.source=t}next(e){const{destination:t}=this;t&&t.next&&t.next(e)}error(e){const{destination:t}=this;t&&t.error&&this.destination.error(e)}complete(){const{destination:e}=this;e&&e.complete&&this.destination.complete()}_subscribe(e){const{source:t}=this;return t?this.source.subscribe(e):d.EMPTY}}class I{constructor(e,t){this.project=e,this.thisArg=t}call(e,t){return t.subscribe(new N(e,this.project,this.thisArg))}}class N extends f{constructor(e,t,n){super(e),this.project=t,this.count=0,this.thisArg=n||this}_next(e){let t;try{t=this.project.call(this.thisArg,e,this.count++)}catch(n){return void this.destination.error(n)}this.destination.next(t)}}const T=e=>t=>{for(let n=0,r=e.length;n<r&&!t.closed;n++)t.next(e[n]);t.complete()};function C(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const j=C();const E=e=>{if(e&&"function"==typeof e[b])return s=e,e=>{const t=s[b]();if("function"!=typeof t.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return t.subscribe(e)};if((t=e)&&"number"==typeof t.length&&"function"!=typeof t)return T(e);var t,n,r,a,s;if((n=e)&&"function"!=typeof n.subscribe&&"function"==typeof n.then)return a=e,e=>(a.then(t=>{e.closed||(e.next(t),e.complete())},t=>e.error(t)).then(null,i),e);if(e&&"function"==typeof e[j])return r=e,e=>{const t=r[j]();for(;;){let r;try{r=t.next()}catch(n){return e.error(n),e}if(r.done){e.complete();break}if(e.next(r.value),e.closed)break}return"function"==typeof t.return&&e.add(()=>{t.return&&t.return()}),e};{const t=c(e)?"an invalid object":`'${e}'`;throw new TypeError(`You provided ${t} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}};class A extends f{constructor(e){super(),this.parent=e}_next(e){this.parent.notifyNext(e)}_error(e){this.parent.notifyError(e),this.unsubscribe()}_complete(){this.parent.notifyComplete(),this.unsubscribe()}}class _ extends f{notifyNext(e){this.destination.next(e)}notifyError(e){this.destination.error(e)}notifyComplete(){this.destination.complete()}}function $(e,t,n=Number.POSITIVE_INFINITY){return"function"==typeof t?r=>r.pipe($((n,r)=>{return(a=e(n,r),a instanceof y?a:new y(E(a))).pipe(function(e,t){return function(t){return t.lift(new I(e,void 0))}}((e,a)=>t(n,e,r,a)));var a},n)):("number"==typeof t&&(n=t),t=>t.lift(new R(e,n)))}class R{constructor(e,t=Number.POSITIVE_INFINITY){this.project=e,this.concurrent=t}call(e,t){return t.subscribe(new F(e,this.project,this.concurrent))}}class F extends _{constructor(e,t,n=Number.POSITIVE_INFINITY){super(e),this.project=t,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)}_tryNext(e){let t;const n=this.index++;try{t=this.project(e,n)}catch(r){return void this.destination.error(r)}this.active++,this._innerSub(t)}_innerSub(e){const t=new A(this),n=this.destination;n.add(t);const r=function(e,t){if(t.closed)return;if(e instanceof y)return e.subscribe(t);let n;try{n=E(e)(t)}catch(r){t.error(r)}return n}(e,t);r!==t&&n.add(r)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(e){this.destination.next(e)}notifyComplete(){const e=this.buffer;this.active--,e.length>0?this._next(e.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function D(){return function(e){return e.lift(new M(e))}}class M{constructor(e){this.connectable=e}call(e,t){const{connectable:n}=this;n._refCount++;const r=new z(e,n),a=t.subscribe(r);return r.closed||(r.connection=n.connect()),a}}class z extends f{constructor(e,t){super(e),this.connectable=t}_unsubscribe(){const{connectable:e}=this;if(!e)return void(this.connection=null);this.connectable=null;const t=e._refCount;if(t<=0)return void(this.connection=null);if(e._refCount=t-1,t>1)return void(this.connection=null);const{connection:n}=this,r=e._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe()}}class L extends y{constructor(e,t){super(),this.source=e,this.subjectFactory=t,this._refCount=0,this._isComplete=!1}_subscribe(e){return this.getSubject().subscribe(e)}getSubject(){const e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let e=this._connection;return e||(this._isComplete=!1,e=this._connection=new d,e.add(this.source.subscribe(new B(this.getSubject(),this))),e.closed&&(this._connection=null,e=d.EMPTY)),e}refCount(){return D()(this)}}const P=(()=>{const e=L.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:e._subscribe},_isComplete:{value:e._isComplete,writable:!0},getSubject:{value:e.getSubject},connect:{value:e.connect},refCount:{value:e.refCount}}})();class B extends O{constructor(e,t){super(e),this.connectable=t}_error(e){this._unsubscribe(),super._error(e)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const e=this.connectable;if(e){this.connectable=null;const t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}}}function V(){return new k}function W(e){for(let t in e)if(e[t]===W)return t;throw Error("Could not find renamed property on target object.")}function U(e){if("string"==typeof e)return e;if(Array.isArray(e))return"["+e.map(U).join(", ")+"]";if(null==e)return""+e;if(e.overriddenName)return`${e.overriddenName}`;if(e.name)return`${e.name}`;const t=e.toString();if(null==t)return""+t;const n=t.indexOf("\n");return-1===n?t:t.substring(0,n)}function G(e,t){return null==e||""===e?null===t?"":t:null==t||""===t?e:e+" "+t}const H=W({__forward_ref__:W});function K(e){return e.__forward_ref__=K,e.toString=function(){return U(this())},e}function q(e){return"function"==typeof(t=e)&&t.hasOwnProperty(H)&&t.__forward_ref__===K?e():e;var t}class X extends Error{constructor(e,t){super(function(e,t){return`${e?`NG0${e}: `:""}${t}`}(e,t)),this.code=e}}function Z(e){return"string"==typeof e?e:null==e?"":String(e)}function Y(e){return"function"==typeof e?e.name||e.toString():"object"==typeof e&&null!=e&&"function"==typeof e.type?e.type.name||e.type.toString():Z(e)}function J(e,t){const n=t?` in ${t}`:"";throw new X("201",`No provider for ${Y(e)} found${n}`)}function Q(e){return{token:e.token,providedIn:e.providedIn||null,factory:e.factory,value:void 0}}function ee(e){return{providers:e.providers||[],imports:e.imports||[]}}function te(e){return ne(e,ae)||ne(e,ie)}function ne(e,t){return e.hasOwnProperty(t)?e[t]:null}function re(e){return e&&(e.hasOwnProperty(se)||e.hasOwnProperty(oe))?e[se]:null}const ae=W({"\u0275prov":W}),se=W({"\u0275inj":W}),ie=W({ngInjectableDef:W}),oe=W({ngInjectorDef:W});var ue=function(e){return e[e.Default=0]="Default",e[e.Host=1]="Host",e[e.Self=2]="Self",e[e.SkipSelf=4]="SkipSelf",e[e.Optional=8]="Optional",e}({});let ce;function le(e){const t=ce;return ce=e,t}function de(e,t,n){const r=te(e);return r&&"root"==r.providedIn?void 0===r.value?r.value=r.factory():r.value:n&ue.Optional?null:void 0!==t?t:void J(U(e),"Injector")}function he(e){return{toString:e}.toString()}var pe=function(e){return e[e.OnPush=0]="OnPush",e[e.Default=1]="Default",e}({}),fe=function(e){return e[e.Emulated=0]="Emulated",e[e.None=2]="None",e[e.ShadowDom=3]="ShadowDom",e}({});const me="undefined"!=typeof globalThis&&globalThis,be="undefined"!=typeof window&&window,ge="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,ye="undefined"!=typeof global&&global,xe=me||ye||be||ge,ve={},we=[],Oe=W({"\u0275cmp":W}),ke=W({"\u0275dir":W}),Se=W({"\u0275pipe":W}),Ie=W({"\u0275mod":W}),Ne=W({"\u0275loc":W}),Te=W({"\u0275fac":W}),Ce=W({__NG_ELEMENT_ID__:W});let je=0;function Ee(e){return Fe(e)||function(e){return e[ke]||null}(e)}function Ae(e){return function(e){return e[Se]||null}(e)}const _e={};function $e(e){const t={type:e.type,bootstrap:e.bootstrap||we,declarations:e.declarations||we,imports:e.imports||we,exports:e.exports||we,transitiveCompileScopes:null,schemas:e.schemas||null,id:e.id||null};return null!=e.id&&he(()=>{_e[e.id]=e.type}),t}function Re(e,t){if(null==e)return ve;const n={};for(const r in e)if(e.hasOwnProperty(r)){let a=e[r],s=a;Array.isArray(a)&&(s=a[1],a=a[0]),n[a]=r,t&&(t[a]=s)}return n}function Fe(e){return e[Oe]||null}function De(e,t){const n=e[Ie]||null;if(!n&&!0===t)throw new Error(`Type ${U(e)} does not have '\u0275mod' property.`);return n}const Me=20,ze=10;function Le(e){return Array.isArray(e)&&"object"==typeof e[1]}function Pe(e){return Array.isArray(e)&&!0===e[1]}function Be(e){return 0!=(8&e.flags)}function Ve(e){return null!==e.template}function We(e,t){return e.hasOwnProperty(Te)?e[Te]:null}class Ue{constructor(e,t,n){this.previousValue=e,this.currentValue=t,this.firstChange=n}isFirstChange(){return this.firstChange}}function Ge(){const e=Ke(this),t=null==e?void 0:e.current;if(t){const n=e.previous;if(n===ve)e.previous=t;else for(let e in t)n[e]=t[e];e.current=null,this.ngOnChanges(t)}}function He(e,t,n,r){const a=Ke(e)||function(e,t){return e.__ngSimpleChanges__=t}(e,{previous:ve,current:null}),s=a.current||(a.current={}),i=a.previous,o=this.declaredInputs[n],u=i[o];s[o]=new Ue(u&&u.currentValue,t,i===ve),e[r]=t}function Ke(e){return e.__ngSimpleChanges__||null}let qe;function Xe(e){return!!e.listen}const Ze={createRenderer:(e,t)=>void 0!==qe?qe:"undefined"!=typeof document?document:void 0};function Ye(e){for(;Array.isArray(e);)e=e[0];return e}function Je(e,t){return Ye(t[e.index])}function Qe(e,t){const n=t[e];return Le(n)?n:n[0]}function et(e){const t=function(e){return e.__ngContext__||null}(e);return t?Array.isArray(t)?t:t.lView:null}function tt(e){return 128==(128&e[2])}function nt(e,t){return null==t?null:e[t]}function rt(e){e[18]=0}function at(e,t){e[5]+=t;let n=e,r=e[3];for(;null!==r&&(1===t&&1===n[5]||-1===t&&0===n[5]);)r[5]+=t,n=r,r=r[3]}const st={lFrame:Ot(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function it(){return st.bindingsEnabled}function ot(){return st.lFrame.lView}function ut(){return st.lFrame.tView}function ct(){let e=lt();for(;null!==e&&64===e.type;)e=e.parent;return e}function lt(){return st.lFrame.currentTNode}function dt(e,t){const n=st.lFrame;n.currentTNode=e,n.isParent=t}function ht(){return st.lFrame.isParent}function pt(){return st.isInCheckNoChangesMode}function ft(e){st.isInCheckNoChangesMode=e}function mt(e,t){const n=st.lFrame;n.bindingIndex=n.bindingRootIndex=e,bt(t)}function bt(e){st.lFrame.currentDirectiveIndex=e}function gt(e){st.lFrame.currentQueryIndex=e}function yt(e){const t=e[1];return 2===t.type?t.declTNode:1===t.type?e[6]:null}function xt(e,t,n){if(n&ue.SkipSelf){let r=t,a=e;for(;r=r.parent,!(null!==r||n&ue.Host||(r=yt(a),null===r)||(a=a[15],10&r.type)););if(null===r)return!1;t=r,e=a}const r=st.lFrame=wt();return r.currentTNode=t,r.lView=e,!0}function vt(e){const t=wt(),n=e[1];st.lFrame=t,t.currentTNode=n.firstChild,t.lView=e,t.tView=n,t.contextLView=e,t.bindingIndex=n.bindingStartIndex,t.inI18n=!1}function wt(){const e=st.lFrame,t=null===e?null:e.child;return null===t?Ot(e):t}function Ot(e){const t={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:e,child:null,inI18n:!1};return null!==e&&(e.child=t),t}function kt(){const e=st.lFrame;return st.lFrame=e.parent,e.currentTNode=null,e.lView=null,e}const St=kt;function It(){const e=kt();e.isParent=!0,e.tView=null,e.selectedIndex=-1,e.contextLView=null,e.elementDepthCount=0,e.currentDirectiveIndex=-1,e.currentNamespace=null,e.bindingRootIndex=-1,e.bindingIndex=-1,e.currentQueryIndex=0}function Nt(){return st.lFrame.selectedIndex}function Tt(e){st.lFrame.selectedIndex=e}function Ct(e,t){for(let n=t.directiveStart,r=t.directiveEnd;n<r;n++){const t=e.data[n].type.prototype,{ngAfterContentInit:r,ngAfterContentChecked:a,ngAfterViewInit:s,ngAfterViewChecked:i,ngOnDestroy:o}=t;r&&(e.contentHooks||(e.contentHooks=[])).push(-n,r),a&&((e.contentHooks||(e.contentHooks=[])).push(n,a),(e.contentCheckHooks||(e.contentCheckHooks=[])).push(n,a)),s&&(e.viewHooks||(e.viewHooks=[])).push(-n,s),i&&((e.viewHooks||(e.viewHooks=[])).push(n,i),(e.viewCheckHooks||(e.viewCheckHooks=[])).push(n,i)),null!=o&&(e.destroyHooks||(e.destroyHooks=[])).push(n,o)}}function jt(e,t,n){_t(e,t,3,n)}function Et(e,t,n,r){(3&e[2])===n&&_t(e,t,n,r)}function At(e,t){let n=e[2];(3&n)===t&&(n&=2047,n+=1,e[2]=n)}function _t(e,t,n,r){const a=null!=r?r:-1,s=t.length-1;let i=0;for(let o=void 0!==r?65535&e[18]:0;o<s;o++)if("number"==typeof t[o+1]){if(i=t[o],null!=r&&i>=r)break}else t[o]<0&&(e[18]+=65536),(i<a||-1==a)&&($t(e,n,t,o),e[18]=(4294901760&e[18])+o+2),o++}function $t(e,t,n,r){const a=n[r]<0,s=n[r+1],i=e[a?-n[r]:n[r]];if(a){if(e[2]>>11<e[18]>>16&&(3&e[2])===t){e[2]+=2048;try{s.call(i)}finally{}}}else try{s.call(i)}finally{}}const Rt=-1;class Ft{constructor(e,t,n){this.factory=e,this.resolving=!1,this.canSeeViewProviders=t,this.injectImpl=n}}function Dt(e,t,n){const r=Xe(e);let a=0;for(;a<n.length;){const s=n[a];if("number"==typeof s){if(0!==s)break;a++;const i=n[a++],o=n[a++],u=n[a++];r?e.setAttribute(t,o,u,i):t.setAttributeNS(i,o,u)}else{const i=s,o=n[++a];64===i.charCodeAt(0)?r&&e.setProperty(t,i,o):r?e.setAttribute(t,i,o):t.setAttribute(i,o),a++}}return a}function Mt(e,t){if(null===t||0===t.length);else if(null===e||0===e.length)e=t.slice();else{let n=-1;for(let r=0;r<t.length;r++){const a=t[r];"number"==typeof a?n=a:0===n||zt(e,n,a,null,-1===n||2===n?t[++r]:null)}}return e}function zt(e,t,n,r,a){let s=0,i=e.length;if(-1===t)i=-1;else for(;s<e.length;){const n=e[s++];if("number"==typeof n){if(n===t){i=-1;break}if(n>t){i=s-1;break}}}for(;s<e.length;){const t=e[s];if("number"==typeof t)break;if(t===n){if(null===r)return void(null!==a&&(e[s+1]=a));if(r===e[s+1])return void(e[s+2]=a)}s++,null!==r&&s++,null!==a&&s++}-1!==i&&(e.splice(i,0,t),s=i+1),e.splice(s++,0,n),null!==r&&e.splice(s++,0,r),null!==a&&e.splice(s++,0,a)}function Lt(e){return 32767&e}function Pt(e,t){let n=e>>16,r=t;for(;n>0;)r=r[15],n--;return r}let Bt=!0;function Vt(e){const t=Bt;return Bt=e,t}let Wt=0;function Ut(e,t){const n=Ht(e,t);if(-1!==n)return n;const r=t[1];r.firstCreatePass&&(e.injectorIndex=t.length,Gt(r.data,e),Gt(t,null),Gt(r.blueprint,null));const a=Kt(e,t),s=e.injectorIndex;if(a!==Rt){const e=Lt(a),n=Pt(a,t),r=n[1].data;for(let a=0;a<8;a++)t[s+a]=n[e+a]|r[e+a]}return t[s+8]=a,s}function Gt(e,t){e.push(0,0,0,0,0,0,0,0,t)}function Ht(e,t){return-1===e.injectorIndex||e.parent&&e.parent.injectorIndex===e.injectorIndex||null===t[e.injectorIndex+8]?-1:e.injectorIndex}function Kt(e,t){if(e.parent&&-1!==e.parent.injectorIndex)return e.parent.injectorIndex;let n=0,r=null,a=t;for(;null!==a;){const e=a[1],t=e.type;if(r=2===t?e.declTNode:1===t?a[6]:null,null===r)return Rt;if(n++,a=a[15],-1!==r.injectorIndex)return r.injectorIndex|n<<16}return Rt}function qt(e,t,n){!function(e,t,n){let r;"string"==typeof n?r=n.charCodeAt(0)||0:n.hasOwnProperty(Ce)&&(r=n[Ce]),null==r&&(r=n[Ce]=Wt++);const a=255&r;t.data[e+(a>>5)]|=1<<a}(e,t,n)}function Xt(e,t,n){if(n&ue.Optional)return e;J(t,"NodeInjector")}function Zt(e,t,n,r){if(n&ue.Optional&&void 0===r&&(r=null),0==(n&(ue.Self|ue.Host))){const a=e[9],s=le(void 0);try{return a?a.get(t,r,n&ue.Optional):de(t,r,n&ue.Optional)}finally{le(s)}}return Xt(r,t,n)}const Yt={};function Jt(){return new rn(ct(),ot())}function Qt(e,t,n,r,a,s){const i=t[1],o=i.data[e+8],u=function(e,t,n,r,a){const s=e.providerIndexes,i=t.data,o=1048575&s,u=e.directiveStart,c=s>>20,l=a?o+c:e.directiveEnd;for(let d=r?o:o+c;d<l;d++){const e=i[d];if(d<u&&n===e||d>=u&&e.type===n)return d}if(a){const e=i[u];if(e&&Ve(e)&&e.type===n)return u}return null}(o,i,n,null==r?function(e){return 2==(2&e.flags)}(o)&&Bt:r!=i&&0!=(3&o.type),a&ue.Host&&s===o);return null!==u?en(t,i,u,o):Yt}function en(e,t,n,r){let a=e[n];const s=t.data;if(a instanceof Ft){const i=a;i.resolving&&function(e,t){throw new X("200",`Circular dependency in DI detected for ${e}`)}(Y(s[n]));const o=Vt(i.canSeeViewProviders);i.resolving=!0;const u=i.injectImpl?le(i.injectImpl):null;xt(e,r,ue.Default);try{a=e[n]=i.factory(void 0,s,e,r),t.firstCreatePass&&n>=r.directiveStart&&function(e,t,n){const{ngOnChanges:r,ngOnInit:a,ngDoCheck:s}=t.type.prototype;if(r){const r=((i=t).type.prototype.ngOnChanges&&(i.setInput=He),Ge);(n.preOrderHooks||(n.preOrderHooks=[])).push(e,r),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,r)}var i;a&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-e,a),s&&((n.preOrderHooks||(n.preOrderHooks=[])).push(e,s),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,s))}(n,s[n],t)}finally{null!==u&&le(u),Vt(o),i.resolving=!1,St()}}return a}function tn(e,t,n){return!!(n[t+(e>>5)]&1<<e)}function nn(e,t){return!(e&ue.Self||e&ue.Host&&t)}class rn{constructor(e,t){this._tNode=e,this._lView=t}get(e,t){return function(e,t,n,r=ue.Default,a){if(null!==e){const s=function(e){if("string"==typeof e)return e.charCodeAt(0)||0;const t=e.hasOwnProperty(Ce)?e[Ce]:void 0;return"number"==typeof t?t>=0?255&t:Jt:t}(n);if("function"==typeof s){if(!xt(t,e,r))return r&ue.Host?Xt(a,n,r):Zt(t,n,r,a);try{const e=s();if(null!=e||r&ue.Optional)return e;J(n)}finally{St()}}else if("number"==typeof s){let a=null,i=Ht(e,t),o=Rt,u=r&ue.Host?t[16][6]:null;for((-1===i||r&ue.SkipSelf)&&(o=-1===i?Kt(e,t):t[i+8],o!==Rt&&nn(r,!1)?(a=t[1],i=Lt(o),t=Pt(o,t)):i=-1);-1!==i;){const e=t[1];if(tn(s,i,e.data)){const e=Qt(i,t,n,a,r,u);if(e!==Yt)return e}o=t[i+8],o!==Rt&&nn(r,t[1].data[i+8]===u)&&tn(s,i,t)?(a=e,i=Lt(o),t=Pt(o,t)):i=-1}}}return Zt(t,n,r,a)}(this._tNode,this._lView,e,void 0,t)}}const an="__parameters__";function sn(e,t,n){return he(()=>{const r=function(e){return function(...t){if(e){const n=e(...t);for(const e in n)this[e]=n[e]}}}(t);function a(...e){if(this instanceof a)return r.apply(this,e),this;const t=new a(...e);return n.annotation=t,n;function n(e,n,r){const a=e.hasOwnProperty(an)?e[an]:Object.defineProperty(e,an,{value:[]})[an];for(;a.length<=r;)a.push(null);return(a[r]=a[r]||[]).push(t),e}}return n&&(a.prototype=Object.create(n.prototype)),a.prototype.ngMetadataName=e,a.annotationCls=a,a})}class on{constructor(e,t){this._desc=e,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof t?this.__NG_ELEMENT_ID__=t:void 0!==t&&(this.\u0275prov=Q({token:this,providedIn:t.providedIn||"root",factory:t.factory}))}toString(){return`InjectionToken ${this._desc}`}}function un(e,t){e.forEach(e=>Array.isArray(e)?un(e,t):t(e))}function cn(e,t){return t>=e.length-1?e.pop():e.splice(t,1)[0]}const ln={},dn=/\n/gm,hn="__source",pn=W({provide:String,useValue:W});let fn;function mn(e){const t=fn;return fn=e,t}function bn(e,t=ue.Default){if(void 0===fn)throw new Error("inject() must be called from an injection context");return null===fn?de(e,void 0,t):fn.get(e,t&ue.Optional?null:void 0,t)}function gn(e,t=ue.Default){return(ce||bn)(q(e),t)}function yn(e){const t=[];for(let n=0;n<e.length;n++){const r=q(e[n]);if(Array.isArray(r)){if(0===r.length)throw new Error("Arguments array must have arguments.");let e,n=ue.Default;for(let t=0;t<r.length;t++){const a=r[t],s=a.__NG_DI_FLAG__;"number"==typeof s?-1===s?e=a.token:n|=s:e=a}t.push(gn(e,n))}else t.push(gn(r))}return t}function xn(e,t){return e.__NG_DI_FLAG__=t,e.prototype.__NG_DI_FLAG__=t,e}const vn=xn(sn("Inject",e=>({token:e})),-1),wn=xn(sn("Optional"),8),On=xn(sn("SkipSelf"),4);function kn(e){return e.ngDebugContext}function Sn(e){return e.ngOriginalError}function In(e,...t){e.error(...t)}class Nn{constructor(){this._console=console}handleError(e){const t=this._findOriginalError(e),n=this._findContext(e),r=function(e){return e.ngErrorLogger||In}(e);r(this._console,"ERROR",e),t&&r(this._console,"ORIGINAL ERROR",t),n&&r(this._console,"ERROR CONTEXT",n)}_findContext(e){return e?kn(e)?kn(e):this._findContext(Sn(e)):null}_findOriginalError(e){let t=Sn(e);for(;t&&Sn(t);)t=Sn(t);return t}}function Tn(e,t){e.__ngContext__=t}const Cn=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(xe))();function jn(e){return e instanceof Function?e():e}var En=function(e){return e[e.Important=1]="Important",e[e.DashCase=2]="DashCase",e}({});function An(e,t){return(void 0)(e,t)}function _n(e){const t=e[3];return Pe(t)?t[3]:t}function $n(e){return Fn(e[13])}function Rn(e){return Fn(e[4])}function Fn(e){for(;null!==e&&!Pe(e);)e=e[4];return e}function Dn(e,t,n,r,a){if(null!=r){let s,i=!1;Pe(r)?s=r:Le(r)&&(i=!0,r=r[0]);const o=Ye(r);0===e&&null!==n?null==a?Bn(t,n,o):Pn(t,n,o,a||null,!0):1===e&&null!==n?Pn(t,n,o,a||null,!0):2===e?function(e,t,n){const r=function(e,t){return Xe(e)?e.parentNode(t):t.parentNode}(e,t);r&&function(e,t,n,r){Xe(e)?e.removeChild(t,n,r):t.removeChild(n)}(e,r,t,n)}(t,o,i):3===e&&t.destroyNode(o),null!=s&&function(e,t,n,r,a){const s=n[7];s!==Ye(n)&&Dn(t,e,r,s,a);for(let i=ze;i<n.length;i++){const a=n[i];Hn(a[1],a,e,t,r,s)}}(t,e,s,n,a)}}function Mn(e,t,n){return Xe(e)?e.createElement(t,n):null===n?e.createElement(t):e.createElementNS(n,t)}function zn(e,t){const n=e[9],r=n.indexOf(t),a=t[3];1024&t[2]&&(t[2]&=-1025,at(a,-1)),n.splice(r,1)}function Ln(e,t){if(!(256&t[2])){t[2]&=-129,t[2]|=256,function(e,t){let n;if(null!=e&&null!=(n=e.destroyHooks))for(let r=0;r<n.length;r+=2){const e=t[n[r]];if(!(e instanceof Ft)){const t=n[r+1];if(Array.isArray(t))for(let n=0;n<t.length;n+=2){const r=e[t[n]],a=t[n+1];try{a.call(r)}finally{}}else try{t.call(e)}finally{}}}}(e,t),function(e,t){const n=e.cleanup,r=t[7];let a=-1;if(null!==n)for(let s=0;s<n.length-1;s+=2)if("string"==typeof n[s]){const e=n[s+1],i="function"==typeof e?e(t):Ye(t[e]),o=r[a=n[s+2]],u=n[s+3];"boolean"==typeof u?i.removeEventListener(n[s],o,u):u>=0?r[a=u]():r[a=-u].unsubscribe(),s+=2}else{const e=r[a=n[s+1]];n[s].call(e)}if(null!==r){for(let e=a+1;e<r.length;e++)(0,r[e])();t[7]=null}}(e,t),1===t[1].type&&Xe(t[11])&&t[11].destroy();const n=t[17];if(null!==n&&Pe(t[3])){n!==t[3]&&zn(n,t);const r=t[19];null!==r&&r.detachView(e)}}}function Pn(e,t,n,r,a){Xe(e)?e.insertBefore(t,n,r,a):t.insertBefore(n,r,a)}function Bn(e,t,n){Xe(e)?e.appendChild(t,n):t.appendChild(n)}function Vn(e,t,n,r,a){null!==r?Pn(e,t,n,r,a):Bn(e,t,n)}function Wn(e,t,n,r){const a=function(e,t,n){return function(e,t,n){let r=t;for(;null!==r&&40&r.type;)r=(t=r).parent;if(null===r)return n[0];if(2&r.flags){const t=e.data[r.directiveStart].encapsulation;if(t===fe.None||t===fe.Emulated)return null}return Je(r,n)}(e,t.parent,n)}(e,r,t),s=t[11],i=function(e,t,n){return function(e,t,n){return 40&e.type?Je(e,n):null}(e,0,n)}(r.parent||t[6],0,t);if(null!=a)if(Array.isArray(n))for(let o=0;o<n.length;o++)Vn(s,a,n[o],i,!1);else Vn(s,a,n,i,!1)}function Un(e,t){return null!==t?e[16][6].projection[t.projection]:null}function Gn(e,t,n,r,a,s,i){for(;null!=n;){const o=r[n.index],u=n.type;if(i&&0===t&&(o&&Tn(Ye(o),r),n.flags|=4),64!=(64&n.flags))if(8&u)Gn(e,t,n.child,r,a,s,!1),Dn(t,e,a,o,s);else if(32&u){const i=An(n,r);let u;for(;u=i();)Dn(t,e,a,u,s);Dn(t,e,a,o,s)}else 16&u?Kn(e,t,r,n,a,s):Dn(t,e,a,o,s);n=i?n.projectionNext:n.next}}function Hn(e,t,n,r,a,s){Gn(n,r,e.firstChild,t,a,s,!1)}function Kn(e,t,n,r,a,s){const i=n[16],o=i[6].projection[r.projection];if(Array.isArray(o))for(let u=0;u<o.length;u++)Dn(t,e,a,o[u],s);else Gn(e,t,o,i[3],a,s,!0)}function qn(e,t,n){Xe(e)?e.setAttribute(t,"style",n):t.style.cssText=n}function Xn(e,t,n){Xe(e)?""===n?e.removeAttribute(t,"class"):e.setAttribute(t,"class",n):t.className=n}function Zn(e,t,n){let r=e.length;for(;;){const a=e.indexOf(t,n);if(-1===a)return a;if(0===a||e.charCodeAt(a-1)<=32){const n=t.length;if(a+n===r||e.charCodeAt(a+n)<=32)return a}n=a+1}}const Yn="ng-template";function Jn(e,t,n){let r=0;for(;r<e.length;){let a=e[r++];if(n&&"class"===a){if(a=e[r],-1!==Zn(a.toLowerCase(),t,0))return!0}else if(1===a){for(;r<e.length&&"string"==typeof(a=e[r++]);)if(a.toLowerCase()===t)return!0;return!1}}return!1}function Qn(e){return 4===e.type&&e.value!==Yn}function er(e,t,n){return t===(4!==e.type||n?e.value:Yn)}function tr(e,t,n){let r=4;const a=e.attrs||[],s=function(e){for(let n=0;n<e.length;n++)if(3===(t=e[n])||4===t||6===t)return n;var t;return e.length}(a);let i=!1;for(let o=0;o<t.length;o++){const u=t[o];if("number"!=typeof u){if(!i)if(4&r){if(r=2|1&r,""!==u&&!er(e,u,n)||""===u&&1===t.length){if(nr(r))return!1;i=!0}}else{const c=8&r?u:t[++o];if(8&r&&null!==e.attrs){if(!Jn(e.attrs,c,n)){if(nr(r))return!1;i=!0}continue}const l=rr(8&r?"class":u,a,Qn(e),n);if(-1===l){if(nr(r))return!1;i=!0;continue}if(""!==c){let e;e=l>s?"":a[l+1].toLowerCase();const t=8&r?e:null;if(t&&-1!==Zn(t,c,0)||2&r&&c!==e){if(nr(r))return!1;i=!0}}}}else{if(!i&&!nr(r)&&!nr(u))return!1;if(i&&nr(u))continue;i=!1,r=u|1&r}}return nr(r)||i}function nr(e){return 0==(1&e)}function rr(e,t,n,r){if(null===t)return-1;let a=0;if(r||!n){let n=!1;for(;a<t.length;){const r=t[a];if(r===e)return a;if(3===r||6===r)n=!0;else{if(1===r||2===r){let e=t[++a];for(;"string"==typeof e;)e=t[++a];continue}if(4===r)break;if(0===r){a+=4;continue}}a+=n?1:2}return-1}return function(e,t){let n=e.indexOf(4);if(n>-1)for(n++;n<e.length;){const r=e[n];if("number"==typeof r)return-1;if(r===t)return n;n++}return-1}(t,e)}function ar(e,t,n=!1){for(let r=0;r<t.length;r++)if(tr(e,t[r],n))return!0;return!1}function sr(e,t){return e?":not("+t.trim()+")":t}function ir(e){let t=e[0],n=1,r=2,a="",s=!1;for(;n<e.length;){let i=e[n];if("string"==typeof i)if(2&r){const t=e[++n];a+="["+i+(t.length>0?'="'+t+'"':"")+"]"}else 8&r?a+="."+i:4&r&&(a+=" "+i);else""===a||nr(i)||(t+=sr(s,a),a=""),r=i,s=s||!nr(r);n++}return""!==a&&(t+=sr(s,a)),t}const or={};function ur(e,t,n,r){if(!r)if(3==(3&t[2])){const r=e.preOrderCheckHooks;null!==r&&jt(t,r,n)}else{const r=e.preOrderHooks;null!==r&&Et(t,r,0,n)}Tt(n)}function cr(e,t){const n=e.contentQueries;if(null!==n)for(let r=0;r<n.length;r+=2){const a=n[r],s=n[r+1];if(-1!==s){const n=e.data[s];gt(a),n.contentQueries(2,t[s],s)}}}function lr(e,t,n,r,a,s,i,o,u,c){const l=t.blueprint.slice();return l[0]=a,l[2]=140|r,rt(l),l[3]=l[15]=e,l[8]=n,l[10]=i||e&&e[10],l[11]=o||e&&e[11],l[12]=u||e&&e[12]||null,l[9]=c||e&&e[9]||null,l[6]=s,l[16]=2==t.type?e[16]:l,l}function dr(e,t,n,r,a){let s=e.data[t];if(null===s)s=function(e,t,n,r,a){const s=lt(),i=ht(),o=e.data[t]=function(e,t,n,r,a,s){return{type:n,index:r,insertBeforeIndex:null,injectorIndex:t?t.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:a,attrs:s,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:t,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,i?s:s&&s.parent,n,t,r,a);return null===e.firstChild&&(e.firstChild=o),null!==s&&(i?null==s.child&&null!==o.parent&&(s.child=o):null===s.next&&(s.next=o)),o}(e,t,n,r,a),st.lFrame.inI18n&&(s.flags|=64);else if(64&s.type){s.type=n,s.value=r,s.attrs=a;const e=function(){const e=st.lFrame,t=e.currentTNode;return e.isParent?t:t.parent}();s.injectorIndex=null===e?-1:e.injectorIndex}return dt(s,!0),s}function hr(e,t,n,r){if(0===n)return-1;const a=t.length;for(let s=0;s<n;s++)t.push(r),e.blueprint.push(r),e.data.push(null);return a}function pr(e,t,n){vt(t);try{const r=e.viewQuery;null!==r&&Fr(1,r,n);const a=e.template;null!==a&&br(e,t,a,1,n),e.firstCreatePass&&(e.firstCreatePass=!1),e.staticContentQueries&&cr(e,t),e.staticViewQueries&&Fr(2,e.viewQuery,n);const s=e.components;null!==s&&function(e,t){for(let n=0;n<t.length;n++)Ar(e,t[n])}(t,s)}catch(r){throw e.firstCreatePass&&(e.incompleteFirstPass=!0),r}finally{t[2]&=-5,It()}}function fr(e,t,n,r){const a=t[2];if(256==(256&a))return;vt(t);const s=pt();try{rt(t),st.lFrame.bindingIndex=e.bindingStartIndex,null!==n&&br(e,t,n,2,r);const i=3==(3&a);if(!s)if(i){const n=e.preOrderCheckHooks;null!==n&&jt(t,n,null)}else{const n=e.preOrderHooks;null!==n&&Et(t,n,0,null),At(t,0)}if(function(e){for(let t=$n(e);null!==t;t=Rn(t)){if(!t[2])continue;const e=t[9];for(let t=0;t<e.length;t++){const n=e[t],r=n[3];0==(1024&n[2])&&at(r,1),n[2]|=1024}}}(t),function(e){for(let t=$n(e);null!==t;t=Rn(t))for(let e=ze;e<t.length;e++){const n=t[e],r=n[1];tt(n)&&fr(r,n,r.template,n[8])}}(t),null!==e.contentQueries&&cr(e,t),!s)if(i){const n=e.contentCheckHooks;null!==n&&jt(t,n)}else{const n=e.contentHooks;null!==n&&Et(t,n,1),At(t,1)}!function(e,t){const n=e.hostBindingOpCodes;if(null!==n)try{for(let e=0;e<n.length;e++){const r=n[e];if(r<0)Tt(~r);else{const a=r,s=n[++e],i=n[++e];mt(s,a),i(2,t[a])}}}finally{Tt(-1)}}(e,t);const o=e.components;null!==o&&function(e,t){for(let n=0;n<t.length;n++)jr(e,t[n])}(t,o);const u=e.viewQuery;if(null!==u&&Fr(2,u,r),!s)if(i){const n=e.viewCheckHooks;null!==n&&jt(t,n)}else{const n=e.viewHooks;null!==n&&Et(t,n,2),At(t,2)}!0===e.firstUpdatePass&&(e.firstUpdatePass=!1),s||(t[2]&=-73),1024&t[2]&&(t[2]&=-1025,at(t[3],-1))}finally{It()}}function mr(e,t,n,r){const a=t[10],s=!pt(),i=4==(4&t[2]);try{s&&!i&&a.begin&&a.begin(),i&&pr(e,t,r),fr(e,t,n,r)}finally{s&&!i&&a.end&&a.end()}}function br(e,t,n,r,a){const s=Nt(),i=2&r;try{Tt(-1),i&&t.length>Me&&ur(e,t,Me,pt()),n(r,a)}finally{Tt(s)}}function gr(e){const t=e.tView;return null===t||t.incompleteFirstPass?e.tView=yr(1,null,e.template,e.decls,e.vars,e.directiveDefs,e.pipeDefs,e.viewQuery,e.schemas,e.consts):t}function yr(e,t,n,r,a,s,i,o,u,c){const l=Me+r,d=l+a,h=function(e,t){const n=[];for(let r=0;r<t;r++)n.push(r<e?null:or);return n}(l,d),p="function"==typeof c?c():c;return h[1]={type:e,blueprint:h,template:n,queries:null,viewQuery:o,declTNode:t,data:h.slice().fill(null,l),bindingStartIndex:l,expandoStartIndex:d,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof s?s():s,pipeRegistry:"function"==typeof i?i():i,firstChild:null,schemas:u,consts:p,incompleteFirstPass:!1}}function xr(e,t,n){for(let r in e)if(e.hasOwnProperty(r)){const a=e[r];(n=null===n?{}:n).hasOwnProperty(r)?n[r].push(t,a):n[r]=[t,a]}return n}function vr(e,t,n,r,a,s){const i=s.hostBindings;if(i){let n=e.hostBindingOpCodes;null===n&&(n=e.hostBindingOpCodes=[]);const s=~t.index;(function(e){let t=e.length;for(;t>0;){const n=e[--t];if("number"==typeof n&&n<0)return n}return 0})(n)!=s&&n.push(s),n.push(r,a,i)}}function wr(e,t){null!==e.hostBindings&&e.hostBindings(1,t)}function Or(e,t){t.flags|=2,(e.components||(e.components=[])).push(t.index)}function kr(e,t,n){if(n){if(t.exportAs)for(let r=0;r<t.exportAs.length;r++)n[t.exportAs[r]]=e;Ve(t)&&(n[""]=e)}}function Sr(e,t,n){e.flags|=1,e.directiveStart=t,e.directiveEnd=t+n,e.providerIndexes=t}function Ir(e,t,n,r,a){e.data[r]=a;const s=a.factory||(a.factory=We(a.type)),i=new Ft(s,Ve(a),null);e.blueprint[r]=i,n[r]=i,vr(e,t,0,r,hr(e,n,a.hostVars,or),a)}function Nr(e,t,n){const r=Je(t,e),a=gr(n),s=e[10],i=_r(e,lr(e,a,null,n.onPush?64:16,r,t,s,s.createRenderer(r,n),null,null));e[t.index]=i}function Tr(e,t,n,r,a,s){const i=s[t];if(null!==i){const e=r.setInput;for(let t=0;t<i.length;){const a=i[t++],s=i[t++],o=i[t++];null!==e?r.setInput(n,o,a,s):n[s]=o}}}function Cr(e,t){let n=null,r=0;for(;r<t.length;){const a=t[r];if(0!==a)if(5!==a){if("number"==typeof a)break;e.hasOwnProperty(a)&&(null===n&&(n=[]),n.push(a,e[a],t[r+1])),r+=2}else r+=2;else r+=4}return n}function jr(e,t){const n=Qe(t,e);if(tt(n)){const e=n[1];80&n[2]?fr(e,n,e.template,n[8]):n[5]>0&&Er(n)}}function Er(e){for(let n=$n(e);null!==n;n=Rn(n))for(let e=ze;e<n.length;e++){const t=n[e];if(1024&t[2]){const e=t[1];fr(e,t,e.template,t[8])}else t[5]>0&&Er(t)}const t=e[1].components;if(null!==t)for(let n=0;n<t.length;n++){const r=Qe(t[n],e);tt(r)&&r[5]>0&&Er(r)}}function Ar(e,t){const n=Qe(t,e),r=n[1];!function(e,t){for(let n=t.length;n<e.blueprint.length;n++)t.push(e.blueprint[n])}(r,n),pr(r,n,n[8])}function _r(e,t){return e[13]?e[14][4]=t:e[13]=t,e[14]=t,t}function $r(e,t,n){const r=t[10];r.begin&&r.begin();try{fr(e,t,e.template,n)}catch(a){throw function(e,t){const n=e[9],r=n?n.get(Nn,null):null;r&&r.handleError(t)}(t,a),a}finally{r.end&&r.end()}}function Rr(e){!function(e){for(let t=0;t<e.components.length;t++){const n=e.components[t],r=et(n),a=r[1];mr(a,r,a.template,n)}}(e[8])}function Fr(e,t,n){gt(0),t(e,n)}const Dr=(()=>Promise.resolve(null))();function Mr(e,t,n){let r=n?e.styles:null,a=n?e.classes:null,s=0;if(null!==t)for(let i=0;i<t.length;i++){const e=t[i];"number"==typeof e?s=e:1==s?a=G(a,e):2==s&&(r=G(r,e+": "+t[++i]+";"))}n?e.styles=r:e.stylesWithoutHost=r,n?e.classes=a:e.classesWithoutHost=a}const zr=new on("INJECTOR",-1);class Lr{get(e,t=ln){if(t===ln){const t=new Error(`NullInjectorError: No provider for ${U(e)}!`);throw t.name="NullInjectorError",t}return t}}const Pr=new on("Set Injector scope."),Br={},Vr={},Wr=[];let Ur;function Gr(){return void 0===Ur&&(Ur=new Lr),Ur}function Hr(e,t=null,n=null,r){return new Kr(e,n,t||Gr(),r)}class Kr{constructor(e,t,n,r=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const a=[];t&&un(t,n=>this.processProvider(n,e,t)),un([e],e=>this.processInjectorType(e,[],a)),this.records.set(zr,Xr(void 0,this));const s=this.records.get(Pr);this.scope=null!=s?s.value:null,this.source=r||("object"==typeof e?null:U(e))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(e=>e.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(e,t=ln,n=ue.Default){this.assertNotDestroyed();const r=mn(this);try{if(!(n&ue.SkipSelf)){let t=this.records.get(e);if(void 0===t){const n=("function"==typeof(a=e)||"object"==typeof a&&a instanceof on)&&te(e);t=n&&this.injectableDefInScope(n)?Xr(qr(e),Br):null,this.records.set(e,t)}if(null!=t)return this.hydrate(e,t)}return(n&ue.Self?Gr():this.parent).get(e,t=n&ue.Optional&&t===ln?null:t)}catch(s){if("NullInjectorError"===s.name){if((s.ngTempTokenPath=s.ngTempTokenPath||[]).unshift(U(e)),r)throw s;return function(e,t,n,r){const a=e.ngTempTokenPath;throw t[hn]&&a.unshift(t[hn]),e.message=function(e,t,n,r=null){e=e&&"\n"===e.charAt(0)&&"\u0275"==e.charAt(1)?e.substr(2):e;let a=U(t);if(Array.isArray(t))a=t.map(U).join(" -> ");else if("object"==typeof t){let e=[];for(let n in t)if(t.hasOwnProperty(n)){let r=t[n];e.push(n+":"+("string"==typeof r?JSON.stringify(r):U(r)))}a=`{${e.join(", ")}}`}return`${n}${r?"("+r+")":""}[${a}]: ${e.replace(dn,"\n  ")}`}("\n"+e.message,a,n,r),e.ngTokenPath=a,e.ngTempTokenPath=null,e}(s,e,"R3InjectorError",this.source)}throw s}finally{mn(r)}var a}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(e=>this.get(e))}toString(){const e=[];return this.records.forEach((t,n)=>e.push(U(n))),`R3Injector[${e.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(e,t,n){if(!(e=q(e)))return!1;let r=re(e);const a=null==r&&e.ngModule||void 0,s=void 0===a?e:a,i=-1!==n.indexOf(s);if(void 0!==a&&(r=re(a)),null==r)return!1;if(null!=r.imports&&!i){let e;n.push(s);try{un(r.imports,r=>{this.processInjectorType(r,t,n)&&(void 0===e&&(e=[]),e.push(r))})}finally{}if(void 0!==e)for(let t=0;t<e.length;t++){const{ngModule:n,providers:r}=e[t];un(r,e=>this.processProvider(e,n,r||Wr))}}this.injectorDefTypes.add(s);const o=We(s)||(()=>new s);this.records.set(s,Xr(o,Br));const u=r.providers;if(null!=u&&!i){const t=e;un(u,e=>this.processProvider(e,t,u))}return void 0!==a&&void 0!==e.providers}processProvider(e,t,n){let r=Yr(e=q(e))?e:q(e&&e.provide);const a=function(e,t,n){return Zr(e)?Xr(void 0,e.useValue):Xr(function(e,t,n){let r;if(Yr(e)){const t=q(e);return We(t)||qr(t)}if(Zr(e))r=()=>q(e.useValue);else if((a=e)&&a.useFactory)r=()=>e.useFactory(...yn(e.deps||[]));else if(function(e){return!(!e||!e.useExisting)}(e))r=()=>gn(q(e.useExisting));else{const t=q(e&&(e.useClass||e.provide));if(!function(e){return!!e.deps}(e))return We(t)||qr(t);r=()=>new t(...yn(e.deps))}var a;return r}(e),Br)}(e);if(Yr(e)||!0!==e.multi)this.records.get(r);else{let t=this.records.get(r);t||(t=Xr(void 0,Br,!0),t.factory=()=>yn(t.multi),this.records.set(r,t)),r=e,t.multi.push(e)}this.records.set(r,a)}hydrate(e,t){var n;return t.value===Br&&(t.value=Vr,t.value=t.factory()),"object"==typeof t.value&&t.value&&null!==(n=t.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(t.value),t.value}injectableDefInScope(e){return!!e.providedIn&&("string"==typeof e.providedIn?"any"===e.providedIn||e.providedIn===this.scope:this.injectorDefTypes.has(e.providedIn))}}function qr(e){const t=te(e),n=null!==t?t.factory:We(e);if(null!==n)return n;if(e instanceof on)throw new Error(`Token ${U(e)} is missing a \u0275prov definition.`);if(e instanceof Function)return function(e){const t=e.length;if(t>0){const n=function(e,t){const n=[];for(let r=0;r<e;r++)n.push("?");return n}(t);throw new Error(`Can't resolve all parameters for ${U(e)}: (${n.join(", ")}).`)}const n=function(e){const t=e&&(e[ae]||e[ie]);if(t){const n=function(e){if(e.hasOwnProperty("name"))return e.name;const t=(""+e).match(/^function\s*([^\s(]+)/);return null===t?"":t[1]}(e);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),t}return null}(e);return null!==n?()=>n.factory(e):()=>new e}(e);throw new Error("unreachable")}function Xr(e,t,n=!1){return{factory:e,value:t,multi:n?[]:void 0}}function Zr(e){return null!==e&&"object"==typeof e&&pn in e}function Yr(e){return"function"==typeof e}const Jr=function(e,t,n){return function(e,t=null,n=null,r){const a=Hr(e,t,n,r);return a._resolveInjectorDefTypes(),a}({name:n},t,e,n)};let Qr=(()=>{class e{static create(e,t){return Array.isArray(e)?Jr(e,t,""):Jr(e.providers,e.parent,e.name||"")}}return e.THROW_IF_NOT_FOUND=ln,e.NULL=new Lr,e.\u0275prov=Q({token:e,providedIn:"any",factory:()=>gn(zr)}),e.__NG_ELEMENT_ID__=-1,e})();function ea(e,t){Ct(et(e)[1],ct())}let ta=null;function na(){if(!ta){const e=xe.Symbol;if(e&&e.iterator)ta=e.iterator;else{const e=Object.getOwnPropertyNames(Map.prototype);for(let t=0;t<e.length;++t){const n=e[t];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(ta=n)}}}return ta}function ra(e){return!!aa(e)&&(Array.isArray(e)||!(e instanceof Map)&&na()in e)}function aa(e){return null!==e&&("function"==typeof e||"object"==typeof e)}function sa(e,t,n,r,a){const s=a?"class":"style";!function(e,t,n,r,a){for(let s=0;s<n.length;){const i=n[s++],o=n[s++],u=t[i],c=e.data[i];null!==c.setInput?c.setInput(u,a,r,o):u[o]=a}}(e,n,t.inputs[s],s,r)}function ia(e,t,n,r){const a=ot(),s=ut(),i=Me+e,o=a[11],u=a[i]=Mn(o,t,st.lFrame.currentNamespace),c=s.firstCreatePass?function(e,t,n,r,a,s,i){const o=t.consts,u=dr(t,e,2,a,nt(o,s));return function(e,t,n,r){let a=!1;if(it()){const s=function(e,t,n){const r=e.directiveRegistry;let a=null;if(r)for(let s=0;s<r.length;s++){const i=r[s];ar(n,i.selectors,!1)&&(a||(a=[]),qt(Ut(n,t),e,i.type),Ve(i)?(Or(e,n),a.unshift(i)):a.push(i))}return a}(e,t,n),i=null===r?null:{"":-1};if(null!==s){a=!0,Sr(n,e.data.length,s.length);for(let e=0;e<s.length;e++){const t=s[e];t.providersResolver&&t.providersResolver(t)}let r=!1,o=!1,u=hr(e,t,s.length,null);for(let a=0;a<s.length;a++){const c=s[a];n.mergedAttrs=Mt(n.mergedAttrs,c.hostAttrs),Ir(e,n,t,u,c),kr(u,c,i),null!==c.contentQueries&&(n.flags|=8),null===c.hostBindings&&null===c.hostAttrs&&0===c.hostVars||(n.flags|=128);const l=c.type.prototype;!r&&(l.ngOnChanges||l.ngOnInit||l.ngDoCheck)&&((e.preOrderHooks||(e.preOrderHooks=[])).push(n.index),r=!0),o||!l.ngOnChanges&&!l.ngDoCheck||((e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n.index),o=!0),u++}!function(e,t){const n=t.directiveEnd,r=e.data,a=t.attrs,s=[];let i=null,o=null;for(let u=t.directiveStart;u<n;u++){const e=r[u],n=e.inputs,c=null===a||Qn(t)?null:Cr(n,a);s.push(c),i=xr(n,u,i),o=xr(e.outputs,u,o)}null!==i&&(i.hasOwnProperty("class")&&(t.flags|=16),i.hasOwnProperty("style")&&(t.flags|=32)),t.initialInputs=s,t.inputs=i,t.outputs=o}(e,n)}i&&function(e,t,n){if(t){const r=e.localNames=[];for(let e=0;e<t.length;e+=2){const a=n[t[e+1]];if(null==a)throw new X("301",`Export of name '${t[e+1]}' not found!`);r.push(t[e],a)}}}(n,r,i)}n.mergedAttrs=Mt(n.mergedAttrs,n.attrs)}(t,n,u,nt(o,i)),null!==u.attrs&&Mr(u,u.attrs,!1),null!==u.mergedAttrs&&Mr(u,u.mergedAttrs,!0),null!==t.queries&&t.queries.elementStart(t,u),u}(i,s,a,0,t,n,r):s.data[i];dt(c,!0);const l=c.mergedAttrs;null!==l&&Dt(o,u,l);const d=c.classes;null!==d&&Xn(o,u,d);const h=c.styles;null!==h&&qn(o,u,h),64!=(64&c.flags)&&Wn(s,a,u,c),0===st.lFrame.elementDepthCount&&Tn(u,a),st.lFrame.elementDepthCount++,function(e){return 1==(1&e.flags)}(c)&&(function(e,t,n){it()&&(function(e,t,n,r){const a=n.directiveStart,s=n.directiveEnd;e.firstCreatePass||Ut(n,t),Tn(r,t);const i=n.initialInputs;for(let o=a;o<s;o++){const r=e.data[o],s=Ve(r);s&&Nr(t,n,r);const u=en(t,e,o,n);Tn(u,t),null!==i&&Tr(0,o-a,u,r,0,i),s&&(Qe(n.index,t)[8]=u)}}(e,t,n,Je(n,t)),128==(128&n.flags)&&function(e,t,n){const r=n.directiveStart,a=n.directiveEnd,s=n.index,i=st.lFrame.currentDirectiveIndex;try{Tt(s);for(let n=r;n<a;n++){const r=e.data[n],a=t[n];bt(n),null===r.hostBindings&&0===r.hostVars&&null===r.hostAttrs||wr(r,a)}}finally{Tt(-1),bt(i)}}(e,t,n))}(s,a,c),function(e,t,n){if(Be(t)){const r=t.directiveEnd;for(let a=t.directiveStart;a<r;a++){const t=e.data[a];t.contentQueries&&t.contentQueries(1,n[a],a)}}}(s,c,a)),null!==r&&function(e,t,n=Je){const r=t.localNames;if(null!==r){let a=t.index+1;for(let s=0;s<r.length;s+=2){const i=r[s+1],o=-1===i?n(t,e):e[i];e[a++]=o}}}(a,c)}function oa(){let e=ct();ht()?st.lFrame.isParent=!1:(e=e.parent,dt(e,!1));const t=e;st.lFrame.elementDepthCount--;const n=ut();n.firstCreatePass&&(Ct(n,e),Be(e)&&n.queries.elementEnd(e)),null!=t.classesWithoutHost&&function(e){return 0!=(16&e.flags)}(t)&&sa(n,t,ot(),t.classesWithoutHost,!0),null!=t.stylesWithoutHost&&function(e){return 0!=(32&e.flags)}(t)&&sa(n,t,ot(),t.stylesWithoutHost,!1)}function ua(e,t,n,r){ia(e,t,n,r),oa()}function ca(e){return!!e&&"function"==typeof e.then}function la(e,t,n){const r=ot(),a=function(e,t,n,r){return function(e,t,n){return!Object.is(e[t],n)&&(e[t]=n,!0)}(e,st.lFrame.bindingIndex++,n)?t+Z(n)+r:or}(r,e,t,n);return a!==or&&function(e,t,n){const r=function(e,t){return Ye(t[e])}(t,e);!function(e,t,n){Xe(e)?e.setValue(t,n):t.textContent=n}(e[11],r,n)}(r,Nt(),a),la}const da=void 0;var ha=["en",[["a","p"],["AM","PM"],da],[["AM","PM"],da,da],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],da,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],da,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",da,"{1} 'at' {0}",da],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(e){let t=Math.floor(Math.abs(e)),n=e.toString().replace(/^[^.]*\.?/,"").length;return 1===t&&0===n?1:5}];let pa={};function fa(e){return e in pa||(pa[e]=xe.ng&&xe.ng.common&&xe.ng.common.locales&&xe.ng.common.locales[e]),pa[e]}var ma=function(e){return e[e.LocaleId=0]="LocaleId",e[e.DayPeriodsFormat=1]="DayPeriodsFormat",e[e.DayPeriodsStandalone=2]="DayPeriodsStandalone",e[e.DaysFormat=3]="DaysFormat",e[e.DaysStandalone=4]="DaysStandalone",e[e.MonthsFormat=5]="MonthsFormat",e[e.MonthsStandalone=6]="MonthsStandalone",e[e.Eras=7]="Eras",e[e.FirstDayOfWeek=8]="FirstDayOfWeek",e[e.WeekendRange=9]="WeekendRange",e[e.DateFormat=10]="DateFormat",e[e.TimeFormat=11]="TimeFormat",e[e.DateTimeFormat=12]="DateTimeFormat",e[e.NumberSymbols=13]="NumberSymbols",e[e.NumberFormats=14]="NumberFormats",e[e.CurrencyCode=15]="CurrencyCode",e[e.CurrencySymbol=16]="CurrencySymbol",e[e.CurrencyName=17]="CurrencyName",e[e.Currencies=18]="Currencies",e[e.Directionality=19]="Directionality",e[e.PluralCase=20]="PluralCase",e[e.ExtraData=21]="ExtraData",e}({});const ba="en-US";let ga=ba;function ya(e){var t,n;n="Expected localeId to be defined",null==(t=e)&&function(e,t,n,r){throw new Error(`ASSERTION ERROR: ${e} [Expected=> null != ${t} <=Actual]`)}(n,t),"string"==typeof e&&(ga=e.toLowerCase().replace(/_/g,"-"))}class xa{}class va{resolveComponentFactory(e){throw function(e){const t=Error(`No component factory found for ${U(e)}. Did you add it to @NgModule.entryComponents?`);return t.ngComponent=e,t}(e)}}let wa=(()=>{class e{}return e.NULL=new va,e})();function Oa(...e){}function ka(e,t){return new Ia(Je(e,t))}const Sa=function(){return ka(ct(),ot())};let Ia=(()=>{class e{constructor(e){this.nativeElement=e}}return e.__NG_ELEMENT_ID__=Sa,e})();class Na{}let Ta=(()=>{class e{}return e.\u0275prov=Q({token:e,providedIn:"root",factory:()=>null}),e})();class Ca{constructor(e){this.full=e,this.major=e.split(".")[0],this.minor=e.split(".")[1],this.patch=e.split(".").slice(2).join(".")}}const ja=new Ca("11.2.14");class Ea{constructor(){}supports(e){return ra(e)}create(e){return new _a(e)}}const Aa=(e,t)=>t;class _a{constructor(e){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=e||Aa}forEachItem(e){let t;for(t=this._itHead;null!==t;t=t._next)e(t)}forEachOperation(e){let t=this._itHead,n=this._removalsHead,r=0,a=null;for(;t||n;){const s=!n||t&&t.currentIndex<Da(n,r,a)?t:n,i=Da(s,r,a),o=s.currentIndex;if(s===n)r--,n=n._nextRemoved;else if(t=t._next,null==s.previousIndex)r++;else{a||(a=[]);const e=i-r,t=o-r;if(e!=t){for(let n=0;n<e;n++){const r=n<a.length?a[n]:a[n]=0,s=r+n;t<=s&&s<e&&(a[n]=r+1)}a[s.previousIndex]=t-e}}i!==o&&e(s,i,o)}}forEachPreviousItem(e){let t;for(t=this._previousItHead;null!==t;t=t._nextPrevious)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachMovedItem(e){let t;for(t=this._movesHead;null!==t;t=t._nextMoved)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}forEachIdentityChange(e){let t;for(t=this._identityChangesHead;null!==t;t=t._nextIdentityChange)e(t)}diff(e){if(null==e&&(e=[]),!ra(e))throw new Error(`Error trying to diff '${U(e)}'. Only arrays and iterables are allowed`);return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t,n,r,a=this._itHead,s=!1;if(Array.isArray(e)){this.length=e.length;for(let t=0;t<this.length;t++)n=e[t],r=this._trackByFn(t,n),null!==a&&Object.is(a.trackById,r)?(s&&(a=this._verifyReinsertion(a,n,r,t)),Object.is(a.item,n)||this._addIdentityChange(a,n)):(a=this._mismatch(a,n,r,t),s=!0),a=a._next}else t=0,function(e,t){if(Array.isArray(e))for(let n=0;n<e.length;n++)t(e[n]);else{const n=e[na()]();let r;for(;!(r=n.next()).done;)t(r.value)}}(e,e=>{r=this._trackByFn(t,e),null!==a&&Object.is(a.trackById,r)?(s&&(a=this._verifyReinsertion(a,e,r,t)),Object.is(a.item,e)||this._addIdentityChange(a,e)):(a=this._mismatch(a,e,r,t),s=!0),a=a._next,t++}),this.length=t;return this._truncate(a),this.collection=e,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let e;for(e=this._previousItHead=this._itHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._additionsHead;null!==e;e=e._nextAdded)e.previousIndex=e.currentIndex;for(this._additionsHead=this._additionsTail=null,e=this._movesHead;null!==e;e=e._nextMoved)e.previousIndex=e.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(e,t,n,r){let a;return null===e?a=this._itTail:(a=e._prev,this._remove(e)),null!==(e=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(Object.is(e.item,t)||this._addIdentityChange(e,t),this._reinsertAfter(e,a,r)):null!==(e=null===this._linkedRecords?null:this._linkedRecords.get(n,r))?(Object.is(e.item,t)||this._addIdentityChange(e,t),this._moveAfter(e,a,r)):e=this._addAfter(new $a(t,n),a,r),e}_verifyReinsertion(e,t,n,r){let a=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==a?e=this._reinsertAfter(a,e._prev,r):e.currentIndex!=r&&(e.currentIndex=r,this._addToMoves(e,r)),e}_truncate(e){for(;null!==e;){const t=e._next;this._addToRemovals(this._unlink(e)),e=t}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(e,t,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(e);const r=e._prevRemoved,a=e._nextRemoved;return null===r?this._removalsHead=a:r._nextRemoved=a,null===a?this._removalsTail=r:a._prevRemoved=r,this._insertAfter(e,t,n),this._addToMoves(e,n),e}_moveAfter(e,t,n){return this._unlink(e),this._insertAfter(e,t,n),this._addToMoves(e,n),e}_addAfter(e,t,n){return this._insertAfter(e,t,n),this._additionsTail=null===this._additionsTail?this._additionsHead=e:this._additionsTail._nextAdded=e,e}_insertAfter(e,t,n){const r=null===t?this._itHead:t._next;return e._next=r,e._prev=t,null===r?this._itTail=e:r._prev=e,null===t?this._itHead=e:t._next=e,null===this._linkedRecords&&(this._linkedRecords=new Fa),this._linkedRecords.put(e),e.currentIndex=n,e}_remove(e){return this._addToRemovals(this._unlink(e))}_unlink(e){null!==this._linkedRecords&&this._linkedRecords.remove(e);const t=e._prev,n=e._next;return null===t?this._itHead=n:t._next=n,null===n?this._itTail=t:n._prev=t,e}_addToMoves(e,t){return e.previousIndex===t||(this._movesTail=null===this._movesTail?this._movesHead=e:this._movesTail._nextMoved=e),e}_addToRemovals(e){return null===this._unlinkedRecords&&(this._unlinkedRecords=new Fa),this._unlinkedRecords.put(e),e.currentIndex=null,e._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=e,e._prevRemoved=null):(e._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=e),e}_addIdentityChange(e,t){return e.item=t,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=e:this._identityChangesTail._nextIdentityChange=e,e}}class $a{constructor(e,t){this.item=e,this.trackById=t,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class Ra{constructor(){this._head=null,this._tail=null}add(e){null===this._head?(this._head=this._tail=e,e._nextDup=null,e._prevDup=null):(this._tail._nextDup=e,e._prevDup=this._tail,e._nextDup=null,this._tail=e)}get(e,t){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===t||t<=n.currentIndex)&&Object.is(n.trackById,e))return n;return null}remove(e){const t=e._prevDup,n=e._nextDup;return null===t?this._head=n:t._nextDup=n,null===n?this._tail=t:n._prevDup=t,null===this._head}}class Fa{constructor(){this.map=new Map}put(e){const t=e.trackById;let n=this.map.get(t);n||(n=new Ra,this.map.set(t,n)),n.add(e)}get(e,t){const n=this.map.get(e);return n?n.get(e,t):null}remove(e){const t=e.trackById;return this.map.get(t).remove(e)&&this.map.delete(t),e}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function Da(e,t,n){const r=e.previousIndex;if(null===r)return r;let a=0;return n&&r<n.length&&(a=n[r]),r+t+a}class Ma{constructor(){}supports(e){return e instanceof Map||aa(e)}create(){return new za}}class za{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(e){let t;for(t=this._mapHead;null!==t;t=t._next)e(t)}forEachPreviousItem(e){let t;for(t=this._previousMapHead;null!==t;t=t._nextPrevious)e(t)}forEachChangedItem(e){let t;for(t=this._changesHead;null!==t;t=t._nextChanged)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}diff(e){if(e){if(!(e instanceof Map||aa(e)))throw new Error(`Error trying to diff '${U(e)}'. Only maps and objects are allowed`)}else e=new Map;return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t=this._mapHead;if(this._appendAfter=null,this._forEach(e,(e,n)=>{if(t&&t.key===n)this._maybeAddToChanges(t,e),this._appendAfter=t,t=t._next;else{const r=this._getOrCreateRecordForKey(n,e);t=this._insertBeforeOrAppend(t,r)}}),t){t._prev&&(t._prev._next=null),this._removalsHead=t;for(let e=t;null!==e;e=e._nextRemoved)e===this._mapHead&&(this._mapHead=null),this._records.delete(e.key),e._nextRemoved=e._next,e.previousValue=e.currentValue,e.currentValue=null,e._prev=null,e._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(e,t){if(e){const n=e._prev;return t._next=e,t._prev=n,e._prev=t,n&&(n._next=t),e===this._mapHead&&(this._mapHead=t),this._appendAfter=e,e}return this._appendAfter?(this._appendAfter._next=t,t._prev=this._appendAfter):this._mapHead=t,this._appendAfter=t,null}_getOrCreateRecordForKey(e,t){if(this._records.has(e)){const n=this._records.get(e);this._maybeAddToChanges(n,t);const r=n._prev,a=n._next;return r&&(r._next=a),a&&(a._prev=r),n._next=null,n._prev=null,n}const n=new La(e);return this._records.set(e,n),n.currentValue=t,this._addToAdditions(n),n}_reset(){if(this.isDirty){let e;for(this._previousMapHead=this._mapHead,e=this._previousMapHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._changesHead;null!==e;e=e._nextChanged)e.previousValue=e.currentValue;for(e=this._additionsHead;null!=e;e=e._nextAdded)e.previousValue=e.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(e,t){Object.is(t,e.currentValue)||(e.previousValue=e.currentValue,e.currentValue=t,this._addToChanges(e))}_addToAdditions(e){null===this._additionsHead?this._additionsHead=this._additionsTail=e:(this._additionsTail._nextAdded=e,this._additionsTail=e)}_addToChanges(e){null===this._changesHead?this._changesHead=this._changesTail=e:(this._changesTail._nextChanged=e,this._changesTail=e)}_forEach(e,t){e instanceof Map?e.forEach(t):Object.keys(e).forEach(n=>t(e[n],n))}}class La{constructor(e){this.key=e,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function Pa(){return new Ba([new Ea])}let Ba=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(null!=n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>e.create(t,n||Pa()),deps:[[e,new On,new wn]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(null!=t)return t;throw new Error(`Cannot find a differ supporting object '${e}' of type '${n=e,n.name||typeof n}'`);var n}}return e.\u0275prov=Q({token:e,providedIn:"root",factory:Pa}),e})();function Va(){return new Wa([new Ma])}let Wa=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>e.create(t,n||Va()),deps:[[e,new On,new wn]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(t)return t;throw new Error(`Cannot find a differ supporting object '${e}'`)}}return e.\u0275prov=Q({token:e,providedIn:"root",factory:Va}),e})();function Ua(e,t,n,r,a=!1){for(;null!==n;){const s=t[n.index];if(null!==s&&r.push(Ye(s)),Pe(s))for(let e=ze;e<s.length;e++){const t=s[e],n=t[1].firstChild;null!==n&&Ua(t[1],t,n,r)}const i=n.type;if(8&i)Ua(e,t,n.child,r);else if(32&i){const e=An(n,t);let a;for(;a=e();)r.push(a)}else if(16&i){const e=Un(t,n);if(Array.isArray(e))r.push(...e);else{const n=_n(t[16]);Ua(n[1],n,e,r,!0)}}n=a?n.projectionNext:n.next}return r}class Ga extends class{constructor(e,t){this._lView=e,this._cdRefInjectingView=t,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const e=this._lView,t=e[1];return Ua(t,e,t.firstChild,[])}get context(){return this._lView[8]}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const e=this._lView[3];if(Pe(e)){const t=e[8],n=t?t.indexOf(this):-1;n>-1&&(function(e,t){if(e.length<=ze)return;const n=ze+t,r=e[n];if(r){const s=r[17];null!==s&&s!==e&&zn(s,r),t>0&&(e[n-1][4]=r[4]);const i=cn(e,ze+t);Hn(r[1],a=r,a[11],2,null,null),a[0]=null,a[6]=null;const o=i[19];null!==o&&o.detachView(i[1]),r[3]=null,r[4]=null,r[2]&=-129}var a}(e,n),cn(t,n))}this._attachedToViewContainer=!1}!function(e,t){if(!(256&t[2])){const n=t[11];Xe(n)&&n.destroyNode&&Hn(e,t,n,3,null,null),function(e){let t=e[13];if(!t)return Ln(e[1],e);for(;t;){let n=null;if(Le(t))n=t[13];else{const e=t[10];e&&(n=e)}if(!n){for(;t&&!t[4]&&t!==e;)Le(t)&&Ln(t[1],t),t=t[3];null===t&&(t=e),Le(t)&&Ln(t[1],t),n=t&&t[4]}t=n}}(t)}}(this._lView[1],this._lView)}onDestroy(e){!function(e,t,n,r){const a=(s=t)[7]||(s[7]=[]);var s;a.push(r)}(0,this._lView,0,e)}markForCheck(){!function(e){for(;e;){e[2]|=64;const t=_n(e);if(0!=(512&e[2])&&!t)return e;e=t}}(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){$r(this._lView[1],this._lView,this.context)}checkNoChanges(){!function(e,t,n){ft(!0);try{$r(e,t,n)}finally{ft(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._attachedToViewContainer=!0}detachFromAppRef(){var e;this._appRef=null,Hn(this._lView[1],e=this._lView,e[11],2,null,null)}attachToAppRef(e){if(this._attachedToViewContainer)throw new Error("This view is already attached to a ViewContainer!");this._appRef=e}}{constructor(e){super(e),this._view=e}detectChanges(){Rr(this._view)}checkNoChanges(){!function(e){ft(!0);try{Rr(e)}finally{ft(!1)}}(this._view)}get context(){return null}}const Ha=[new Ma],Ka=new Ba([new Ea]),qa=new Wa(Ha);class Xa{}const Za={};class Ya extends wa{constructor(e){super(),this.ngModule=e}resolveComponentFactory(e){const t=Fe(e);return new es(t,this.ngModule)}}function Ja(e){const t=[];for(let n in e)e.hasOwnProperty(n)&&t.push({propName:e[n],templateName:n});return t}const Qa=new on("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>Cn});class es extends xa{constructor(e,t){super(),this.componentDef=e,this.ngModule=t,this.componentType=e.type,this.selector=e.selectors.map(ir).join(","),this.ngContentSelectors=e.ngContentSelectors?e.ngContentSelectors:[],this.isBoundToModule=!!t}get inputs(){return Ja(this.componentDef.inputs)}get outputs(){return Ja(this.componentDef.outputs)}create(e,t,n,r){const a=(r=r||this.ngModule)?function(e,t){return{get:(n,r,a)=>{const s=e.get(n,Za,a);return s!==Za||r===Za?s:t.get(n,r,a)}}}(e,r.injector):e,s=a.get(Na,Ze),i=a.get(Ta,null),o=s.createRenderer(null,this.componentDef),u=this.componentDef.selectors[0][0]||"div",c=n?function(e,t,n){if(Xe(e))return e.selectRootElement(t,n===fe.ShadowDom);let r="string"==typeof t?e.querySelector(t):t;return r.textContent="",r}(o,n,this.componentDef.encapsulation):Mn(s.createRenderer(null,this.componentDef),u,function(e){const t=e.toLowerCase();return"svg"===t?"http://www.w3.org/2000/svg":"math"===t?"http://www.w3.org/1998/MathML/":null}(u)),l=this.componentDef.onPush?576:528,d={components:[],scheduler:Cn,clean:Dr,playerHandler:null,flags:0},h=yr(0,null,null,1,0,null,null,null,null,null),p=lr(null,h,d,l,null,null,s,o,i,a);let f,m;vt(p);try{const e=function(e,t,n,r,a,s){const i=n[1];n[20]=e;const o=dr(i,20,2,"#host",null),u=o.mergedAttrs=t.hostAttrs;null!==u&&(Mr(o,u,!0),null!==e&&(Dt(a,e,u),null!==o.classes&&Xn(a,e,o.classes),null!==o.styles&&qn(a,e,o.styles)));const c=r.createRenderer(e,t),l=lr(n,gr(t),null,t.onPush?64:16,n[20],o,r,c,null,null);return i.firstCreatePass&&(qt(Ut(o,n),i,t.type),Or(i,o),Sr(o,n.length,1)),_r(n,l),n[20]=l}(c,this.componentDef,p,s,o);if(c)if(n)Dt(o,c,["ng-version",ja.full]);else{const{attrs:e,classes:t}=function(e){const t=[],n=[];let r=1,a=2;for(;r<e.length;){let s=e[r];if("string"==typeof s)2===a?""!==s&&t.push(s,e[++r]):8===a&&n.push(s);else{if(!nr(a))break;a=s}r++}return{attrs:t,classes:n}}(this.componentDef.selectors[0]);e&&Dt(o,c,e),t&&t.length>0&&Xn(o,c,t.join(" "))}if(m=h.data[20],void 0!==t){const e=m.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const r=t[n];e.push(null!=r?Array.from(r):null)}}f=function(e,t,n,r,a){const s=n[1],i=function(e,t,n){const r=ct();e.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),Ir(e,r,t,hr(e,t,1,null),n));const a=en(t,e,r.directiveStart,r);Tn(a,t);const s=Je(r,t);return s&&Tn(s,t),a}(s,n,t);if(r.components.push(i),e[8]=i,a&&a.forEach(e=>e(i,t)),t.contentQueries){const e=ct();t.contentQueries(1,i,e.directiveStart)}const o=ct();return!s.firstCreatePass||null===t.hostBindings&&null===t.hostAttrs||(Tt(o.index),vr(n[1],o,0,o.directiveStart,o.directiveEnd,t),wr(t,i)),i}(e,this.componentDef,p,d,[ea]),pr(h,p,null)}finally{It()}return new ts(this.componentType,f,ka(m,p),p,m)}}class ts extends class{}{constructor(e,t,n,r,a){super(),this.location=n,this._rootLView=r,this._tNode=a,this.instance=t,this.hostView=this.changeDetectorRef=new Ga(r),this.componentType=e}get injector(){return new rn(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(e){this.hostView.onDestroy(e)}}const ns=new Map;class rs extends Xa{constructor(e,t){super(),this._parent=t,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new Ya(this);const n=De(e),r=e[Ne]||null;r&&ya(r),this._bootstrapComponents=jn(n.bootstrap),this._r3Injector=Hr(e,t,[{provide:Xa,useValue:this},{provide:wa,useValue:this.componentFactoryResolver}],U(e)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(e)}get(e,t=Qr.THROW_IF_NOT_FOUND,n=ue.Default){return e===Qr||e===Xa||e===zr?this:this._r3Injector.get(e,t,n)}destroy(){const e=this._r3Injector;!e.destroyed&&e.destroy(),this.destroyCbs.forEach(e=>e()),this.destroyCbs=null}onDestroy(e){this.destroyCbs.push(e)}}class as extends class{}{constructor(e){super(),this.moduleType=e,null!==De(e)&&function(e){const t=new Set;!function e(n){const r=De(n,!0),a=r.id;null!==a&&(function(e,t,n){if(t&&t!==n)throw new Error(`Duplicate module registered for ${e} - ${U(t)} vs ${U(t.name)}`)}(a,ns.get(a),n),ns.set(a,n));const s=jn(r.imports);for(const i of s)t.has(i)||(t.add(i),e(i))}(e)}(e)}create(e){return new rs(this.moduleType,e)}}function ss(e){return t=>{setTimeout(e,void 0,t)}}const is=class extends k{constructor(e=!1){super(),this.__isAsync=e}emit(e){super.next(e)}subscribe(e,t,n){var r,a,s;let i=e,o=t||(()=>null),u=n;if(e&&"object"==typeof e){const t=e;i=null===(r=t.next)||void 0===r?void 0:r.bind(t),o=null===(a=t.error)||void 0===a?void 0:a.bind(t),u=null===(s=t.complete)||void 0===s?void 0:s.bind(t)}this.__isAsync&&(o=ss(o),i&&(i=ss(i)),u&&(u=ss(u)));const c=super.subscribe({next:i,error:o,complete:u});return e instanceof d&&e.add(c),c}},os=new on("Application Initializer");let us=(()=>{class e{constructor(e){this.appInits=e,this.resolve=Oa,this.reject=Oa,this.initialized=!1,this.done=!1,this.donePromise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}runInitializers(){if(this.initialized)return;const e=[],t=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const t=this.appInits[n]();ca(t)&&e.push(t)}Promise.all(e).then(()=>{t()}).catch(e=>{this.reject(e)}),0===e.length&&t(),this.initialized=!0}}return e.\u0275fac=function(t){return new(t||e)(gn(os,8))},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();const cs=new on("AppId"),ls={provide:cs,useFactory:function(){return`${ds()}${ds()}${ds()}`},deps:[]};function ds(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const hs=new on("Platform Initializer"),ps=new on("Platform ID"),fs=new on("appBootstrapListener");let ms=(()=>{class e{log(e){console.log(e)}warn(e){console.warn(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();const bs=new on("LocaleId"),gs=new on("DefaultCurrencyCode");class ys{constructor(e,t){this.ngModuleFactory=e,this.componentFactories=t}}const xs=function(e){return new as(e)},vs=xs,ws=function(e){return Promise.resolve(xs(e))},Os=function(e){const t=xs(e),n=jn(De(e).declarations).reduce((e,t)=>{const n=Fe(t);return n&&e.push(new es(n)),e},[]);return new ys(t,n)},ks=Os,Ss=function(e){return Promise.resolve(Os(e))};let Is=(()=>{class e{constructor(){this.compileModuleSync=vs,this.compileModuleAsync=ws,this.compileModuleAndAllComponentsSync=ks,this.compileModuleAndAllComponentsAsync=Ss}clearCache(){}clearCacheFor(e){}getModuleId(e){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();const Ns=(()=>Promise.resolve(0))();function Ts(e){"undefined"==typeof Zone?Ns.then(()=>{e&&e.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",e)}class Cs{constructor({enableLongStackTrace:e=!1,shouldCoalesceEventChangeDetection:t=!1,shouldCoalesceRunChangeDetection:n=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new is(!1),this.onMicrotaskEmpty=new is(!1),this.onStable=new is(!1),this.onError=new is(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const r=this;r._nesting=0,r._outer=r._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(r._inner=r._inner.fork(new Zone.TaskTrackingZoneSpec)),e&&Zone.longStackTraceZoneSpec&&(r._inner=r._inner.fork(Zone.longStackTraceZoneSpec)),r.shouldCoalesceEventChangeDetection=!n&&t,r.shouldCoalesceRunChangeDetection=n,r.lastRequestAnimationFrameId=-1,r.nativeRequestAnimationFrame=function(){let e=xe.requestAnimationFrame,t=xe.cancelAnimationFrame;if("undefined"!=typeof Zone&&e&&t){const n=e[Zone.__symbol__("OriginalDelegate")];n&&(e=n);const r=t[Zone.__symbol__("OriginalDelegate")];r&&(t=r)}return{nativeRequestAnimationFrame:e,nativeCancelAnimationFrame:t}}().nativeRequestAnimationFrame,function(e){const t=()=>{!function(e){-1===e.lastRequestAnimationFrameId&&(e.lastRequestAnimationFrameId=e.nativeRequestAnimationFrame.call(xe,()=>{e.fakeTopEventTask||(e.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{e.lastRequestAnimationFrameId=-1,As(e),Es(e)},void 0,()=>{},()=>{})),e.fakeTopEventTask.invoke()}),As(e))}(e)};e._inner=e._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(n,r,a,s,i,o)=>{try{return _s(e),n.invokeTask(a,s,i,o)}finally{(e.shouldCoalesceEventChangeDetection&&"eventTask"===s.type||e.shouldCoalesceRunChangeDetection)&&t(),$s(e)}},onInvoke:(n,r,a,s,i,o,u)=>{try{return _s(e),n.invoke(a,s,i,o,u)}finally{e.shouldCoalesceRunChangeDetection&&t(),$s(e)}},onHasTask:(t,n,r,a)=>{t.hasTask(r,a),n===r&&("microTask"==a.change?(e._hasPendingMicrotasks=a.microTask,As(e),Es(e)):"macroTask"==a.change&&(e.hasPendingMacrotasks=a.macroTask))},onHandleError:(t,n,r,a)=>(t.handleError(r,a),e.runOutsideAngular(()=>e.onError.emit(a)),!1)})}(r)}static isInAngularZone(){return!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!Cs.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(Cs.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(e,t,n){return this._inner.run(e,t,n)}runTask(e,t,n,r){const a=this._inner,s=a.scheduleEventTask("NgZoneEvent: "+r,e,js,Oa,Oa);try{return a.runTask(s,t,n)}finally{a.cancelTask(s)}}runGuarded(e,t,n){return this._inner.runGuarded(e,t,n)}runOutsideAngular(e){return this._outer.run(e)}}const js={};function Es(e){if(0==e._nesting&&!e.hasPendingMicrotasks&&!e.isStable)try{e._nesting++,e.onMicrotaskEmpty.emit(null)}finally{if(e._nesting--,!e.hasPendingMicrotasks)try{e.runOutsideAngular(()=>e.onStable.emit(null))}finally{e.isStable=!0}}}function As(e){e.hasPendingMicrotasks=!!(e._hasPendingMicrotasks||(e.shouldCoalesceEventChangeDetection||e.shouldCoalesceRunChangeDetection)&&-1!==e.lastRequestAnimationFrameId)}function _s(e){e._nesting++,e.isStable&&(e.isStable=!1,e.onUnstable.emit(null))}function $s(e){e._nesting--,Es(e)}class Rs{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new is,this.onMicrotaskEmpty=new is,this.onStable=new is,this.onError=new is}run(e,t,n){return e.apply(t,n)}runGuarded(e,t,n){return e.apply(t,n)}runOutsideAngular(e){return e()}runTask(e,t,n,r){return e.apply(t,n)}}let Fs=(()=>{class e{constructor(e){this._ngZone=e,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),e.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{Cs.assertNotInAngularZone(),Ts(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())Ts(()=>{for(;0!==this._callbacks.length;){let e=this._callbacks.pop();clearTimeout(e.timeoutId),e.doneCb(this._didWork)}this._didWork=!1});else{let e=this.getPendingTasks();this._callbacks=this._callbacks.filter(t=>!t.updateCb||!t.updateCb(e)||(clearTimeout(t.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(e=>({source:e.source,creationLocation:e.creationLocation,data:e.data})):[]}addCallback(e,t,n){let r=-1;t&&t>0&&(r=setTimeout(()=>{this._callbacks=this._callbacks.filter(e=>e.timeoutId!==r),e(this._didWork,this.getPendingTasks())},t)),this._callbacks.push({doneCb:e,timeoutId:r,updateCb:n})}whenStable(e,t,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');this.addCallback(e,t,n),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(e,t,n){return[]}}return e.\u0275fac=function(t){return new(t||e)(gn(Cs))},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})(),Ds=(()=>{class e{constructor(){this._applications=new Map,Ls.addToWindow(this)}registerApplication(e,t){this._applications.set(e,t)}unregisterApplication(e){this._applications.delete(e)}unregisterAllApplications(){this._applications.clear()}getTestability(e){return this._applications.get(e)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(e,t=!0){return Ls.findTestabilityInTree(this,e,t)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();class Ms{addToWindow(e){}findTestabilityInTree(e,t,n){return null}}let zs,Ls=new Ms,Ps=!0,Bs=!1;const Vs=new on("AllowMultipleToken");function Ws(e,t,n=[]){const r=`Platform: ${t}`,a=new on(r);return(t=[])=>{let s=Us();if(!s||s.injector.get(Vs,!1))if(e)e(n.concat(t).concat({provide:a,useValue:!0}));else{const e=n.concat(t).concat({provide:a,useValue:!0},{provide:Pr,useValue:"platform"});!function(e){if(zs&&!zs.destroyed&&!zs.injector.get(Vs,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");zs=e.get(Gs);const t=e.get(hs,null);t&&t.forEach(e=>e())}(Qr.create({providers:e,name:r}))}return function(e){const t=Us();if(!t)throw new Error("No platform exists!");if(!t.injector.get(e,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return t}(a)}}function Us(){return zs&&!zs.destroyed?zs:null}let Gs=(()=>{class e{constructor(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(e,t){const n=function(e,t){let n;return n="noop"===e?new Rs:("zone.js"===e?void 0:e)||new Cs({enableLongStackTrace:(Bs=!0,Ps),shouldCoalesceEventChangeDetection:!!(null==t?void 0:t.ngZoneEventCoalescing),shouldCoalesceRunChangeDetection:!!(null==t?void 0:t.ngZoneRunCoalescing)}),n}(t?t.ngZone:void 0,{ngZoneEventCoalescing:t&&t.ngZoneEventCoalescing||!1,ngZoneRunCoalescing:t&&t.ngZoneRunCoalescing||!1}),r=[{provide:Cs,useValue:n}];return n.run(()=>{const t=Qr.create({providers:r,parent:this.injector,name:e.moduleType.name}),a=e.create(t),s=a.injector.get(Nn,null);if(!s)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return n.runOutsideAngular(()=>{const e=n.onError.subscribe({next:e=>{s.handleError(e)}});a.onDestroy(()=>{qs(this._modules,a),e.unsubscribe()})}),function(e,t,n){try{const r=n();return ca(r)?r.catch(n=>{throw t.runOutsideAngular(()=>e.handleError(n)),n}):r}catch(r){throw t.runOutsideAngular(()=>e.handleError(r)),r}}(s,n,()=>{const e=a.injector.get(us);return e.runInitializers(),e.donePromise.then(()=>(ya(a.injector.get(bs,ba)||ba),this._moduleDoBootstrap(a),a))})})}bootstrapModule(e,t=[]){const n=Hs({},t);return function(e,t,n){const r=new as(n);return Promise.resolve(r)}(0,0,e).then(e=>this.bootstrapModuleFactory(e,n))}_moduleDoBootstrap(e){const t=e.injector.get(Ks);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(e=>t.bootstrap(e));else{if(!e.instance.ngDoBootstrap)throw new Error(`The module ${U(e.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);e.instance.ngDoBootstrap(t)}this._modules.push(e)}onDestroy(e){this._destroyListeners.push(e)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(e=>e.destroy()),this._destroyListeners.forEach(e=>e()),this._destroyed=!0}get destroyed(){return this._destroyed}}return e.\u0275fac=function(t){return new(t||e)(gn(Qr))},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();function Hs(e,t){return Array.isArray(t)?t.reduce(Hs,e):Object.assign(Object.assign({},e),t)}let Ks=(()=>{class e{constructor(e,t,n,r,a){this._zone=e,this._injector=t,this._exceptionHandler=n,this._componentFactoryResolver=r,this._initStatus=a,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const s=new y(e=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{e.next(this._stable),e.complete()})}),i=new y(e=>{let t;this._zone.runOutsideAngular(()=>{t=this._zone.onStable.subscribe(()=>{Cs.assertNotInAngularZone(),Ts(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,e.next(!0))})})});const n=this._zone.onUnstable.subscribe(()=>{Cs.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{e.next(!1)}))});return()=>{t.unsubscribe(),n.unsubscribe()}});this.isStable=function(...e){let t=Number.POSITIVE_INFINITY,n=null,r=e[e.length-1];var a;return(a=r)&&"function"==typeof a.schedule?(n=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(t=e.pop())):"number"==typeof r&&(t=e.pop()),null===n&&1===e.length&&e[0]instanceof y?e[0]:function(e=Number.POSITIVE_INFINITY){return $(g,e)}(t)(function(e,t){return t?function(e,t){return new y(n=>{const r=new d;let a=0;return r.add(t.schedule(function(){a!==e.length?(n.next(e[a++]),n.closed||r.add(this.schedule())):n.complete()})),r})}(e,t):new y(T(e))}(e,n))}(s,i.pipe(e=>{return D()((t=V,function(e){let n;n="function"==typeof t?t:function(){return t};const r=Object.create(e,P);return r.source=e,r.subjectFactory=n,r})(e));var t}))}bootstrap(e,t){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=e instanceof xa?e:this._componentFactoryResolver.resolveComponentFactory(e),this.componentTypes.push(n.componentType);const r=n.isBoundToModule?void 0:this._injector.get(Xa),a=n.create(Qr.NULL,[],t||n.selector,r),s=a.location.nativeElement,i=a.injector.get(Fs,null),o=i&&a.injector.get(Ds);return i&&o&&o.registerApplication(s,i),a.onDestroy(()=>{this.detachView(a.hostView),qs(this.components,a),o&&o.unregisterApplication(s)}),this._loadComponent(a),a}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let e of this._views)e.detectChanges()}catch(e){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(e))}finally{this._runningTick=!1}}attachView(e){const t=e;this._views.push(t),t.attachToAppRef(this)}detachView(e){const t=e;qs(this._views,t),t.detachFromAppRef()}_loadComponent(e){this.attachView(e.hostView),this.tick(),this.components.push(e),this._injector.get(fs,[]).concat(this._bootstrapListeners).forEach(t=>t(e))}ngOnDestroy(){this._views.slice().forEach(e=>e.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}get viewCount(){return this._views.length}}return e.\u0275fac=function(t){return new(t||e)(gn(Cs),gn(Qr),gn(Nn),gn(wa),gn(us))},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();function qs(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}const Xs=Ws(null,"core",[{provide:ps,useValue:"unknown"},{provide:Gs,deps:[Qr]},{provide:Ds,deps:[]},{provide:ms,deps:[]}]),Zs=[{provide:Ks,useClass:Ks,deps:[Cs,Qr,Nn,wa,us]},{provide:Qa,deps:[Cs],useFactory:function(e){let t=[];return e.onStable.subscribe(()=>{for(;t.length;)t.pop()()}),function(e){t.push(e)}}},{provide:us,useClass:us,deps:[[new wn,os]]},{provide:Is,useClass:Is,deps:[]},ls,{provide:Ba,useFactory:function(){return Ka},deps:[]},{provide:Wa,useFactory:function(){return qa},deps:[]},{provide:bs,useFactory:function(e){return ya(e=e||"undefined"!=typeof $localize&&$localize.locale||ba),e},deps:[[new vn(bs),new wn,new On]]},{provide:gs,useValue:"USD"}];let Ys=(()=>{class e{constructor(e){}}return e.\u0275fac=function(t){return new(t||e)(gn(Ks))},e.\u0275mod=$e({type:e}),e.\u0275inj=ee({providers:Zs}),e})(),Js=null;function Qs(){return Js}const ei=new on("DocumentToken");var ti=function(e){return e[e.Zero=0]="Zero",e[e.One=1]="One",e[e.Two=2]="Two",e[e.Few=3]="Few",e[e.Many=4]="Many",e[e.Other=5]="Other",e}({});class ni{}let ri=(()=>{class e extends ni{constructor(e){super(),this.locale=e}getPluralCategory(e,t){switch(function(e){return function(e){const t=function(e){return e.toLowerCase().replace(/_/g,"-")}(e);let n=fa(t);if(n)return n;const r=t.split("-")[0];if(n=fa(r),n)return n;if("en"===r)return ha;throw new Error(`Missing locale data for the locale "${e}".`)}(e)[ma.PluralCase]}(t||this.locale)(e)){case ti.Zero:return"zero";case ti.One:return"one";case ti.Two:return"two";case ti.Few:return"few";case ti.Many:return"many";default:return"other"}}}return e.\u0275fac=function(t){return new(t||e)(gn(bs))},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})(),ai=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=$e({type:e}),e.\u0275inj=ee({providers:[{provide:ni,useClass:ri}]}),e})();class si extends class extends class{}{constructor(){super()}supportsDOMEvents(){return!0}}{static makeCurrent(){var e;e=new si,Js||(Js=e)}getProperty(e,t){return e[t]}log(e){window.console&&window.console.log&&window.console.log(e)}logGroup(e){window.console&&window.console.group&&window.console.group(e)}logGroupEnd(){window.console&&window.console.groupEnd&&window.console.groupEnd()}onAndCancel(e,t,n){return e.addEventListener(t,n,!1),()=>{e.removeEventListener(t,n,!1)}}dispatchEvent(e,t){e.dispatchEvent(t)}remove(e){return e.parentNode&&e.parentNode.removeChild(e),e}getValue(e){return e.value}createElement(e,t){return(t=t||this.getDefaultDocument()).createElement(e)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(e){return e.nodeType===Node.ELEMENT_NODE}isShadowRoot(e){return e instanceof DocumentFragment}getGlobalEventTarget(e,t){return"window"===t?window:"document"===t?e:"body"===t?e.body:null}getHistory(){return window.history}getLocation(){return window.location}getBaseHref(e){const t=oi||(oi=document.querySelector("base"),oi)?oi.getAttribute("href"):null;return null==t?null:(n=t,ii||(ii=document.createElement("a")),ii.setAttribute("href",n),"/"===ii.pathname.charAt(0)?ii.pathname:"/"+ii.pathname);var n}resetBaseElement(){oi=null}getUserAgent(){return window.navigator.userAgent}performanceNow(){return window.performance&&window.performance.now?window.performance.now():(new Date).getTime()}supportsCookies(){return!0}getCookie(e){return function(e,t){t=encodeURIComponent(t);for(const n of e.split(";")){const e=n.indexOf("="),[r,a]=-1==e?[n,""]:[n.slice(0,e),n.slice(e+1)];if(r.trim()===t)return decodeURIComponent(a)}return null}(document.cookie,e)}}let ii,oi=null;const ui=new on("TRANSITION_ID"),ci=[{provide:os,useFactory:function(e,t,n){return()=>{n.get(us).donePromise.then(()=>{const n=Qs();Array.prototype.slice.apply(t.querySelectorAll("style[ng-transition]")).filter(t=>t.getAttribute("ng-transition")===e).forEach(e=>n.remove(e))})}},deps:[ui,ei,Qr],multi:!0}];class li{static init(){var e;e=new li,Ls=e}addToWindow(e){xe.getAngularTestability=(t,n=!0)=>{const r=e.findTestabilityInTree(t,n);if(null==r)throw new Error("Could not find testability for element.");return r},xe.getAllAngularTestabilities=()=>e.getAllTestabilities(),xe.getAllAngularRootElements=()=>e.getAllRootElements(),xe.frameworkStabilizers||(xe.frameworkStabilizers=[]),xe.frameworkStabilizers.push(e=>{const t=xe.getAllAngularTestabilities();let n=t.length,r=!1;const a=function(t){r=r||t,n--,0==n&&e(r)};t.forEach(function(e){e.whenStable(a)})})}findTestabilityInTree(e,t,n){if(null==t)return null;const r=e.getTestability(t);return null!=r?r:n?Qs().isShadowRoot(t)?this.findTestabilityInTree(e,t.host,!0):this.findTestabilityInTree(e,t.parentElement,!0):null}}const di=new on("EventManagerPlugins");let hi=(()=>{class e{constructor(e,t){this._zone=t,this._eventNameToPlugin=new Map,e.forEach(e=>e.manager=this),this._plugins=e.slice().reverse()}addEventListener(e,t,n){return this._findPluginFor(t).addEventListener(e,t,n)}addGlobalEventListener(e,t,n){return this._findPluginFor(t).addGlobalEventListener(e,t,n)}getZone(){return this._zone}_findPluginFor(e){const t=this._eventNameToPlugin.get(e);if(t)return t;const n=this._plugins;for(let r=0;r<n.length;r++){const t=n[r];if(t.supports(e))return this._eventNameToPlugin.set(e,t),t}throw new Error(`No event manager plugin found for event ${e}`)}}return e.\u0275fac=function(t){return new(t||e)(gn(di),gn(Cs))},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();class pi{constructor(e){this._doc=e}addGlobalEventListener(e,t,n){const r=Qs().getGlobalEventTarget(this._doc,e);if(!r)throw new Error(`Unsupported event target ${r} for event ${t}`);return this.addEventListener(r,t,n)}}let fi=(()=>{class e{constructor(){this._stylesSet=new Set}addStyles(e){const t=new Set;e.forEach(e=>{this._stylesSet.has(e)||(this._stylesSet.add(e),t.add(e))}),this.onStylesAdded(t)}onStylesAdded(e){}getAllStyles(){return Array.from(this._stylesSet)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})(),mi=(()=>{class e extends fi{constructor(e){super(),this._doc=e,this._hostNodes=new Map,this._hostNodes.set(e.head,[])}_addStylesToHost(e,t,n){e.forEach(e=>{const r=this._doc.createElement("style");r.textContent=e,n.push(t.appendChild(r))})}addHost(e){const t=[];this._addStylesToHost(this._stylesSet,e,t),this._hostNodes.set(e,t)}removeHost(e){const t=this._hostNodes.get(e);t&&t.forEach(bi),this._hostNodes.delete(e)}onStylesAdded(e){this._hostNodes.forEach((t,n)=>{this._addStylesToHost(e,n,t)})}ngOnDestroy(){this._hostNodes.forEach(e=>e.forEach(bi))}}return e.\u0275fac=function(t){return new(t||e)(gn(ei))},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();function bi(e){Qs().remove(e)}const gi={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},yi=/%COMP%/g;function xi(e,t,n){for(let r=0;r<t.length;r++){let a=t[r];Array.isArray(a)?xi(e,a,n):(a=a.replace(yi,e),n.push(a))}return n}function vi(e){return t=>{if("__ngUnwrap__"===t)return e;!1===e(t)&&(t.preventDefault(),t.returnValue=!1)}}let wi=(()=>{class e{constructor(e,t,n){this.eventManager=e,this.sharedStylesHost=t,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new Oi(e)}createRenderer(e,t){if(!e||!t)return this.defaultRenderer;switch(t.encapsulation){case fe.Emulated:{let n=this.rendererByCompId.get(t.id);return n||(n=new ki(this.eventManager,this.sharedStylesHost,t,this.appId),this.rendererByCompId.set(t.id,n)),n.applyToHost(e),n}case 1:case fe.ShadowDom:return new Si(this.eventManager,this.sharedStylesHost,e,t);default:if(!this.rendererByCompId.has(t.id)){const e=xi(t.id,t.styles,[]);this.sharedStylesHost.addStyles(e),this.rendererByCompId.set(t.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return e.\u0275fac=function(t){return new(t||e)(gn(hi),gn(mi),gn(cs))},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();class Oi{constructor(e){this.eventManager=e,this.data=Object.create(null)}destroy(){}createElement(e,t){return t?document.createElementNS(gi[t]||t,e):document.createElement(e)}createComment(e){return document.createComment(e)}createText(e){return document.createTextNode(e)}appendChild(e,t){e.appendChild(t)}insertBefore(e,t,n){e&&e.insertBefore(t,n)}removeChild(e,t){e&&e.removeChild(t)}selectRootElement(e,t){let n="string"==typeof e?document.querySelector(e):e;if(!n)throw new Error(`The selector "${e}" did not match any elements`);return t||(n.textContent=""),n}parentNode(e){return e.parentNode}nextSibling(e){return e.nextSibling}setAttribute(e,t,n,r){if(r){t=r+":"+t;const a=gi[r];a?e.setAttributeNS(a,t,n):e.setAttribute(t,n)}else e.setAttribute(t,n)}removeAttribute(e,t,n){if(n){const r=gi[n];r?e.removeAttributeNS(r,t):e.removeAttribute(`${n}:${t}`)}else e.removeAttribute(t)}addClass(e,t){e.classList.add(t)}removeClass(e,t){e.classList.remove(t)}setStyle(e,t,n,r){r&(En.DashCase|En.Important)?e.style.setProperty(t,n,r&En.Important?"important":""):e.style[t]=n}removeStyle(e,t,n){n&En.DashCase?e.style.removeProperty(t):e.style[t]=""}setProperty(e,t,n){e[t]=n}setValue(e,t){e.nodeValue=t}listen(e,t,n){return"string"==typeof e?this.eventManager.addGlobalEventListener(e,t,vi(n)):this.eventManager.addEventListener(e,t,vi(n))}}class ki extends Oi{constructor(e,t,n,r){super(e),this.component=n;const a=xi(r+"-"+n.id,n.styles,[]);t.addStyles(a),this.contentAttr="_ngcontent-%COMP%".replace(yi,r+"-"+n.id),this.hostAttr="_nghost-%COMP%".replace(yi,r+"-"+n.id)}applyToHost(e){super.setAttribute(e,this.hostAttr,"")}createElement(e,t){const n=super.createElement(e,t);return super.setAttribute(n,this.contentAttr,""),n}}class Si extends Oi{constructor(e,t,n,r){super(e),this.sharedStylesHost=t,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const a=xi(r.id,r.styles,[]);for(let s=0;s<a.length;s++){const e=document.createElement("style");e.textContent=a[s],this.shadowRoot.appendChild(e)}}nodeOrShadowRoot(e){return e===this.hostEl?this.shadowRoot:e}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(e,t){return super.appendChild(this.nodeOrShadowRoot(e),t)}insertBefore(e,t,n){return super.insertBefore(this.nodeOrShadowRoot(e),t,n)}removeChild(e,t){return super.removeChild(this.nodeOrShadowRoot(e),t)}parentNode(e){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(e)))}}let Ii=(()=>{class e extends pi{constructor(e){super(e)}supports(e){return!0}addEventListener(e,t,n){return e.addEventListener(t,n,!1),()=>this.removeEventListener(e,t,n)}removeEventListener(e,t,n){return e.removeEventListener(t,n)}}return e.\u0275fac=function(t){return new(t||e)(gn(ei))},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();const Ni=["alt","control","meta","shift"],Ti={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},Ci={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},ji={alt:e=>e.altKey,control:e=>e.ctrlKey,meta:e=>e.metaKey,shift:e=>e.shiftKey};let Ei=(()=>{class e extends pi{constructor(e){super(e)}supports(t){return null!=e.parseEventName(t)}addEventListener(t,n,r){const a=e.parseEventName(n),s=e.eventCallback(a.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>Qs().onAndCancel(t,a.domEventName,s))}static parseEventName(t){const n=t.toLowerCase().split("."),r=n.shift();if(0===n.length||"keydown"!==r&&"keyup"!==r)return null;const a=e._normalizeKey(n.pop());let s="";if(Ni.forEach(e=>{const t=n.indexOf(e);t>-1&&(n.splice(t,1),s+=e+".")}),s+=a,0!=n.length||0===a.length)return null;const i={};return i.domEventName=r,i.fullKey=s,i}static getEventFullKey(e){let t="",n=function(e){let t=e.key;if(null==t){if(t=e.keyIdentifier,null==t)return"Unidentified";t.startsWith("U+")&&(t=String.fromCharCode(parseInt(t.substring(2),16)),3===e.location&&Ci.hasOwnProperty(t)&&(t=Ci[t]))}return Ti[t]||t}(e);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),Ni.forEach(r=>{r!=n&&(0,ji[r])(e)&&(t+=r+".")}),t+=n,t}static eventCallback(t,n,r){return a=>{e.getEventFullKey(a)===t&&r.runGuarded(()=>n(a))}}static _normalizeKey(e){switch(e){case"esc":return"escape";default:return e}}}return e.\u0275fac=function(t){return new(t||e)(gn(ei))},e.\u0275prov=Q({token:e,factory:e.\u0275fac}),e})();const Ai=Ws(Xs,"browser",[{provide:ps,useValue:"browser"},{provide:hs,useValue:function(){si.makeCurrent(),li.init()},multi:!0},{provide:ei,useFactory:function(){return function(e){qe=e}(document),document},deps:[]}]),_i=[[],{provide:Pr,useValue:"root"},{provide:Nn,useFactory:function(){return new Nn},deps:[]},{provide:di,useClass:Ii,multi:!0,deps:[ei,Cs,ps]},{provide:di,useClass:Ei,multi:!0,deps:[ei]},[],{provide:wi,useClass:wi,deps:[hi,mi,cs]},{provide:Na,useExisting:wi},{provide:fi,useExisting:mi},{provide:mi,useClass:mi,deps:[ei]},{provide:Fs,useClass:Fs,deps:[Cs]},{provide:hi,useClass:hi,deps:[di,Cs]},[]];let $i=(()=>{class e{constructor(e){if(e)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(t){return{ngModule:e,providers:[{provide:cs,useValue:t.appId},{provide:ui,useExisting:cs},ci]}}}return e.\u0275fac=function(t){return new(t||e)(gn(e,12))},e.\u0275mod=$e({type:e}),e.\u0275inj=ee({providers:_i,imports:[ai,Ys]}),e})();function Ri(e,t,n,r){return new(n||(n=Promise))(function(a,s){function i(e){try{u(r.next(e))}catch(t){s(t)}}function o(e){try{u(r.throw(e))}catch(t){s(t)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})}"undefined"!=typeof window&&window;var Fi=n("CA5I"),Di=(n("7n2I"),n("ix3U"),n("DP+o"));let Mi=(()=>{class e{constructor(){this.count=0,this.URL="https://teachablemachine.withgoogle.com/models/onuy11n_f/",this.detectFrame=(e,t,n)=>{t.detect(e).then(r=>Ri(this,void 0,void 0,function*(){console.log(r);var a=yield n.predict(e).then(e=>(console.log(e),e));this.renderPredictions(r,a),requestAnimationFrame(()=>{this.detectFrame(e,t,n)})}))},this.renderPredictions=(e,t)=>{const n=document.getElementById("canvas"),r=n.getContext("2d");n.width=640,n.height=480,r.clearRect(0,0,r.canvas.width,r.canvas.height);const a="16px sans-serif";r.font=a,r.textBaseline="top",r.drawImage(this.video,0,0,640,480),e.forEach(e=>{r.beginPath(),r.moveTo(0,n.height/2),r.lineTo(n.width,n.height/2),r.lineWidth=2,r.strokeStyle="red",r.stroke()}),e.forEach(e=>{if("person"==e.class||"bottle"==e.class){const n=e.bbox[0],s=e.bbox[1],i=e.bbox[2],o=e.bbox[3];r.strokeStyle="#00FF00",r.lineWidth=2,r.strokeRect(n,s,i,o),r.fillStyle="#00FF00";const u=r.measureText(e.class+Math.round(100*e.score)+"%").width;t.forEach(e=>{if(e.className){const t=r.measureText(e.className+Math.round(100*e.probability)+"%").width,i=parseInt(a,10);r.fillRect(n,s+15,t+8,i+8)}});const c=parseInt(a,10);r.fillRect(n,s,u+4,c+4)}}),e.forEach(e=>{if("person"==e.class||"bottle"==e.class){const n=e.bbox[0],a=e.bbox[1];r.fillStyle="#000000";const s=e.class.charAt(0).toUpperCase()+e.class.slice(1);r.fillText(s+" "+Math.round(100*e.score)+"%",n,a),t.forEach(e=>{e.probability>.5&&r.fillText(e.className+" "+Math.round(100*e.probability)+"%",n,a+15)})}})}}ngOnInit(){this.webcam_init()}predictWithCocoModel(){return Ri(this,void 0,void 0,function*(){const e=yield Di.load(),t=this.URL+"model.json",n=this.URL+"metadata.json",r=yield Fi.load(t,n);this.detectFrame(this.video,e,r),console.log("model loaded")})}webcam_init(){this.video=document.getElementById("vid"),navigator.mediaDevices.getUserMedia({video:{width:640,height:480},audio:!1}).then(e=>{console.log("stream",e),this.video.srcObject=e,this.video.addEventListener("loadeddata",e=>{console.log(e),setTimeout(()=>{console.log("start"),this.video.play()},2e3)}),this.predictWithCocoModel()}).catch(e=>{console.log("error Webcam: "+e)})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=(t={type:e,selectors:[["app-root"]],decls:5,vars:1,consts:[[2,"text-align","center"],["hidden","","id","vid","width","640","height","480"],["id","canvas"]],template:function(e,t){1&e&&(ia(0,"div",0),ia(1,"h1"),function(e,t=""){const n=ot(),r=ut(),a=e+Me,s=r.firstCreatePass?dr(r,a,1,t,null):r.data[a],i=n[a]=function(e,t){return Xe(e)?e.createText(t):e.createTextNode(t)}(n[11],t);Wn(r,n,i,s),dt(s,!1)}(2),oa(),ua(3,"video",1),ua(4,"canvas",2),oa()),2&e&&(2,ur(ut(),ot(),Nt()+2,pt()),la("Count : ",t.count,""))},styles:[""]},he(()=>{const e={},n={type:t.type,providersResolver:null,decls:t.decls,vars:t.vars,factory:null,template:t.template||null,consts:t.consts||null,ngContentSelectors:t.ngContentSelectors,hostBindings:t.hostBindings||null,hostVars:t.hostVars||0,hostAttrs:t.hostAttrs||null,contentQueries:t.contentQueries||null,declaredInputs:e,inputs:null,outputs:null,exportAs:t.exportAs||null,onPush:t.changeDetection===pe.OnPush,directiveDefs:null,pipeDefs:null,selectors:t.selectors||we,viewQuery:t.viewQuery||null,features:t.features||null,data:t.data||{},encapsulation:t.encapsulation||fe.Emulated,id:"c",styles:t.styles||we,_:null,setInput:null,schemas:t.schemas||null,tView:null},r=t.directives,a=t.features,s=t.pipes;return n.id+=je++,n.inputs=Re(t.inputs,e),n.outputs=Re(t.outputs),a&&a.forEach(e=>e(n)),n.directiveDefs=r?()=>("function"==typeof r?r():r).map(Ee):null,n.pipeDefs=s?()=>("function"==typeof s?s():s).map(Ae):null,n})),e;var t})(),zi=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=$e({type:e,bootstrap:[Mi]}),e.\u0275inj=ee({providers:[],imports:[[$i]]}),e})();(function(){if(Bs)throw new Error("Cannot enable prod mode after platform setup.");Ps=!1})(),Ai().bootstrapModule(zi).catch(e=>console.error(e))},zUqB:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e){return(t,n,a)=>{const s=r.util.getTypedArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)s[r]=e(t[r],a);return s}}},zhpf:function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",function(){return l.AdadeltaOptimizer}),n.d(t,"AdagradOptimizer",function(){return l.AdagradOptimizer}),n.d(t,"AdamOptimizer",function(){return l.AdamOptimizer}),n.d(t,"AdamaxOptimizer",function(){return l.AdamaxOptimizer}),n.d(t,"MomentumOptimizer",function(){return l.MomentumOptimizer}),n.d(t,"Optimizer",function(){return l.Optimizer}),n.d(t,"OptimizerConstructors",function(){return l.OptimizerConstructors}),n.d(t,"RMSPropOptimizer",function(){return l.RMSPropOptimizer}),n.d(t,"SGDOptimizer",function(){return l.SGDOptimizer}),n.d(t,"Tensor",function(){return l.Tensor}),n.d(t,"TensorBuffer",function(){return l.TensorBuffer}),n.d(t,"Variable",function(){return l.Variable}),n.d(t,"Rank",function(){return l.Rank}),n.d(t,"sumOutType",function(){return l.sumOutType}),n.d(t,"upcastType",function(){return l.upcastType}),n.d(t,"abs",function(){return l.abs}),n.d(t,"acos",function(){return l.acos}),n.d(t,"acosh",function(){return l.acosh}),n.d(t,"add",function(){return l.add}),n.d(t,"addN",function(){return l.addN}),n.d(t,"all",function(){return l.all}),n.d(t,"any",function(){return l.any}),n.d(t,"argMax",function(){return l.argMax}),n.d(t,"argMin",function(){return l.argMin}),n.d(t,"asin",function(){return l.asin}),n.d(t,"asinh",function(){return l.asinh}),n.d(t,"atan",function(){return l.atan}),n.d(t,"atan2",function(){return l.atan2}),n.d(t,"atanh",function(){return l.atanh}),n.d(t,"avgPool",function(){return l.avgPool}),n.d(t,"avgPool3d",function(){return l.avgPool3d}),n.d(t,"basicLSTMCell",function(){return l.basicLSTMCell}),n.d(t,"batchToSpaceND",function(){return l.batchToSpaceND}),n.d(t,"batchNorm",function(){return l.batchNorm}),n.d(t,"batchNorm2d",function(){return l.batchNorm2d}),n.d(t,"batchNorm3d",function(){return l.batchNorm3d}),n.d(t,"batchNorm4d",function(){return l.batchNorm4d}),n.d(t,"bincount",function(){return l.bincount}),n.d(t,"broadcastArgs",function(){return l.broadcastArgs}),n.d(t,"broadcastTo",function(){return l.broadcastTo}),n.d(t,"buffer",function(){return l.buffer}),n.d(t,"cast",function(){return l.cast}),n.d(t,"ceil",function(){return l.ceil}),n.d(t,"clipByValue",function(){return l.clipByValue}),n.d(t,"clone",function(){return l.clone}),n.d(t,"complex",function(){return l.complex}),n.d(t,"concat",function(){return l.concat}),n.d(t,"concat1d",function(){return l.concat1d}),n.d(t,"concat2d",function(){return l.concat2d}),n.d(t,"concat3d",function(){return l.concat3d}),n.d(t,"concat4d",function(){return l.concat4d}),n.d(t,"conv1d",function(){return l.conv1d}),n.d(t,"conv2d",function(){return l.conv2d}),n.d(t,"conv2dTranspose",function(){return l.conv2dTranspose}),n.d(t,"conv3d",function(){return l.conv3d}),n.d(t,"conv3dTranspose",function(){return l.conv3dTranspose}),n.d(t,"cos",function(){return l.cos}),n.d(t,"cosh",function(){return l.cosh}),n.d(t,"cumprod",function(){return l.cumprod}),n.d(t,"cumsum",function(){return l.cumsum}),n.d(t,"denseBincount",function(){return l.denseBincount}),n.d(t,"depthToSpace",function(){return l.depthToSpace}),n.d(t,"depthwiseConv2d",function(){return l.depthwiseConv2d}),n.d(t,"diag",function(){return l.diag}),n.d(t,"dilation2d",function(){return l.dilation2d}),n.d(t,"div",function(){return l.div}),n.d(t,"divNoNan",function(){return l.divNoNan}),n.d(t,"dot",function(){return l.dot}),n.d(t,"einsum",function(){return l.einsum}),n.d(t,"elu",function(){return l.elu}),n.d(t,"equal",function(){return l.equal}),n.d(t,"erf",function(){return l.erf}),n.d(t,"euclideanNorm",function(){return l.euclideanNorm}),n.d(t,"exp",function(){return l.exp}),n.d(t,"expandDims",function(){return l.expandDims}),n.d(t,"expm1",function(){return l.expm1}),n.d(t,"eye",function(){return l.eye}),n.d(t,"fill",function(){return l.fill}),n.d(t,"floor",function(){return l.floor}),n.d(t,"floorDiv",function(){return l.floorDiv}),n.d(t,"gather",function(){return l.gather}),n.d(t,"greater",function(){return l.greater}),n.d(t,"greaterEqual",function(){return l.greaterEqual}),n.d(t,"imag",function(){return l.imag}),n.d(t,"isFinite",function(){return l.isFinite}),n.d(t,"isInf",function(){return l.isInf}),n.d(t,"isNaN",function(){return l.isNaN}),n.d(t,"leakyRelu",function(){return l.leakyRelu}),n.d(t,"less",function(){return l.less}),n.d(t,"lessEqual",function(){return l.lessEqual}),n.d(t,"linspace",function(){return l.linspace}),n.d(t,"localResponseNormalization",function(){return l.localResponseNormalization}),n.d(t,"log",function(){return l.log}),n.d(t,"log1p",function(){return l.log1p}),n.d(t,"logSigmoid",function(){return l.logSigmoid}),n.d(t,"logSoftmax",function(){return l.logSoftmax}),n.d(t,"logSumExp",function(){return l.logSumExp}),n.d(t,"logicalAnd",function(){return l.logicalAnd}),n.d(t,"logicalNot",function(){return l.logicalNot}),n.d(t,"logicalOr",function(){return l.logicalOr}),n.d(t,"logicalXor",function(){return l.logicalXor}),n.d(t,"lowerBound",function(){return l.lowerBound}),n.d(t,"matMul",function(){return l.matMul}),n.d(t,"max",function(){return l.max}),n.d(t,"maxPool",function(){return l.maxPool}),n.d(t,"maxPool3d",function(){return l.maxPool3d}),n.d(t,"maxPoolWithArgmax",function(){return l.maxPoolWithArgmax}),n.d(t,"maximum",function(){return l.maximum}),n.d(t,"mean",function(){return l.mean}),n.d(t,"meshgrid",function(){return l.meshgrid}),n.d(t,"min",function(){return l.min}),n.d(t,"minimum",function(){return l.minimum}),n.d(t,"mirrorPad",function(){return l.mirrorPad}),n.d(t,"mod",function(){return l.mod}),n.d(t,"moments",function(){return l.moments}),n.d(t,"mul",function(){return l.mul}),n.d(t,"multiRNNCell",function(){return l.multiRNNCell}),n.d(t,"multinomial",function(){return l.multinomial}),n.d(t,"neg",function(){return l.neg}),n.d(t,"notEqual",function(){return l.notEqual}),n.d(t,"oneHot",function(){return l.oneHot}),n.d(t,"ones",function(){return l.ones}),n.d(t,"onesLike",function(){return l.onesLike}),n.d(t,"outerProduct",function(){return l.outerProduct}),n.d(t,"pad",function(){return l.pad}),n.d(t,"pad1d",function(){return l.pad1d}),n.d(t,"pad2d",function(){return l.pad2d}),n.d(t,"pad3d",function(){return l.pad3d}),n.d(t,"pad4d",function(){return l.pad4d}),n.d(t,"pool",function(){return l.pool}),n.d(t,"pow",function(){return l.pow}),n.d(t,"prelu",function(){return l.prelu}),n.d(t,"print",function(){return l.print}),n.d(t,"prod",function(){return l.prod}),n.d(t,"rand",function(){return l.rand}),n.d(t,"randomGamma",function(){return l.randomGamma}),n.d(t,"randomNormal",function(){return l.randomNormal}),n.d(t,"randomUniform",function(){return l.randomUniform}),n.d(t,"range",function(){return l.range}),n.d(t,"real",function(){return l.real}),n.d(t,"reciprocal",function(){return l.reciprocal}),n.d(t,"relu",function(){return l.relu}),n.d(t,"relu6",function(){return l.relu6}),n.d(t,"reshape",function(){return l.reshape}),n.d(t,"reverse",function(){return l.reverse}),n.d(t,"reverse1d",function(){return l.reverse1d}),n.d(t,"reverse2d",function(){return l.reverse2d}),n.d(t,"reverse3d",function(){return l.reverse3d}),n.d(t,"reverse4d",function(){return l.reverse4d}),n.d(t,"round",function(){return l.round}),n.d(t,"rsqrt",function(){return l.rsqrt}),n.d(t,"scalar",function(){return l.scalar}),n.d(t,"selu",function(){return l.selu}),n.d(t,"separableConv2d",function(){return l.separableConv2d}),n.d(t,"setdiff1dAsync",function(){return l.setdiff1dAsync}),n.d(t,"sigmoid",function(){return l.sigmoid}),n.d(t,"sign",function(){return l.sign}),n.d(t,"sin",function(){return l.sin}),n.d(t,"sinh",function(){return l.sinh}),n.d(t,"slice",function(){return l.slice}),n.d(t,"slice1d",function(){return l.slice1d}),n.d(t,"slice2d",function(){return l.slice2d}),n.d(t,"slice3d",function(){return l.slice3d}),n.d(t,"slice4d",function(){return l.slice4d}),n.d(t,"softmax",function(){return l.softmax}),n.d(t,"softplus",function(){return l.softplus}),n.d(t,"spaceToBatchND",function(){return l.spaceToBatchND}),n.d(t,"fft",function(){return l.fft}),n.d(t,"ifft",function(){return l.ifft}),n.d(t,"irfft",function(){return l.irfft}),n.d(t,"rfft",function(){return l.rfft}),n.d(t,"split",function(){return l.split}),n.d(t,"sqrt",function(){return l.sqrt}),n.d(t,"square",function(){return l.square}),n.d(t,"squaredDifference",function(){return l.squaredDifference}),n.d(t,"squeeze",function(){return l.squeeze}),n.d(t,"stack",function(){return l.stack}),n.d(t,"step",function(){return l.step}),n.d(t,"stridedSlice",function(){return l.stridedSlice}),n.d(t,"sub",function(){return l.sub}),n.d(t,"sum",function(){return l.sum}),n.d(t,"tan",function(){return l.tan}),n.d(t,"tanh",function(){return l.tanh}),n.d(t,"tensor",function(){return l.tensor}),n.d(t,"tensor1d",function(){return l.tensor1d}),n.d(t,"tensor2d",function(){return l.tensor2d}),n.d(t,"tensor3d",function(){return l.tensor3d}),n.d(t,"tensor4d",function(){return l.tensor4d}),n.d(t,"tensor5d",function(){return l.tensor5d}),n.d(t,"tensor6d",function(){return l.tensor6d}),n.d(t,"tile",function(){return l.tile}),n.d(t,"topk",function(){return l.topk}),n.d(t,"truncatedNormal",function(){return l.truncatedNormal}),n.d(t,"unique",function(){return l.unique}),n.d(t,"unsortedSegmentSum",function(){return l.unsortedSegmentSum}),n.d(t,"unstack",function(){return l.unstack}),n.d(t,"upperBound",function(){return l.upperBound}),n.d(t,"variable",function(){return l.variable}),n.d(t,"where",function(){return l.where}),n.d(t,"whereAsync",function(){return l.whereAsync}),n.d(t,"zeros",function(){return l.zeros}),n.d(t,"zerosLike",function(){return l.zerosLike}),n.d(t,"booleanMaskAsync",function(){return l.booleanMaskAsync}),n.d(t,"transpose",function(){return l.transpose}),n.d(t,"norm",function(){return l.norm}),n.d(t,"movingAverage",function(){return l.movingAverage}),n.d(t,"scatterND",function(){return l.scatterND}),n.d(t,"searchSorted",function(){return l.searchSorted}),n.d(t,"sparseToDense",function(){return l.sparseToDense}),n.d(t,"gatherND",function(){return l.gatherND}),n.d(t,"dropout",function(){return l.dropout}),n.d(t,"enclosingPowerOfTwo",function(){return l.enclosingPowerOfTwo}),n.d(t,"cosineWindow",function(){return l.cosineWindow}),n.d(t,"inTopKAsync",function(){return l.inTopKAsync}),n.d(t,"op",function(){return l.op}),n.d(t,"OP_SCOPE_SUFFIX",function(){return l.OP_SCOPE_SUFFIX}),n.d(t,"image",function(){return l.image}),n.d(t,"linalg",function(){return l.linalg}),n.d(t,"losses",function(){return l.losses}),n.d(t,"spectral",function(){return l.spectral}),n.d(t,"fused",function(){return l.fused}),n.d(t,"signal",function(){return l.signal}),n.d(t,"sparse",function(){return l.sparse}),n.d(t,"string",function(){return l.string}),n.d(t,"Reduction",function(){return l.Reduction}),n.d(t,"train",function(){return l.train}),n.d(t,"enableProdMode",function(){return l.enableProdMode}),n.d(t,"enableDebugMode",function(){return l.enableDebugMode}),n.d(t,"disableDeprecationWarnings",function(){return l.disableDeprecationWarnings}),n.d(t,"deprecationWarn",function(){return l.deprecationWarn}),n.d(t,"disposeVariables",function(){return l.disposeVariables}),n.d(t,"engine",function(){return l.engine}),n.d(t,"memory",function(){return l.memory}),n.d(t,"profile",function(){return l.profile}),n.d(t,"tidy",function(){return l.tidy}),n.d(t,"dispose",function(){return l.dispose}),n.d(t,"keep",function(){return l.keep}),n.d(t,"time",function(){return l.time}),n.d(t,"setBackend",function(){return l.setBackend}),n.d(t,"ready",function(){return l.ready}),n.d(t,"getBackend",function(){return l.getBackend}),n.d(t,"removeBackend",function(){return l.removeBackend}),n.d(t,"findBackend",function(){return l.findBackend}),n.d(t,"findBackendFactory",function(){return l.findBackendFactory}),n.d(t,"registerBackend",function(){return l.registerBackend}),n.d(t,"backend",function(){return l.backend}),n.d(t,"setPlatform",function(){return l.setPlatform}),n.d(t,"getKernel",function(){return l.getKernel}),n.d(t,"getGradient",function(){return l.getGradient}),n.d(t,"getKernelsForBackend",function(){return l.getKernelsForBackend}),n.d(t,"registerKernel",function(){return l.registerKernel}),n.d(t,"registerGradient",function(){return l.registerGradient}),n.d(t,"unregisterKernel",function(){return l.unregisterKernel}),n.d(t,"unregisterGradient",function(){return l.unregisterGradient}),n.d(t,"copyRegisteredKernels",function(){return l.copyRegisteredKernels}),n.d(t,"customGrad",function(){return l.customGrad}),n.d(t,"grad",function(){return l.grad}),n.d(t,"grads",function(){return l.grads}),n.d(t,"valueAndGrad",function(){return l.valueAndGrad}),n.d(t,"valueAndGrads",function(){return l.valueAndGrads}),n.d(t,"variableGrads",function(){return l.variableGrads}),n.d(t,"Environment",function(){return l.Environment}),n.d(t,"env",function(){return l.env}),n.d(t,"ENV",function(){return l.ENV}),n.d(t,"version_core",function(){return l.version_core}),n.d(t,"nextFrame",function(){return l.nextFrame}),n.d(t,"browser",function(){return l.browser}),n.d(t,"io",function(){return l.io}),n.d(t,"math",function(){return l.math}),n.d(t,"serialization",function(){return l.serialization}),n.d(t,"test_util",function(){return l.test_util}),n.d(t,"util",function(){return l.util}),n.d(t,"backend_util",function(){return l.backend_util}),n.d(t,"broadcast_util",function(){return l.broadcast_util}),n.d(t,"tensor_util",function(){return l.tensor_util}),n.d(t,"slice_util",function(){return l.slice_util}),n.d(t,"gather_util",function(){return l.gather_util}),n.d(t,"scatter_util",function(){return l.scatter_util}),n.d(t,"device_util",function(){return l.device_util}),n.d(t,"kernel_impls",function(){return l.kernel_impls}),n.d(t,"KernelBackend",function(){return l.KernelBackend}),n.d(t,"DataStorage",function(){return l.DataStorage}),n.d(t,"Abs",function(){return l.Abs}),n.d(t,"Acos",function(){return l.Acos}),n.d(t,"Acosh",function(){return l.Acosh}),n.d(t,"Add",function(){return l.Add}),n.d(t,"AddN",function(){return l.AddN}),n.d(t,"All",function(){return l.All}),n.d(t,"Any",function(){return l.Any}),n.d(t,"ArgMax",function(){return l.ArgMax}),n.d(t,"ArgMin",function(){return l.ArgMin}),n.d(t,"Asin",function(){return l.Asin}),n.d(t,"Asinh",function(){return l.Asinh}),n.d(t,"Atan",function(){return l.Atan}),n.d(t,"Atanh",function(){return l.Atanh}),n.d(t,"Atan2",function(){return l.Atan2}),n.d(t,"AvgPool",function(){return l.AvgPool}),n.d(t,"AvgPoolGrad",function(){return l.AvgPoolGrad}),n.d(t,"AvgPool3D",function(){return l.AvgPool3D}),n.d(t,"AvgPool3DGrad",function(){return l.AvgPool3DGrad}),n.d(t,"BatchMatMul",function(){return l.BatchMatMul}),n.d(t,"BatchToSpaceND",function(){return l.BatchToSpaceND}),n.d(t,"Bincount",function(){return l.Bincount}),n.d(t,"BroadcastTo",function(){return l.BroadcastTo}),n.d(t,"BroadcastArgs",function(){return l.BroadcastArgs}),n.d(t,"Cast",function(){return l.Cast}),n.d(t,"Ceil",function(){return l.Ceil}),n.d(t,"ClipByValue",function(){return l.ClipByValue}),n.d(t,"Complex",function(){return l.Complex}),n.d(t,"ComplexAbs",function(){return l.ComplexAbs}),n.d(t,"Concat",function(){return l.Concat}),n.d(t,"Conv2D",function(){return l.Conv2D}),n.d(t,"Conv2DBackpropFilter",function(){return l.Conv2DBackpropFilter}),n.d(t,"Conv2DBackpropInput",function(){return l.Conv2DBackpropInput}),n.d(t,"Conv3D",function(){return l.Conv3D}),n.d(t,"Conv3DBackpropFilterV2",function(){return l.Conv3DBackpropFilterV2}),n.d(t,"Conv3DBackpropInputV2",function(){return l.Conv3DBackpropInputV2}),n.d(t,"Cos",function(){return l.Cos}),n.d(t,"Cosh",function(){return l.Cosh}),n.d(t,"Cumprod",function(){return l.Cumprod}),n.d(t,"Cumsum",function(){return l.Cumsum}),n.d(t,"CropAndResize",function(){return l.CropAndResize}),n.d(t,"DenseBincount",function(){return l.DenseBincount}),n.d(t,"DepthToSpace",function(){return l.DepthToSpace}),n.d(t,"DepthwiseConv2dNative",function(){return l.DepthwiseConv2dNative}),n.d(t,"DepthwiseConv2dNativeBackpropFilter",function(){return l.DepthwiseConv2dNativeBackpropFilter}),n.d(t,"DepthwiseConv2dNativeBackpropInput",function(){return l.DepthwiseConv2dNativeBackpropInput}),n.d(t,"Diag",function(){return l.Diag}),n.d(t,"Dilation2D",function(){return l.Dilation2D}),n.d(t,"Dilation2DBackpropInput",function(){return l.Dilation2DBackpropInput}),n.d(t,"Dilation2DBackpropFilter",function(){return l.Dilation2DBackpropFilter}),n.d(t,"RealDiv",function(){return l.RealDiv}),n.d(t,"Einsum",function(){return l.Einsum}),n.d(t,"Elu",function(){return l.Elu}),n.d(t,"EluGrad",function(){return l.EluGrad}),n.d(t,"Erf",function(){return l.Erf}),n.d(t,"Equal",function(){return l.Equal}),n.d(t,"Exp",function(){return l.Exp}),n.d(t,"ExpandDims",function(){return l.ExpandDims}),n.d(t,"Expm1",function(){return l.Expm1}),n.d(t,"FFT",function(){return l.FFT}),n.d(t,"Fill",function(){return l.Fill}),n.d(t,"FlipLeftRight",function(){return l.FlipLeftRight}),n.d(t,"Floor",function(){return l.Floor}),n.d(t,"FloorDiv",function(){return l.FloorDiv}),n.d(t,"FusedBatchNorm",function(){return l.FusedBatchNorm}),n.d(t,"GatherV2",function(){return l.GatherV2}),n.d(t,"GatherNd",function(){return l.GatherNd}),n.d(t,"Greater",function(){return l.Greater}),n.d(t,"GreaterEqual",function(){return l.GreaterEqual}),n.d(t,"Identity",function(){return l.Identity}),n.d(t,"IFFT",function(){return l.IFFT}),n.d(t,"Imag",function(){return l.Imag}),n.d(t,"IsFinite",function(){return l.IsFinite}),n.d(t,"IsInf",function(){return l.IsInf}),n.d(t,"IsNan",function(){return l.IsNan}),n.d(t,"LeakyRelu",function(){return l.LeakyRelu}),n.d(t,"Less",function(){return l.Less}),n.d(t,"LessEqual",function(){return l.LessEqual}),n.d(t,"LinSpace",function(){return l.LinSpace}),n.d(t,"Log",function(){return l.Log}),n.d(t,"Log1p",function(){return l.Log1p}),n.d(t,"LogicalAnd",function(){return l.LogicalAnd}),n.d(t,"LogicalNot",function(){return l.LogicalNot}),n.d(t,"LogicalOr",function(){return l.LogicalOr}),n.d(t,"LogSoftmax",function(){return l.LogSoftmax}),n.d(t,"LowerBound",function(){return l.LowerBound}),n.d(t,"LRN",function(){return l.LRN}),n.d(t,"LRNGrad",function(){return l.LRNGrad}),n.d(t,"Max",function(){return l.Max}),n.d(t,"Maximum",function(){return l.Maximum}),n.d(t,"MaxPool",function(){return l.MaxPool}),n.d(t,"MaxPoolGrad",function(){return l.MaxPoolGrad}),n.d(t,"MaxPool3D",function(){return l.MaxPool3D}),n.d(t,"MaxPool3DGrad",function(){return l.MaxPool3DGrad}),n.d(t,"MaxPoolWithArgmax",function(){return l.MaxPoolWithArgmax}),n.d(t,"Mean",function(){return l.Mean}),n.d(t,"Min",function(){return l.Min}),n.d(t,"Minimum",function(){return l.Minimum}),n.d(t,"MirrorPad",function(){return l.MirrorPad}),n.d(t,"Mod",function(){return l.Mod}),n.d(t,"Multinomial",function(){return l.Multinomial}),n.d(t,"Multiply",function(){return l.Multiply}),n.d(t,"Neg",function(){return l.Neg}),n.d(t,"NotEqual",function(){return l.NotEqual}),n.d(t,"NonMaxSuppressionV3",function(){return l.NonMaxSuppressionV3}),n.d(t,"NonMaxSuppressionV4",function(){return l.NonMaxSuppressionV4}),n.d(t,"NonMaxSuppressionV5",function(){return l.NonMaxSuppressionV5}),n.d(t,"OnesLike",function(){return l.OnesLike}),n.d(t,"OneHot",function(){return l.OneHot}),n.d(t,"Pack",function(){return l.Pack}),n.d(t,"PadV2",function(){return l.PadV2}),n.d(t,"Pool",function(){return l.Pool}),n.d(t,"Pow",function(){return l.Pow}),n.d(t,"Prelu",function(){return l.Prelu}),n.d(t,"Prod",function(){return l.Prod}),n.d(t,"Range",function(){return l.Range}),n.d(t,"Real",function(){return l.Real}),n.d(t,"Reciprocal",function(){return l.Reciprocal}),n.d(t,"Relu",function(){return l.Relu}),n.d(t,"Reshape",function(){return l.Reshape}),n.d(t,"ResizeNearestNeighbor",function(){return l.ResizeNearestNeighbor}),n.d(t,"ResizeNearestNeighborGrad",function(){return l.ResizeNearestNeighborGrad}),n.d(t,"ResizeBilinear",function(){return l.ResizeBilinear}),n.d(t,"ResizeBilinearGrad",function(){return l.ResizeBilinearGrad}),n.d(t,"Relu6",function(){return l.Relu6}),n.d(t,"Reverse",function(){return l.Reverse}),n.d(t,"Round",function(){return l.Round}),n.d(t,"Rsqrt",function(){return l.Rsqrt}),n.d(t,"ScatterNd",function(){return l.ScatterNd}),n.d(t,"SearchSorted",function(){return l.SearchSorted}),n.d(t,"Select",function(){return l.Select}),n.d(t,"Selu",function(){return l.Selu}),n.d(t,"Slice",function(){return l.Slice}),n.d(t,"Sin",function(){return l.Sin}),n.d(t,"Sinh",function(){return l.Sinh}),n.d(t,"Sign",function(){return l.Sign}),n.d(t,"Sigmoid",function(){return l.Sigmoid}),n.d(t,"Softplus",function(){return l.Softplus}),n.d(t,"Sqrt",function(){return l.Sqrt}),n.d(t,"Sum",function(){return l.Sum}),n.d(t,"SpaceToBatchND",function(){return l.SpaceToBatchND}),n.d(t,"SplitV",function(){return l.SplitV}),n.d(t,"Softmax",function(){return l.Softmax}),n.d(t,"SparseFillEmptyRows",function(){return l.SparseFillEmptyRows}),n.d(t,"SparseReshape",function(){return l.SparseReshape}),n.d(t,"SparseSegmentMean",function(){return l.SparseSegmentMean}),n.d(t,"SparseSegmentSum",function(){return l.SparseSegmentSum}),n.d(t,"SparseToDense",function(){return l.SparseToDense}),n.d(t,"SquaredDifference",function(){return l.SquaredDifference}),n.d(t,"Square",function(){return l.Square}),n.d(t,"StridedSlice",function(){return l.StridedSlice}),n.d(t,"StringNGrams",function(){return l.StringNGrams}),n.d(t,"StringSplit",function(){return l.StringSplit}),n.d(t,"StringToHashBucketFast",function(){return l.StringToHashBucketFast}),n.d(t,"Sub",function(){return l.Sub}),n.d(t,"Tan",function(){return l.Tan}),n.d(t,"Tanh",function(){return l.Tanh}),n.d(t,"Tile",function(){return l.Tile}),n.d(t,"TopK",function(){return l.TopK}),n.d(t,"Transform",function(){return l.Transform}),n.d(t,"Transpose",function(){return l.Transpose}),n.d(t,"Unique",function(){return l.Unique}),n.d(t,"Unpack",function(){return l.Unpack}),n.d(t,"UnsortedSegmentSum",function(){return l.UnsortedSegmentSum}),n.d(t,"UpperBound",function(){return l.UpperBound}),n.d(t,"ZerosLike",function(){return l.ZerosLike}),n.d(t,"Step",function(){return l.Step}),n.d(t,"FromPixels",function(){return l.FromPixels}),n.d(t,"RotateWithOffset",function(){return l.RotateWithOffset}),n.d(t,"_FusedMatMul",function(){return l._FusedMatMul}),n.d(t,"FusedConv2D",function(){return l.FusedConv2D}),n.d(t,"FusedDepthwiseConv2D",function(){return l.FusedDepthwiseConv2D}),n.d(t,"CallbackList",function(){return Di}),n.d(t,"CustomCallback",function(){return Li}),n.d(t,"History",function(){return zi}),n.d(t,"Callback",function(){return Ed}),n.d(t,"callbacks",function(){return Rd}),n.d(t,"EarlyStopping",function(){return $d}),n.d(t,"InputSpec",function(){return Bs}),n.d(t,"SymbolicTensor",function(){return Vs}),n.d(t,"LayersModel",function(){return zo}),n.d(t,"input",function(){return Go}),n.d(t,"loadLayersModel",function(){return Uo}),n.d(t,"model",function(){return Vo}),n.d(t,"registerCallbackConstructor",function(){return Ho}),n.d(t,"sequential",function(){return Wo}),n.d(t,"RNN",function(){return Uu}),n.d(t,"Sequential",function(){return Bo}),n.d(t,"LayerVariable",function(){return zs}),n.d(t,"version_layers",function(){return vo}),n.d(t,"constraints",function(){return r}),n.d(t,"initializers",function(){return a}),n.d(t,"layers",function(){return s}),n.d(t,"metrics",function(){return i}),n.d(t,"models",function(){return o}),n.d(t,"regularizers",function(){return u}),n.d(t,"GraphModel",function(){return Dd.GraphModel}),n.d(t,"loadGraphModel",function(){return Dd.loadGraphModel}),n.d(t,"loadGraphModelSync",function(){return Dd.loadGraphModelSync}),n.d(t,"deregisterOp",function(){return Dd.deregisterOp}),n.d(t,"registerOp",function(){return Dd.registerOp}),n.d(t,"version_converter",function(){return Dd.version_converter}),n.d(t,"data",function(){return c}),n.d(t,"version",function(){return Hh});var r={};n.r(r),n.d(r,"maxNorm",function(){return pi}),n.d(r,"unitNorm",function(){return fi}),n.d(r,"nonNeg",function(){return mi}),n.d(r,"minMaxNorm",function(){return bi});var a={};n.r(a),n.d(a,"zeros",function(){return gi}),n.d(a,"ones",function(){return yi}),n.d(a,"constant",function(){return xi}),n.d(a,"randomUniform",function(){return vi}),n.d(a,"randomNormal",function(){return wi}),n.d(a,"truncatedNormal",function(){return Oi}),n.d(a,"identity",function(){return ki}),n.d(a,"varianceScaling",function(){return Si}),n.d(a,"glorotUniform",function(){return Ii}),n.d(a,"glorotNormal",function(){return Ni}),n.d(a,"heNormal",function(){return Ti}),n.d(a,"heUniform",function(){return Ci}),n.d(a,"leCunNormal",function(){return ji}),n.d(a,"leCunUniform",function(){return Ei}),n.d(a,"orthogonal",function(){return Ai});var s={};n.r(s),n.d(s,"inputLayer",function(){return Xc}),n.d(s,"elu",function(){return Zc}),n.d(s,"reLU",function(){return Yc}),n.d(s,"leakyReLU",function(){return Jc}),n.d(s,"prelu",function(){return Qc}),n.d(s,"softmax",function(){return el}),n.d(s,"thresholdedReLU",function(){return tl}),n.d(s,"conv1d",function(){return nl}),n.d(s,"conv2d",function(){return rl}),n.d(s,"conv2dTranspose",function(){return al}),n.d(s,"conv3d",function(){return sl}),n.d(s,"conv3dTranspose",function(){return il}),n.d(s,"separableConv2d",function(){return ol}),n.d(s,"cropping2D",function(){return ul}),n.d(s,"upSampling2d",function(){return cl}),n.d(s,"depthwiseConv2d",function(){return ll}),n.d(s,"activation",function(){return dl}),n.d(s,"dense",function(){return hl}),n.d(s,"dropout",function(){return pl}),n.d(s,"spatialDropout1d",function(){return fl}),n.d(s,"flatten",function(){return ml}),n.d(s,"repeatVector",function(){return bl}),n.d(s,"reshape",function(){return gl}),n.d(s,"permute",function(){return yl}),n.d(s,"embedding",function(){return xl}),n.d(s,"add",function(){return vl}),n.d(s,"average",function(){return wl}),n.d(s,"concatenate",function(){return Ol}),n.d(s,"maximum",function(){return kl}),n.d(s,"minimum",function(){return Sl}),n.d(s,"multiply",function(){return Il}),n.d(s,"dot",function(){return Nl}),n.d(s,"batchNormalization",function(){return Tl}),n.d(s,"layerNormalization",function(){return Cl}),n.d(s,"zeroPadding2d",function(){return jl}),n.d(s,"averagePooling1d",function(){return El}),n.d(s,"avgPool1d",function(){return Al}),n.d(s,"avgPooling1d",function(){return _l}),n.d(s,"averagePooling2d",function(){return $l}),n.d(s,"avgPool2d",function(){return Rl}),n.d(s,"avgPooling2d",function(){return Fl}),n.d(s,"averagePooling3d",function(){return Dl}),n.d(s,"avgPool3d",function(){return Ml}),n.d(s,"avgPooling3d",function(){return zl}),n.d(s,"globalAveragePooling1d",function(){return Ll}),n.d(s,"globalAveragePooling2d",function(){return Pl}),n.d(s,"globalMaxPooling1d",function(){return Bl}),n.d(s,"globalMaxPooling2d",function(){return Vl}),n.d(s,"maxPooling1d",function(){return Wl}),n.d(s,"maxPooling2d",function(){return Ul}),n.d(s,"maxPooling3d",function(){return Gl}),n.d(s,"gru",function(){return Hl}),n.d(s,"gruCell",function(){return Kl}),n.d(s,"lstm",function(){return ql}),n.d(s,"lstmCell",function(){return Xl}),n.d(s,"simpleRNN",function(){return Zl}),n.d(s,"simpleRNNCell",function(){return Yl}),n.d(s,"convLstm2d",function(){return Jl}),n.d(s,"convLstm2dCell",function(){return Ql}),n.d(s,"rnn",function(){return ed}),n.d(s,"stackedRNNCells",function(){return td}),n.d(s,"bidirectional",function(){return nd}),n.d(s,"timeDistributed",function(){return rd}),n.d(s,"globalMaxPool1d",function(){return ad}),n.d(s,"globalMaxPool2d",function(){return sd}),n.d(s,"maxPool1d",function(){return id}),n.d(s,"maxPool2d",function(){return od}),n.d(s,"Layer",function(){return Hs}),n.d(s,"RNN",function(){return Uu}),n.d(s,"RNNCell",function(){return Gu}),n.d(s,"input",function(){return Go}),n.d(s,"gaussianNoise",function(){return ud}),n.d(s,"gaussianDropout",function(){return cd}),n.d(s,"alphaDropout",function(){return ld}),n.d(s,"masking",function(){return dd});var i={};n.r(i),n.d(i,"binaryAccuracy",function(){return hd}),n.d(i,"binaryCrossentropy",function(){return pd}),n.d(i,"sparseCategoricalAccuracy",function(){return fd}),n.d(i,"categoricalAccuracy",function(){return md}),n.d(i,"categoricalCrossentropy",function(){return bd}),n.d(i,"precision",function(){return gd}),n.d(i,"recall",function(){return yd}),n.d(i,"cosineProximity",function(){return xd}),n.d(i,"meanAbsoluteError",function(){return vd}),n.d(i,"meanAbsolutePercentageError",function(){return wd}),n.d(i,"MAPE",function(){return Od}),n.d(i,"mape",function(){return kd}),n.d(i,"meanSquaredError",function(){return Sd}),n.d(i,"MSE",function(){return Id}),n.d(i,"mse",function(){return Nd});var o={};n.r(o),n.d(o,"modelFromJSON",function(){return Po});var u={};n.r(u),n.d(u,"l1l2",function(){return Td}),n.d(u,"l1",function(){return Cd}),n.d(u,"l2",function(){return jd});var c={};n.r(c),n.d(c,"array",function(){return fh}),n.d(c,"Dataset",function(){return hh}),n.d(c,"zip",function(){return mh}),n.d(c,"CSVDataset",function(){return Sh}),n.d(c,"TextLineDataset",function(){return gh}),n.d(c,"csv",function(){return zh}),n.d(c,"func",function(){return Lh}),n.d(c,"generator",function(){return Ph}),n.d(c,"microphone",function(){return Vh}),n.d(c,"webcam",function(){return Bh}),n.d(c,"FileDataSource",function(){return Dh}),n.d(c,"URLDataSource",function(){return Mh}),n.d(c,"version_data",function(){return Wh});var l=n("+hG3"),d=n("wFtI"),h=n("3rNm"),p=n("parS"),f=n("L7Hl");const m={kernelName:d.a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(e,Object(f.a)(Object(h.a)(n,"float32"),-1))}}};var b=n("x3y4"),g=n("O7f5"),y=n("AV8V"),x=n("Fjpt"),v=n("k7Jv"),w=n("oAkI");const O={kernelName:d.b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(v.a)(Object(h.a)(n,"float32")),r=Object(x.a)(Object(w.a)(Object(y.a)(1),t));return Object(g.a)(Object(b.a)(e,r))}}}},k={kernelName:d.c,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(x.a)(Object(w.a)(Object(v.a)(Object(h.a)(n,"float32")),1));return Object(b.a)(e,t)}}}};var S=n("Um8L"),I=n("NclT"),N=n("4FMF");const T={kernelName:d.d,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=S.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=S.getReductionAxes(n.shape,a);return r.length>0&&(t=Object(N.a)(t,r)),Object(I.a)(t,n.shape)},b:()=>{let t=e;const n=S.getReductionAxes(r.shape,a);return n.length>0&&(t=Object(N.a)(t,n)),Object(I.a)(t,r.shape)}}}},C={kernelName:d.e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}};var j=n("oJu+");const E={kernelName:d.h,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(n)}}},A={kernelName:d.i,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(n)}}},_={kernelName:d.j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(b.a)(e,Object(x.a)(Object(w.a)(Object(y.a)(1),Object(v.a)(Object(h.a)(n,"float32")))))}}};var $=n("kRdc");const R={kernelName:d.k,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(x.a)(Object($.a)(Object(y.a)(1),Object(v.a)(Object(h.a)(n,"float32"))));return Object(b.a)(e,t)}}}},F={kernelName:d.m,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(S.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object($.a)(Object(v.a)(n),Object(v.a)(r));let s=Object(p.a)(e,Object(b.a)(r,t));const i=Object(S.getReductionAxes)(n.shape,a);return i.length>0&&(s=Object(N.a)(s,i)),Object(I.a)(s,n.shape)},b:()=>{const t=Object($.a)(Object(v.a)(n),Object(v.a)(r));let s=Object(g.a)(Object(p.a)(e,Object(b.a)(n,t)));const i=Object(S.getReductionAxes)(r.shape,a);return i.length>0&&(s=Object(N.a)(s,i)),Object(I.a)(s,r.shape)}}}},D={kernelName:d.l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(b.a)(e,Object($.a)(Object(v.a)(Object(h.a)(n,"float32")),1))}}},M={kernelName:d.n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(b.a)(e,Object(w.a)(Object(y.a)(1),Object(v.a)(Object(h.a)(n,"float32"))))}}};var z=n("auKK"),L=n("o/e8"),P=n("atXS"),B=n("uBja"),V=n("VO80");const W=Object(V.b)({avgPool3dGrad_:function(e,t,n,r,a,s){const i=Object(L.a)(e,"dy","avgPool3dGrad"),o=Object(L.a)(t,"input","avgPool3dGrad");let u=i,c=o,l=!1;4===o.rank&&(l=!0,u=Object(I.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=Object(I.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P.b(5===u.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P.b(5===c.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Object(B.a)("avgPool3dGrad",a,s);const h=z.a.runKernel(d.q,{dy:u,input:c},{filterSize:n,strides:r,pad:a,dimRoundingMode:s});return l?Object(I.a)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),U={kernelName:d.p,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>W(e,r,a,s,i,o)}}},G=Object(V.b)({avgPoolGrad_:function(e,t,n,r,a){const s=Object(L.a)(e,"dy","avgPoolGrad"),i=Object(L.a)(t,"input","avgPoolGrad");P.b(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,c=!1;3===i.rank&&(c=!0,o=Object(I.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Object(I.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P.b(4===u.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),P.b(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const l=z.a.runKernel(d.r,{dy:u,input:o},{filterSize:n,strides:r,pad:a});return c?Object(I.a)(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),H={kernelName:d.o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>G(e,r,a,s,i)}}};var K=n("SHv8");const q={kernelName:d.s,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Object(K.a)(e,a,!1,!1),b:()=>Object(K.a)(e,r,!0,!1)}:s&&!i?{a:()=>Object(K.a)(a,e,!1,!0),b:()=>Object(K.a)(r,e,!1,!1)}:{a:()=>Object(K.a)(a,e,!0,!0),b:()=>Object(K.a)(e,r,!0,!0)}:{a:()=>Object(K.a)(e,a,!1,!0),b:()=>Object(K.a)(r,e,!0,!1)}}};var X=n("dYAU");const Z={kernelName:d.t,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(X.a)(e,r,a)}}},Y={kernelName:d.w,gradFunc:(e,t,n)=>{const r=n.inputShape,a=n.shape,s=Array.from(a);for(let o=r.length-1;o>=0;o--)if(r[o]===a[o])s[o]=1;else if(1!==r[o])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const i=[];for(let o=0;o<s.length;o++)s[o]>1&&i.push(o);return{x:()=>Object(N.a)(e,i,!0)}}},J={kernelName:d.x,gradFunc:e=>({x:()=>e.clone()})},Q={kernelName:d.y,gradFunc:e=>({x:()=>Object(j.a)(e)})};var ee=n("uy0A"),te=n("shz4"),ne=n("4zPZ"),re=n("Z5Ez");const ae={kernelName:d.z,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(re.a)(Object(ne.a)(Object(ee.a)(r,a),Object(te.a)(r,s)),e,Object(j.a)(e))}}},se={kernelName:d.B,inputsToSave:["x"],gradFunc:m.gradFunc};var ie=n("RbuM");const oe={kernelName:d.C,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:a}=n,s=Object(P.I)(a,t[0].shape)[0],i=r.map(e=>e[s]);return Object(ie.a)(e,i,s).map(e=>()=>e)}};var ue=n("D2/b"),ce=n("c9N1");const le={kernelName:d.D,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return P.b(B.j(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Object(ce.a)(r.shape,e,a,i,o,u),filter:()=>Object(ue.a)(r,e,a.shape,i,o,u)}}};var de=n("3X4V");const he={kernelName:d.F,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Object(de.a)(e,a,s,i,o,1,u),filter:()=>Object(ue.a)(e,r,a.shape,s,i,o,u)}}},pe=Object(V.b)({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Object(I.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;return 4===i.rank&&(i=Object(I.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P.b(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),P.b(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),P.b(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),P.b(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),P.b(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`),z.a.runKernel(d.H,{x:s,dy:i},{strides:r,pad:a,filterShape:n})}});var fe=n("mdDO");const me={kernelName:d.G,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;P.b(Object(B.j)(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>Object(fe.a)(i.shape,e,o,a,s),filter:()=>pe(i,e,o.shape,a,s)}}};var be=n("aTLu");const ge={kernelName:d.J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(Object(g.a)(Object(be.a)(Object(h.a)(n,"float32"))),e)}}};var ye=n("XcSs");const xe={kernelName:d.K,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(Object(ye.a)(Object(h.a)(n,"float32")),e)}}};var ve=n("NuWS"),we=n("HmhO"),Oe=n("yRKQ");const ke={kernelName:d.N,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=Object(ve.f)([a],r.rank);let n=Object(we.a)(e,a,s,!i);return null!=t&&(n=Object(Oe.a)(n,t)),n}}}};var Se=n("aSZd"),Ie=n("jLCh");const Ne={kernelName:d.Q,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;P.b(B.j(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,c]=t;return P.b(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),P.b(4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),P.b(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),P.b(B.i(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),B.a("depthwiseConv2d",s,i),{x:()=>Object(Ie.a)(u.shape,e,c,a,s,o,i),filter:()=>Object(Se.a)(u,e,c.shape,a,s,o,i)}}},Te={kernelName:d.U,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>z.a.runKernel(d.W,s,n),filter:()=>z.a.runKernel(d.V,i,n)}}},Ce={kernelName:d.Y,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>z.a.runKernel(d.Z,r)}}};var je=n("TyAZ");const Ee={kernelName:d.bb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(p.a)(Object(je.a)(Object(g.a)(Object(v.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(p.a)(e,r)}}},Ae={kernelName:d.cb,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(e,n)}}},_e={kernelName:d.db,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Object(I.a)(e,n.shape)}}},$e={kernelName:d.eb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(e,Object(je.a)(n))}}},Re={kernelName:d.ib,gradFunc:e=>({x:()=>Object(j.a)(e)})},Fe={kernelName:d.jb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(S.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(b.a)(e,Object(h.a)(r,"float32")),s=Object(S.getReductionAxes)(n.shape,a);return s.length>0?Object(I.a)(Object(N.a)(t,s),n.shape):t},b:()=>{let t=Object(p.a)(e,Object(h.a)(n,"float32"));const s=Object(S.getReductionAxes)(r.shape,a);s.length>0&&(t=Object(I.a)(Object(N.a)(t,s),r.shape));const i=Object(v.a)(r);return Object(g.a)(Object(b.a)(t,Object(h.a)(i,"float32")))}}}};var De=n("Xyqe"),Me=n("jXH2");const ze={kernelName:d.lb,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Object(y.a)(1):o,c=Object(S.getReductionAxes)(s.shape,a.shape),l=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)l.push(a.shape[e]);l.push(1)}const d=Object(w.a)(a,s),h=Object(p.a)(e,u),f=Object(De.a)(Object($.a)(i,Object(y.a)(r))),m=Object(p.a)(Object(p.a)(Object(p.a)(f,f),f),Object(y.a)(-.5));return{x:()=>1===s.rank?Object(I.a)(Object(p.a)(Object(p.a)(e,Object(Me.a)(Object(I.a)(f,[1,1,1,s.shape[0]]),l)),u),a.shape):Object(I.a)(Object(p.a)(Object(p.a)(e,f),u),a.shape),mean:()=>{let e=Object(p.a)(Object(p.a)(f,Object(y.a)(-1)),h);return 1===s.rank&&(e=Object(N.a)(e,c)),Object(I.a)(e,s.shape)},variance:()=>{let e=Object(p.a)(Object(p.a)(m,d),h);return 1===s.rank&&(e=Object(N.a)(e,c)),Object(I.a)(e,s.shape)},scale:()=>{const t=Object(p.a)(d,f);let n=Object(p.a)(e,t);return 1===s.rank&&(n=Object(N.a)(n,c)),Object(I.a)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Object(N.a)(t,c)),Object(I.a)(t,s.shape)}}}};var Le=n("U/Lz");const Pe={kernelName:d.pb,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=Object(P.I)(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,c=t.slice(s,t.length).slice(1),l=c.length,d=Be(0,u),h=Be(u+1,u+1+l),p=Ve([o,[n],c]),f=Object(I.a)(e,p),m=Object(I.a)(a,[n]),b=Ve([[u],d,h]),g=Object(Oe.a)(f,b);let y=Object(Le.a)(g,m,r.shape[i]);const x=Object(ve.h)(b);return y=Object(Oe.a)(y,x),y},indices:()=>a}}};function Be(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ve(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const We={kernelName:d.rb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(j.a)(n),b:()=>Object(j.a)(r)}}},Ue={kernelName:d.tb,gradFunc:e=>({x:()=>Object(h.a)(e,"float32")})},Ge={kernelName:d.vb,gradFunc:e=>({x:()=>Object(j.a)(e)})},He={kernelName:d.wb,gradFunc:e=>({x:()=>Object(j.a)(e)})},Ke={kernelName:d.xb,gradFunc:e=>({x:()=>Object(j.a)(e)})};var qe=n("zvA9");const Xe={kernelName:d.Ab,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Object(qe.a)(r,0);return{x:()=>Object(re.a)(s,e,Object(p.a)(e,a))}}},Ze={kernelName:d.Fb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(b.a)(e,Object($.a)(n,1))}}},Ye={kernelName:d.Eb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(b.a)(e,Object(h.a)(n,"float32"))}}},Je={kernelName:d.Gb,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Object(je.a)(r);return Object(w.a)(e,Object(p.a)(Object(N.a)(e,a,!0),t))}}}},Qe=Object(V.b)({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){return z.a.runKernel(d.zb,{x:e,y:t,dy:n},{depthRadius:r,bias:a,alpha:s,beta:i})}}),et={kernelName:d.yb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>Qe(r,a,e,s,i,o,u)}}};var tt=n("ubnP");function nt(e,t,n,r){return t.rank<n.rank&&(t=Object(I.a)(t,ve.e(t.shape,r))),e.rank<n.rank&&(e=Object(I.a)(e,ve.e(e.shape,r))),{x:()=>Object(p.a)(e,Object(h.a)(Object(tt.a)(n,t),e.dtype))}}const rt={kernelName:d.Lb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=nt(e,t[1],s,P.I(a,s.shape));return{x:()=>i.x()}}};var at=n("4f3O");const st={kernelName:d.Rb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(p.a)(e,Object(h.a)(Object(ee.a)(n,r),"float32")),b:()=>Object(p.a)(e,Object(h.a)(Object(at.a)(n,r),"float32"))}}},it=Object(V.b)({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=Object(L.a)(e,"dy","maxPool3dGrad"),u=Object(L.a)(t,"input","maxPool3dGrad"),c=Object(L.a)(n,"output","maxPool3dGrad");let l=o,h=u,p=c,f=!1;4===u.rank&&(f=!0,l=Object(I.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Object(I.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Object(I.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),P.b(5===l.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),P.b(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),P.b(5===p.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),Object(B.a)("maxPool3dGrad",s,i);const m=z.a.runKernel(d.Ob,{dy:l,input:h,output:p},{filterSize:r,strides:a,pad:s,dimRoundingMode:i});return f?Object(I.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),ot={kernelName:d.Nb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>it(e,r,a,s,i,o,u)}}},ut=Object(V.b)({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=Object(L.a)(e,"dy","maxPoolGrad"),u=Object(L.a)(t,"input","maxPoolGrad"),c=Object(L.a)(n,"output","maxPoolGrad");return P.b(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),P.b(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),P.b(4===u.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),B.a("maxPoolGrad",s,i),z.a.runKernel(d.Pb,{dy:o,input:u,output:c},{filterSize:r,strides:a,pad:s,dimRoundingMode:i})}}),ct={kernelName:d.Mb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>ut(e,r,a,s,i,o)}}};var lt=n("wion");const dt={kernelName:d.Sb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=P.I(a,r.shape),i=Object(ve.d)(r.shape,s),o=P.O(i[1]);return{x:()=>{const t=r.shape.slice();s.forEach(e=>{t[e]=1});const n=Object(I.a)(e,t);return Object(b.a)(Object(p.a)(n,Object(lt.a)(r.shape,"float32")),o)}}}},ht={kernelName:d.Tb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=nt(e,i,s,P.I(a,s.shape));return{x:()=>o.x()}}},pt={kernelName:d.Ub,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(p.a)(e,Object(h.a)(Object(te.a)(n,r),"float32")),b:()=>Object(p.a)(e,Object(h.a)(Object(qe.a)(n,r),"float32"))}}};var ft=n("bTzI");const mt={kernelName:d.Vb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Object(ft.a)(e,s,r.shape)}}};var bt=n("02mo");const gt={kernelName:d.Wb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(S.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(S.getReductionAxes)(n.shape,a);return t.length>0?Object(I.a)(Object(N.a)(e,t),n.shape):e},b:()=>{const t=Object(p.a)(e,Object(g.a)(Object(bt.a)(Object(b.a)(n,r)))),s=Object(S.getReductionAxes)(r.shape,a);return s.length>0?Object(I.a)(Object(N.a)(t,s),r.shape):t}}}},yt={kernelName:d.Yb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(S.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=Object(p.a)(e,Object(h.a)(r,"float32")),s=Object(S.getReductionAxes)(n.shape,a);return s.length>0?Object(I.a)(Object(N.a)(t,s),n.shape):t},b:()=>{const t=Object(p.a)(e,Object(h.a)(n,"float32")),s=Object(S.getReductionAxes)(r.shape,a);return s.length>0?Object(I.a)(Object(N.a)(t,s),r.shape):t}}}},xt={kernelName:d.Zb,gradFunc:e=>({x:()=>Object(g.a)(e)})};var vt=n("Wiw4");const wt={kernelName:d.ec,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Object(vt.a)(n.shape,"float32")}}},Ot={kernelName:d.fc,gradFunc:e=>({x:()=>Object(j.a)(e)})};var kt=n("OkRW");const St={kernelName:d.gc,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Object(kt.a)(e,r).map(e=>()=>e)}},It={kernelName:d.hc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Object(ft.a)(e,s,r.shape)}}};var Nt=n("E1lT"),Tt=n("yfHJ");const Ct={kernelName:d.jc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=S.assertAndGetBroadcastShape(s.shape,i.shape);return{a:()=>{const t=Object(h.a)(i,"float32");let n=Object(p.a)(e,Object(p.a)(t,Object(Tt.a)(s,Object(w.a)(t,Object(y.a)(1)))));const r=S.getReductionAxes(s.shape,o);return r.length>0&&(n=Object(N.a)(n,r)),Object(I.a)(n,s.shape)},b:()=>{const t=Object(qe.a)(s,0),n=Object(re.a)(t,Object(Nt.a)(s),Object(j.a)(s));let r=Object(p.a)(e,Object(p.a)(a,n));const u=S.getReductionAxes(i.shape,o);return u.length>0&&(r=Object(N.a)(r,u)),Object(I.a)(r,i.shape)}}}},jt={kernelName:d.kc,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(qe.a)(n,0);return{x:()=>Object(re.a)(a,e,Object(p.a)(e,r)),alpha:()=>{let t=Object(re.a)(a,Object(j.a)(e),Object(p.a)(e,n));const s=Object(S.getReductionAxes)(r.shape,e.shape);return s.length>0&&(t=Object(N.a)(t,s)),Object(I.a)(t,r.shape)}}}};var Et=n("DvQV"),At=n("F6O2");const _t={kernelName:d.lc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;let s=[];return s=null==a?r.shape.map((e,t)=>t):"number"==typeof a?[a]:a,{x:()=>function(e,t,n){const r=e.shape.length,a=r-n.length,s=Et.Zd.getAxesPermutation(n,r);let i=e;null!=s&&(i=Object(Oe.a)(e,s));const o=i.shape.slice(),u=o.splice(r-n.length,n.length).reduce((e,t)=>e*t,1);o.push(u);let c=function(e,t,n){const r=e.shape.slice();r[n]=1;const a=Object(I.a)(t,r),s=Object(At.a)(e,n,!0,!1),i=Object(At.a)(e,n,!0,!0),o=Object(p.a)(s,i);return Object(p.a)(a,o)}(i.reshape(o),t,a);if(c=c.reshape(i.shape),null!=s){const e=Et.Zd.getUndoAxesPermutation(s);c=Object(Oe.a)(c,e)}return c}(r,e,s)}}},$t={kernelName:d.oc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=S.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=Object(b.a)(e,Object(h.a)(r,"float32")),s=S.getReductionAxes(n.shape,a);return s.length>0?Object(I.a)(Object(N.a)(t,s),n.shape):t},b:()=>{let t=Object(p.a)(e,Object(h.a)(n,"float32"));const s=S.getReductionAxes(r.shape,a);s.length>0&&(t=Object(I.a)(Object(N.a)(t,s),r.shape));const i=Object(v.a)(r);return Object(g.a)(Object(b.a)(t,Object(h.a)(i,"float32")))}}}},Rt={kernelName:d.pc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(b.a)(e,Object(g.a)(Object(v.a)(n)))}}},Ft={kernelName:d.rc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(p.a)(Object(te.a)(n,6),Object(f.a)(n));return{x:()=>Object(p.a)(e,Object(h.a)(r,"float32"))}}},Dt={kernelName:d.qc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(e,Object(h.a)(Object(f.a)(n),"float32"))}}},Mt={kernelName:d.sc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(I.a)(e,n.shape)}}},zt={kernelName:d.tc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>z.a.runKernel(d.uc,a,n)}}},Lt={kernelName:d.vc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>z.a.runKernel(d.wc,a,n)}}};var Pt=n("0I63");const Bt={kernelName:d.xc,gradFunc:(e,t,n)=>{const{dims:r}=n,a=Object(P.I)(r,e.shape);return{x:()=>Object(Pt.a)(e,a)}}},Vt={kernelName:d.zc,gradFunc:e=>({x:()=>Object(j.a)(e)})},Wt={kernelName:d.Ac,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(g.a)(Object(b.a)(e,Object(p.a)(Object(Tt.a)(n,1.5),2)))}}};var Ut=n("7wDt");const Gt={kernelName:d.Dc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Object(h.a)(Object(j.a)(n),"float32"),t:()=>Object(p.a)(e,Object(h.a)(n,e.dtype)),e:()=>Object(p.a)(e,Object(h.a)(Object(Ut.a)(n),e.dtype))}}};var Ht=n("fN6/");const Kt={kernelName:d.Ec,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(qe.a)(n,Object(y.a)(0)),r=Object(y.a)(Ht.b),a=Object(y.a)(Ht.a),s=Object(p.a)(e,a),i=Object(p.a)(Object(p.a)(e,r),Object(je.a)(Object(h.a)(n,"float32")));return Object(re.a)(t,s,i)}}}},qt={kernelName:d.Fc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(e,Object(p.a)(n,Object(w.a)(Object(y.a)(1),n)))}}},Xt={kernelName:d.Gc,gradFunc:e=>({x:()=>Object(j.a)(e)})};var Zt=n("7/dO");const Yt={kernelName:d.Hc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(Object(Zt.a)(Object(h.a)(n,"float32")),e)}}};var Jt=n("waK1");const Qt={kernelName:d.Ic,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(Object(Jt.a)(Object(h.a)(n,"float32")),e)}}};var en=n("DrVt"),tn=n("Xr0w");const nn={kernelName:d.Jc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=Object(tn.parseSliceParams)(r,a,s),c=[];for(let l=0;l<e.rank;l++)c.push([o[l],i[l]-o[l]-u[l]]);return{x:()=>Object(en.a)(e,c)}}},rn={kernelName:d.Kc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=Object(p.a)(e,r);return{logits:()=>Object(w.a)(s,Object(p.a)(Object(N.a)(s,[a],!0),r))}}};var an=n("/7N0");const sn={kernelName:d.Lc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(e,Object(an.a)(n))}}};var on=n("OygE");const un={kernelName:d.Mc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(on.a)(e,r,a)}}};var cn=n("ZJ6U");const ln={kernelName:d.Sc,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Object(cn.a)(e,r)}}},dn={kernelName:d.Tc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(b.a)(e,Object(p.a)(Object(x.a)(Object(h.a)(n,"float32")),2))}}},hn={kernelName:d.Uc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(e,Object(p.a)(Object(h.a)(n,"float32"),2))}}},pn={kernelName:d.Vc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(y.a)(2);return{a:()=>Object(p.a)(e,Object(p.a)(a,Object(w.a)(n,r))),b:()=>Object(p.a)(e,Object(p.a)(a,Object(w.a)(r,n)))}}},fn={kernelName:d.Wc,gradFunc:e=>({x:()=>Object(j.a)(e)})},mn={kernelName:d.bd,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=S.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=S.getReductionAxes(n.shape,a);return r.length>0&&(t=Object(N.a)(t,r)),Object(I.a)(t,n.shape)},b:()=>{let t=e;const n=S.getReductionAxes(r.shape,a);return n.length>0&&(t=Object(N.a)(t,n)),Object(I.a)(Object(g.a)(t),r.shape)}}}},bn={kernelName:d.cd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;Object(P.I)(s,r.shape).forEach(e=>{a[e]=1});const i=Object(I.a)(e,a),o=Object(p.a)(i,Object(lt.a)(r.shape,"float32"));return{x:()=>o}}},gn={kernelName:d.dd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(b.a)(e,Object(v.a)(Object(Zt.a)(n)))}}},yn={kernelName:d.ed,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(p.a)(Object(w.a)(Object(y.a)(1),Object(v.a)(n)),e)}}},xn={kernelName:d.fd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Object(j.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Object($.a)(t,Object(ft.a)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Object($.a)(t,Object(ft.a)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Object($.a)(t,Object(ft.a)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Object($.a)(t,Object(ft.a)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},vn={kernelName:d.id,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=ve.h(a);return{x:()=>Object(Oe.a)(e,s)}}};var wn=n("1U0N");const On={kernelName:d.kd,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(wn.a)(e,a)}}};var kn=n("2ugP"),Sn=n("kaMP"),In=n("CfTU");const Nn={kernelName:d.ld,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Object(In.a)(t,Object(j.a)(t)),r=Object(Sn.a)(e,n);let a=Object(ee.a)(t,Object(y.a)(0,"int32"));const s=r.rank-a.rank;for(let o=0;o<s;++o)a=Object(kn.a)(a,o+1);a=Object(ne.a)(a,Object(lt.a)(r.shape,"bool"));const i=Object(j.a)(r);return Object(re.a)(a,r,i)}(e,n)}}},Tn={kernelName:d.nd,gradFunc:e=>({x:()=>Object(j.a)(e)})};var Cn=n("c7gn");const jn=[m,O,k,T,C,E,A,_,R,F,D,M,U,H,q,Z,Y,J,Q,ae,se,oe,he,le,me,ge,xe,ke,Ne,Te,$t,Ce,Ee,Ae,_e,$e,Fe,Re,ze,Pe,We,Ue,Ge,He,Ke,Xe,Ze,Ye,Je,et,rt,rt,st,ot,ct,dt,ht,pt,mt,gt,yt,xt,wt,Ot,St,It,It,Ct,jt,_t,Rt,Ft,Dt,Mt,zt,Lt,Bt,Vt,Wt,Gt,Kt,qt,Xt,Yt,Qt,nn,rn,sn,un,un,ln,ln,dn,pn,hn,fn,mn,bn,gn,yn,xn,vn,On,Nn,Tn];for(const Kh of jn)Object(Cn.e)(Kh);var En=n("iuCH"),An=n("NNfn");Object(An.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(En.a)(this)};var _n=n("o3Rt");Object(An.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(_n.a)(this)};var $n=n("RhVc");Object(An.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object($n.a)(this)},Object(An.d)().prototype.add=function(e){return this.throwIfDisposed(),Object($.a)(this,e)};var Rn=n("34HJ");Object(An.d)().prototype.all=function(e,t){return this.throwIfDisposed(),Object(Rn.a)(this,e,t)};var Fn=n("RRa9");Object(An.d)().prototype.any=function(e,t){return this.throwIfDisposed(),Object(Fn.a)(this,e,t)};var Dn=n("6J+n");Object(An.d)().prototype.argMax=function(e){return this.throwIfDisposed(),Object(Dn.a)(this,e)};var Mn=n("20lx");Object(An.d)().prototype.argMin=function(e){return this.throwIfDisposed(),Object(Mn.a)(this,e)},Object(An.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(P.b)(1===this.size,()=>"The array must have only 1 element."),Object(I.a)(this,[])},Object(An.d)().prototype.asType=function(e){return this.throwIfDisposed(),Object(h.a)(this,e)},Object(An.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(I.a)(this,[this.size])},Object(An.d)().prototype.as2D=function(e,t){return this.throwIfDisposed(),Object(I.a)(this,[e,t])},Object(An.d)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Object(I.a)(this,[e,t,n])},Object(An.d)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Object(I.a)(this,[e,t,n,r])},Object(An.d)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Object(I.a)(this,[e,t,n,r,a])};var zn=n("Ig+c");Object(An.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(zn.a)(this)};var Ln=n("3FnS");Object(An.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(Ln.a)(this)};var Pn=n("fjZN");Object(An.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(Pn.a)(this)};var Bn=n("YAKK");Object(An.d)().prototype.atan2=function(e){return this.throwIfDisposed(),Object(Bn.a)(this,e)};var Vn=n("0ahe");Object(An.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(Vn.a)(this)};var Wn=n("l0gX");Object(An.d)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Object(Wn.a)(this,e,t,n,r)},Object(An.d)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Object(on.a)(this,e,t)};var Un=n("cdtJ");Object(An.d)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Un.a)(this,e,t,n,r,a)};var Gn=n("SNsm");Object(An.d)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Object(Gn.a)(this,e)},Object(An.d)().prototype.cast=function(e){return this.throwIfDisposed(),Object(h.a)(this,e)};var Hn=n("WWBm");Object(An.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Hn.a)(this)};var Kn=n("wI/y");Object(An.d)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Object(Kn.a)(this,e,t)},Object(An.d)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof An.a&&(e=[e]),Object(cn.a)([this,...e],t)};var qn=n("dnXz");Object(An.d)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(qn.a)(this,e,t,n,r,a,s)};var Xn=n("zR+/");Object(An.d)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Xn.a)(this,e,t,n,r,a)},Object(An.d)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(de.a)(this,e,t,n,r,a,s)},Object(An.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(Zt.a)(this)},Object(An.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(Jt.a)(this)},Object(An.d)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Object(At.a)(this,e,t,n)},Object(An.d)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Object(we.a)(this,e,t,n)};var Zn=n("Nk7E");Object(An.d)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Object(Zn.a)(this,e,t)};var Yn=n("g4+C");Object(An.d)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Yn.a)(this,e,t,n,r,a,s)};var Jn=n("wXC5");Object(An.d)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Jn.a)(this,e,t,n,r,a)};var Qn=n("ARu+");Object(An.d)().prototype.divNoNan=function(e){return this.throwIfDisposed(),Object(Qn.a)(this,e)},Object(An.d)().prototype.div=function(e){return this.throwIfDisposed(),Object(b.a)(this,e)};var er=n("Kfzt");Object(An.d)().prototype.dot=function(e){return this.throwIfDisposed(),Object(er.a)(this,e)};var tr=n("njhW");Object(An.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(tr.a)(this)},Object(An.d)().prototype.equal=function(e){return this.throwIfDisposed(),Object(tt.a)(this,e)};var nr=n("jgXy");Object(An.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(nr.a)(this)};var rr=n("TlOw");Object(An.d)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Object(rr.a)(this,e,t)},Object(An.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(je.a)(this)},Object(An.d)().prototype.expandDims=function(e){return this.throwIfDisposed(),Object(kn.a)(this,e)};var ar=n("G6IW");Object(An.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(ar.a)(this)};var sr=n("Grcp");Object(An.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(sr.a)(this)},Object(An.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(I.a)(this,[this.size])},Object(An.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(bt.a)(this)};var ir=n("UI8N");Object(An.d)().prototype.floorDiv=function(e){return this.throwIfDisposed(),Object(ir.a)(this,e)},Object(An.d)().prototype.gather=function(e,t){return this.throwIfDisposed(),Object(Sn.a)(this,e,t)},Object(An.d)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Object(ee.a)(this,e)},Object(An.d)().prototype.greater=function(e){return this.throwIfDisposed(),Object(qe.a)(this,e)};var or=n("THqV");Object(An.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(or.a)(this)};var ur=n("adw1");Object(An.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(ur.a)(this)};var cr=n("/AvP");Object(An.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(cr.a)(this)};var lr=n("WYAb");Object(An.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(lr.a)(this)};var dr=n("b++O");Object(An.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(dr.a)(this)};var hr=n("bzdD");Object(An.d)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Object(hr.a)(this,e)},Object(An.d)().prototype.lessEqual=function(e){return this.throwIfDisposed(),Object(te.a)(this,e)},Object(An.d)().prototype.less=function(e){return this.throwIfDisposed(),Object(at.a)(this,e)};var pr=n("4QEz");Object(An.d)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Object(pr.a)(this,e,t,n,r)};var fr=n("wxQM");Object(An.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(fr.a)(this)};var mr=n("gErV");Object(An.d)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Object(mr.a)(this,e)};var br=n("r9q9");Object(An.d)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Object(br.a)(this,e,t)},Object(An.d)().prototype.log=function(){return this.throwIfDisposed(),Object(Nt.a)(this)};var gr=n("RrGL");Object(An.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(gr.a)(this)},Object(An.d)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Object(ne.a)(this,e)},Object(An.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Ut.a)(this)};var yr=n("8YN0");Object(An.d)().prototype.logicalOr=function(e){return this.throwIfDisposed(),Object(yr.a)(this,e)};var xr=n("0l+w");Object(An.d)().prototype.logicalXor=function(e){return this.throwIfDisposed(),Object(xr.a)(this,e)},Object(An.d)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Object(K.a)(this,e,t,n)};var vr=n("n+ZZ");Object(An.d)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Object(vr.a)(this,e,t,n,r)};var wr=n("wCH+");Object(An.d)().prototype.max=function(e,t){return this.throwIfDisposed(),Object(wr.a)(this,e,t)},Object(An.d)().prototype.maximum=function(e){return this.throwIfDisposed(),Object(In.a)(this,e)};var Or=n("Ei6o");Object(An.d)().prototype.mean=function(e,t){return this.throwIfDisposed(),Object(Or.a)(this,e,t)};var kr=n("rm0a");Object(An.d)().prototype.min=function(e,t){return this.throwIfDisposed(),Object(kr.a)(this,e,t)};var Sr=n("8OX7");Object(An.d)().prototype.minimum=function(e){return this.throwIfDisposed(),Object(Sr.a)(this,e)};var Ir=n("k9tH");Object(An.d)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Object(Ir.a)(this,e,t)};var Nr=n("RhH0");Object(An.d)().prototype.mod=function(e){return this.throwIfDisposed(),Object(Nr.a)(this,e)},Object(An.d)().prototype.mul=function(e){return this.throwIfDisposed(),Object(p.a)(this,e)},Object(An.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(g.a)(this)};var Tr=n("91d6");Object(An.d)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Object(Tr.a)(this,e,t,n)};var Cr=n("1N4k");Object(An.d)().prototype.notEqual=function(e){return this.throwIfDisposed(),Object(Cr.a)(this,e)};var jr=n("4iwy");Object(An.d)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Object(jr.a)(this,e,t,n)};var Er=n("DbV5");Object(An.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(Er.a)(this)},Object(An.d)().prototype.pad=function(e,t){return this.throwIfDisposed(),Object(en.a)(this,e,t)};var Ar=n("6vQL");Object(An.d)().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Ar.a)(this,e,t,n,r,a,s)},Object(An.d)().prototype.pow=function(e){return this.throwIfDisposed(),Object(Tt.a)(this,e)};var _r=n("Ug8H");Object(An.d)().prototype.prelu=function(e){return this.throwIfDisposed(),Object(_r.a)(this,e)};var $r=n("867m");Object(An.d)().prototype.prod=function(e,t){return this.throwIfDisposed(),Object($r.a)(this,e,t)};var Rr=n("tQDl");Object(An.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Rr.a)(this)};var Fr=n("kXpR");Object(An.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(Fr.a)(this)};var Dr=n("Rqg+");Object(An.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(Dr.a)(this)},Object(An.d)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Object(I.a)(this,e.shape)},Object(An.d)().prototype.reshape=function(e){return this.throwIfDisposed(),Object(I.a)(this,e)};var Mr=n("c/ib");Object(An.d)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Object(Mr.a)(this,e,t,n)};var zr=n("D4ac");Object(An.d)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Object(zr.a)(this,e,t,n)},Object(An.d)().prototype.reverse=function(e){return this.throwIfDisposed(),Object(Pt.a)(this,e)};var Lr=n("th0q");Object(An.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(Lr.a)(this)};var Pr=n("CKnt");Object(An.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Pr.a)(this)},Object(An.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(De.a)(this)};var Br=n("s57M");Object(An.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(Br.a)(this)};var Vr=n("EWu9");Object(An.d)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Vr.a)(this,e,t,n,r,a,s)},Object(An.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(an.a)(this)};var Wr=n("Hfat");Object(An.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(Wr.a)(this)},Object(An.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(be.a)(this)},Object(An.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(ye.a)(this)},Object(An.d)().prototype.slice=function(e,t){return this.throwIfDisposed(),Object(ft.a)(this,e,t)};var Ur=n("X4fa");Object(An.d)().prototype.softmax=function(e){return this.throwIfDisposed(),Object(Ur.a)(this,e)};var Gr=n("n/2y");Object(An.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(Gr.a)(this)},Object(An.d)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Object(X.a)(this,e,t)},Object(An.d)().prototype.split=function(e,t){return this.throwIfDisposed(),Object(ie.a)(this,e,t)},Object(An.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(x.a)(this)},Object(An.d)().prototype.square=function(){return this.throwIfDisposed(),Object(v.a)(this)};var Hr=n("QYQ3");Object(An.d)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Object(Hr.a)(this,e)};var Kr=n("0fRV");Object(An.d)().prototype.squeeze=function(e){return this.throwIfDisposed(),Object(Kr.a)(this,e)},Object(An.d)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof An.a?[this,e]:[this,...e];return Object(wn.a)(n,t)},Object(An.d)().prototype.step=function(e){return this.throwIfDisposed(),Object(f.a)(this,e)};var qr=n("3hph");Object(An.d)().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Object(qr.a)(this,e,t,n,r,a,s,i,o)},Object(An.d)().prototype.sub=function(e){return this.throwIfDisposed(),Object(w.a)(this,e)},Object(An.d)().prototype.sum=function(e,t){return this.throwIfDisposed(),Object(N.a)(this,e,t)};var Xr=n("0wrZ");Object(An.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(Xr.a)(this)};var Zr=n("iIjY");Object(An.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(Zr.a)(this)},Object(An.d)().prototype.tile=function(e){return this.throwIfDisposed(),Object(Me.a)(this,e)},Object(An.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(h.a)(this,"bool")},Object(An.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(h.a)(this,"float32")},Object(An.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(h.a)(this,"int32")};var Yr=n("VhY8");Object(An.d)().prototype.topk=function(e,t){return this.throwIfDisposed(),Object(Yr.a)(this,e,t)},Object(An.d)().prototype.transpose=function(e){return this.throwIfDisposed(),Object(Oe.a)(this,e)};var Jr=n("hT5K");Object(An.d)().prototype.unique=function(e){return this.throwIfDisposed(),Object(Jr.a)(this,e)},Object(An.d)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Object(Le.a)(this,e,t)},Object(An.d)().prototype.unstack=function(e){return this.throwIfDisposed(),Object(kt.a)(this,e)},Object(An.d)().prototype.where=function(e,t){return this.throwIfDisposed(),Object(re.a)(e,this,t)},Object(An.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(j.a)(this)};class Qr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qr.prototype)}}class ea extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ea.prototype)}}class ta extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ta.prototype)}}class na extends Error{constructor(e){super(e),Object.setPrototypeOf(this,na.prototype)}}class ra extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ra.prototype)}}Error;class aa{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function sa(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ia(e,t){if(!e)throw new ra(t)}function oa(e,t){let n=0;for(const r of e)r===t&&n++;return n}function ua(e){return 1===e.length?e[0]:e}function ca(e){return Array.isArray(e)?e:[e]}function la(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function da(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let ha={};function pa(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function fa(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>fa(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?fa(t):e[n]=t.value)}}}function ma(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in ha)s=ha[a];else if(s=t[a],null==s)throw new ta(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new ta(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in ha?[o,u]=ha.className:i in t&&([o,u]=t[i]),null==o)throw new ta(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const n of Object.keys(ha))e[n]=ha[n];for(const a of Object.keys(n))e[a]=n[a];s.config.customObjects=e;const t=Object.assign({},ha);for(const a of Object.keys(n))ha[a]=n[a];fa(s.config);const r=u(o,s.config,n,a);return ha=Object.assign({},t),r}{const e=Object.assign({},ha);for(const r of Object.keys(n))ha[r]=n[r];const t=new o(s.config);return ha=Object.assign({},e),t}}}function ba(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ga(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function ya(e){if(null==e)throw new ta(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function xa(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ta(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function va(e,t,n=0,r=1/0){return ia(n>=0),ia(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function wa(e,t){Array.isArray(e)?(l.util.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>wa(e,`element ${n+1} of ${t}`))):l.util.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Oa(e)}.`)}function Oa(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>Oa(e)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function ka(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Sa=0;function Ia(){return Sa++}const Na={};function Ta(e=""){return e in Na||(Na[e]=0),Na[e]+=1,e+Na[e].toString()}const Ca=["channelsFirst","channelsLast"],ja=["nearest","bilinear"],Ea=["valid","same","causal"],Aa=["max","avg"],_a=["sum","mul","concat","ave"],$a=new Map;function Ra(e){xa(Ca,"DataFormat",e)}function Fa(e){xa(Ea,"PaddingMode",e)}function Da(e){xa(Aa,"PoolMode",e)}const Ma=[];function za(e,t){Ma.push(e);try{const e=t();return Ma.pop(),e}catch(n){throw Ma.pop(),n}}function La(e){if(!Va(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ma.length?"":Ma.join("/")+"/")+e}function Pa(e){if(!Va(e))throw new Error("Not a valid tensor name: '"+e+"'");$a.has(e)||$a.set(e,0);const t=$a.get(e);if($a.set(e,$a.get(e)+1),t>0){const n=`${e}_${t}`;return $a.set(n,1),n}return e}const Ba=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Va(e){return!!e.match(Ba)}function Wa(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Ua(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Ga(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Ha(e,t){if(t<e)throw new ta(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let Ka;function qa(){return null==Ka&&(Ka=Object(l.backend)().epsilon()),Ka}function Xa(e,t){return l.cast(e,t)}function Za(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),l.reshape(e,n)}function Ya(e,t,n){return Object(l.tidy)(()=>{switch(e.rank){case 1:return l.slice1d(e,t,n);case 2:return l.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return l.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return l.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return l.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return l.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ta(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Ja(e,t,n){return Object(l.tidy)(()=>{switch(e.rank){case 1:return l.slice1d(e,t,n);case 2:return l.slice2d(e,[0,t],[e.shape[0],n]);case 3:return l.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return l.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ta(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Qa(e,t,n,r){return Object(l.tidy)(()=>{switch(e.rank){case 1:return l.slice1d(e,t,n);case 2:switch(r){case 1:return Ya(e,t,n);case 2:return Ja(e,t,n);default:throw new ta(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Ya(e,t,n);case 2:return l.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Ja(e,t,n);default:throw new ta(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Ya(e,t,n);case 2:return l.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return l.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Ja(e,t,n);default:throw new ta(`The axis is not within the rank of the tensor ${r}`)}default:throw new ta(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function es(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),l.concat(e,t)}function ts(e,t){switch(e.rank){case 1:return l.concat1d([e,t]);case 2:return l.concat2d([e,t],0);case 3:return l.concat3d([e,t],0);case 4:return l.concat4d([e,t],0);default:throw new ta(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function ns(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ta(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return l.tile(e,t)}function rs(e,t=0,n=1,r,a){return l.randomNormal(e,t,n,r,a)}function as(e,t,n,r){if(e.rank<2||t.rank<2)throw new na(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new na(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return l.fused.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?os(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),s=a.pop();e=l.reshape(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),c=[...i,o],d=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=l.reshape(l.transpose(t,d),[u,-1]);const h=[...a,...c];return l.reshape(l.fused.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?os(e.rank,r,"channelsLast"):null,activation:n}),h)}}function ss(e,t,n){return Object(l.tidy)(()=>(t=Array.isArray(t)?Object(l.tensor1d)(t,"int32"):l.cast(t,"int32"),l.gather(e,t,n)))}function is(e){return l.mul(e,e)}function os(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ta(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return l.reshape(t,1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return l.reshape(t,1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===e){if("channelsFirst"===n)return l.reshape(t,1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===n)return l.reshape(t,1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===e){if("channelsFirst"===n)return l.reshape(t,1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===n)return l.reshape(t,1===r.length?[1,1,r[0]]:[1].concat(r))}else if(e<3)return t;throw new ta(`Unsupported input rank by biasAdd: ${t.rank}`)}function us(e,t,n){return Object(l.tidy)(()=>(null==n&&(n="channelsLast"),Ra(n),l.add(e,os(e.rank,t,n))))}function cs(e,t,n,r){return Object(l.tidy)(()=>l.dropout(e,t,n,r))}function ls(e,t,n=!1){return n?e():t()}const ds=["fanIn","fanOut","fanAvg"],hs=["normal","uniform","truncatedNormal"];class ps extends l.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class fs extends ps{apply(e,t){return Object(l.zeros)(e,t)}}fs.className="Zeros",l.serialization.registerClass(fs);class ms extends ps{apply(e,t){return Object(l.ones)(e,t)}}ms.className="Ones",l.serialization.registerClass(ms);class bs extends ps{constructor(e){if(super(),"object"!=typeof e)throw new ta(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ta(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Object(l.tidy)(()=>Object(l.mul)(Object(l.scalar)(this.value),Object(l.ones)(e,t)))}getConfig(){return{value:this.value}}}bs.className="Constant",l.serialization.registerClass(bs);class gs extends ps{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Object(l.randomUniform)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}gs.className="RandomUniform",l.serialization.registerClass(gs);class ys extends ps{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new na(`randomNormal does not support dType ${t}.`);return rs(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ys.className="RandomNormal",l.serialization.registerClass(ys);class xs extends ps{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new na(`truncatedNormal does not support dType ${t}.`);return Object(l.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}xs.className="TruncatedNormal",l.serialization.registerClass(xs);class vs extends ps{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Object(l.tidy)(()=>{if(2!==e.length||e[0]!==e[1])throw new ta("Identity matrix initializer can only be used for 2D square matrices.");return Object(l.mul)(this.gain,Object(l.eye)(e[0]))})}getConfig(){return{gain:this.gain}}}vs.className="Identity",l.serialization.registerClass(vs);class ws extends ps{constructor(e){if(super(),e.scale<0)throw new ta(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,xa(ds,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,xa(hs,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Ra(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Wa(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Wa(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Wa(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if(s/="fanIn"===this.mode?Math.max(1,r):"fanOut"===this.mode?Math.max(1,a):Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new na(`${this.getClassName()} does not support dType ${t}.`);return Object(l.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Object(l.randomUniform)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ws.className="VarianceScaling",l.serialization.registerClass(ws);class Os extends ws{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ws.className}}Os.className="GlorotUniform",l.serialization.registerClass(Os);class ks extends ws{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ws.className}}ks.className="GlorotNormal",l.serialization.registerClass(ks);class Ss extends ws{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ws.className}}Ss.className="HeNormal",l.serialization.registerClass(Ss);class Is extends ws{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ws.className}}Is.className="HeUniform",l.serialization.registerClass(Is);class Ns extends ws{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ws.className}}Ns.className="LeCunNormal",l.serialization.registerClass(Ns);class Ts extends ws{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ws.className}}Ts.className="LeCunNormal",l.serialization.registerClass(Ts);class Cs extends ps{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new na("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Object(l.tidy)(()=>{if(e.length<2)throw new na("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=rs(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=l.linalg.gramSchmidt(t);return e[0]>e[1]&&(n=Object(l.transpose)(n)),Object(l.mul)(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Cs.className="Orthogonal",l.serialization.registerClass(Cs);const js={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Es(e,t={}){return ma(e,l.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function As(e){return pa(e)}function _s(e){if("string"==typeof e){const t=e in js?js[e]:e;if("GlorotNormal"===t)return new ks;if("GlorotUniform"===t)return new Os;if("HeNormal"===t)return new Ss;if("HeUniform"===t)return new Is;if("LeCunNormal"===t)return new Ns;if("LeCunUniform"===t)return new Ts;{const e={};return e.className=t,e.config={},Es(e)}}return e instanceof ps?e:Es(e)}function $s(e){return Array.isArray(e)&&Array.isArray(e[0])}function Rs(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Fs(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ta(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ds(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new ta(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Ms(e){let t=0;for(const n of e)t+=0===n.shape.length?1:n.shape.reduce((e,t)=>e*t);return t}class zs{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ia(),this.originalName=La(n=null==n?"Variable":n),this.name=Pa(this.originalName),this.trainable_=r,this.constraint=a,this.val=l.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ls(e){return e.map(e=>e.read())}function Ps(e){e.forEach(e=>{e[0].write(e[1])})}class Bs{constructor(e){this.dtype=e.dtype,this.shape=e.shape,this.ndim=null!=e.shape?e.shape.length:e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Vs{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Ia(),null!=s&&(this.originalName=La(s),this.name=Pa(this.originalName)),this.rank=t.length}}let Ws=0;class Us{constructor(e,t){this.callArgs=t,this.id=Ws++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)e.push(null!=t?t.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Gs=0;class Hs extends l.serialization.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Gs++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=la(e)+"_"+Ta(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}this.initialWeights=null!=e.weights?e.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new ea(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ta(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ua(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ua(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Qr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Qr(`Layer ${this.name} is not connected, no input to return.`);return ua(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Qr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Qr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ua(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ca(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ca(this.inputSpec);if(e.length!==t.length)throw new ta(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new ta(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new ta(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new ta(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new ta(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new ta(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new ta(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ca(e);let r=!0;for(const s of n)if(!(s instanceof Vs)){r=!1;break}let a=!0;for(const s of n)if(s instanceof Vs){a=!1;break}if(r===a)throw new ta("Arguments to apply() must be all SymbolicTensors or all Tensors");return za(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ca(e))t.push(n.shape);this.build(ua(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=ca(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=ua(s),null!=this.activityRegularizer)throw new na("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=ca(e);const t=[];for(const n of e)t.push(n.shape);return ua(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new Vs(s,n,this,ca(e),t,this.name,r)):new Vs(s,r,this,ca(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new na("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Qr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Qr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ea(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ms(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ls(e?this.trainableWeights:this.weights)}setWeights(e){Object(l.tidy)(()=>{const t=this.weights;if(t.length!==e.length)throw new ta(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Ls(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!l.util.arraysEqual(s.shape,o.shape))throw new ta(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Ps(n)})}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ta(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():_s("zeros"));const u=r.apply(t,n),c=new zs(u,n,e,s,i);return u.dispose(),null!=a&&this.addLoss(()=>a.apply(c.read())),null==s&&(s=!0),s?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ca(e),null!=this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=ca(e);t=ca(t),n=ca(n),r=ca(r),a=Rs(a),s=Rs(s);const u=[],c=[],l=[];for(const d of o)u.push(d.sourceLayer),c.push(d.nodeIndex),l.push(d.tensorIndex);new Us({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Ks(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Ks(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class qs extends Hs{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ta("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ta("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ta("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ta("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Vs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Us({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ta(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Xs(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ta("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new qs({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}qs.className="InputLayer",l.serialization.registerClass(qs);class Zs{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Zs)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ta(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Object(l.cast)(t,e.dtype)}catch(n){throw new ta(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Vs){if(null==this.id2Value[e.id])throw new ta(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ta(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Vs){if(null==this.id2Value[e.id])throw new ta(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ta(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Object(l.dispose)(this.id2Mask)}}const Ys=new aa,Js=new aa;function Qs(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(e=>e.name),u=[],c=t.names();for(const l of o)-1!==c.indexOf(l)?u.push(t.getValue(l)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=o.join(",")+"|"+t.names().sort().join(",");let h,p=Ys.get(d);if(null==p){const e=function(e,t){l.util.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){const a=ti(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=ti(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:ei(r)}}(i,t);p=e.sorted,h=e.recipientCounts,Ys.put(d,p),Js.put(d,h)}h={},a||Object.assign(h,Js.get(d));const f=new Zs(t);for(let m=0;m<p.length;++m){if(null!=r){const e=Object(l.memory)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=p[m],s=e.sourceLayer;if(s instanceof qs)continue;const i=[],c=[],d=[];let b=!1;for(const n of e.inputs){const e=f.getValue(n),r=f.getMask(n);i.push(e),c.push(r),null!=r&&(b=!0),a||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}b&&((n=n||{}).mask=c[0]);const g=ca(s.apply(i,n));let y=null;s.supportsMasking&&(y=s.computeMask(i,c));const x=ni(e),v=Array.isArray(x)?x:[x];for(let t=0;t<v.length;++t){f.hasKey(v[t])||f.add(v[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(v[t].name);-1!==e&&(u[e]=g[t])}a||Object(l.dispose)(d)}return f.disposeMasks(),s?u:u[0]}function ei(e){const t={};for(const n in e)t[n]=e[n].size;return t}function ti(e,t){const n=new Set,r=[],a={};for(const o of t.names())n.add(o);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function ni(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function ri(e,t){return Object(l.tidy)(()=>l.sqrt(l.sum(l.mul(e,e),t,!0)))}Object(l.env)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=Ys&&Ys.setMaxEntries(e),null!=Js&&Js.setMaxEntries(e)});class ai extends l.serialization.Serializable{getConfig(){return{}}}class si extends ai{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(l.tidy)(()=>{const t=ri(e,this.axis),n=l.clipByValue(t,0,this.maxValue);return l.mul(e,l.div(n,l.add(qa(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}si.className="MaxNorm",l.serialization.registerClass(si);class ii extends ai{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(l.tidy)(()=>l.div(e,l.add(qa(),ri(e,this.axis))))}getConfig(){return{axis:this.axis}}}ii.className="UnitNorm",l.serialization.registerClass(ii);class oi extends ai{apply(e){return l.relu(e)}}oi.className="NonNeg",l.serialization.registerClass(oi);class ui extends ai{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(l.tidy)(()=>{const t=ri(e,this.axis),n=l.add(l.mul(this.rate,l.clipByValue(t,this.minValue,this.maxValue)),l.mul(1-this.rate,t));return l.mul(e,l.div(n,l.add(qa(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ui.className="MinMaxNorm",l.serialization.registerClass(ui);const ci={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function li(e){return pa(e)}function di(e,t={}){return ma(e,l.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function hi(e){return null==e?null:"string"==typeof e?di({className:e in ci?ci[e]:e,config:{}}):e instanceof ai?e:di(e)}function pi(e){return new si(e)}function fi(e){return new ii(e)}function mi(){return new oi}function bi(e){return new ui(e)}function gi(){return new fs}function yi(){return new ms}function xi(e){return new bs(e)}function vi(e){return new gs(e)}function wi(e){return new ys(e)}function Oi(e){return new xs(e)}function ki(e){return new vs(e)}function Si(e){return new ws(e)}function Ii(e){return new Os(e)}function Ni(e){return new ks(e)}function Ti(e){return new Ss(e)}function Ci(e){return new Is(e)}function ji(e){return new Ns(e)}function Ei(e){return new Ts(e)}function Ai(e){return new Cs(e)}async function _i(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Object(l.dispose)(r)}}function $i(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Ri;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Ri||(Ri={}));class Fi{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Di{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Mi extends Fi{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const a=Object(l.tidy)(()=>Object(l.add)(this.totals[r],Object(l.mul)(e,n)));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Object(l.tidy)(()=>{const e=Object(l.mul)(Object(l.div)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Object(l.keep)(t[n])}))}}class zi extends Fi{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)"number"!=typeof r[s]&&(e.push(r[s].data()),t.push(a),n.push(s))}const r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}}class Li extends Fi{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||l.nextFrame,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");l.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():l.util.now();return(...s)=>{const i=null!=n?n():l.util.now();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await _i(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await _i(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await _i(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await _i(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await _i(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):l.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await _i(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await _i(e),await this.trainEnd(e))}}function Pi(e,t){return null==e&&(e={}),e instanceof Fi?[e]:Array.isArray(e)&&e[0]instanceof Fi?e:ca(e).map(e=>new Li(e,t))}class Bi{constructor(){}static registerCallbackConstructor(e,t){l.util.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Bi.checkForDuplicate(t),null==Bi.constructors[e]&&(Bi.constructors[e]=[]),Bi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Bi.constructors)Bi.constructors[+t].forEach(t=>{if(t===e)throw new ta("Duplicate callback constructor.")})}static clear(){Bi.constructors={}}static createCallbacks(e){const t=[];for(const n in Bi.constructors){const r=+n;e>=r&&t.push(...Bi.constructors[r])}return t.map(e=>new e)}}function Vi(e,t,n,r,a,s,i,o,u){const c=new zi,l=[new Mi,...Bi.createCallbacks(t)];null!=e&&l.push(...e),l.push(c);const d=new Di(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:c}}function Wi(e,t={},n=!1){return ma(e,l.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function Ui(e,t){return Object(l.tidy)(()=>{"float32"!==e.dtype&&(e=l.cast(e,"float32"));const n=l.sum(is(e),t,!0),r=l.fill(n.shape,qa()),a=l.sqrt(l.maximum(n,r));return l.div(e,a)})}function Gi(e,t){return Object(l.tidy)(()=>l.mean(is(l.sub(t,e)),-1))}function Hi(e,t){return Object(l.tidy)(()=>l.mean(l.abs(l.sub(t,e)),-1))}function Ki(e,t){return Object(l.tidy)(()=>{const n=l.sub(e,t),r=l.clipByValue(l.abs(e),qa(),Number.MAX_VALUE),a=l.abs(l.div(n,r));return l.mul(100,l.mean(a,-1))})}function qi(e,t,n=!1){return Object(l.tidy)(()=>{if(n)t=l.softmax(t);else{const e=l.sum(t,t.shape.length-1,!0);t=l.div(t,e)}return t=l.clipByValue(t,qa(),1-qa()),l.neg(l.sum(l.mul(l.cast(e,"float32"),l.log(t)),t.shape.length-1))})}function Xi(e,t,n=!1){return Object(l.tidy)(()=>{const r=l.cast(l.floor(function(e){const t=[Wa(e.shape)];return l.reshape(e,t)}(e)),"int32"),a=(t=l.clipByValue(t,qa(),1-qa())).shape;return qi(l.reshape(l.oneHot(r,a[a.length-1]),a),t,n)})}function Zi(e,t){return Object(l.tidy)(()=>{let n;return n=l.clipByValue(t,qa(),1-qa()),n=l.log(l.div(n,l.sub(1,n))),l.mean(function(e,t){if(!l.util.arraysEqual(e.shape,t.shape))throw new ta(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Object(l.tidy)(()=>{const n=l.relu(t),r=l.neg(l.abs(t));return l.add(l.sub(n,l.mul(t,e)),l.log1p(l.exp(r)))})}(e,n),-1)})}function Yi(e,t){return Object(l.tidy)(()=>{const n=Ui(e,-1),r=Ui(t,-1),a=l.mul(n,r);return l.neg(l.sum(a,-1))})}Bi.constructors={};const Ji={meanSquaredError:Gi,meanAbsoluteError:Hi,meanAbsolutePercentageError:Ki,meanSquaredLogarithmicError:function(e,t){return Object(l.tidy)(()=>{const n=l.clipByValue(t,qa(),Number.MAX_VALUE),r=l.log(l.add(1,n)),a=l.clipByValue(e,qa(),Number.MAX_VALUE),s=l.log(l.add(1,a));return l.mean(is(l.sub(r,s)),-1)})},squaredHinge:function(e,t){return Object(l.tidy)(()=>{const n=l.maximum(0,l.sub(1,l.mul(e,t)));return l.mean(is(n),-1)})},hinge:function(e,t){return Object(l.tidy)(()=>{const n=l.maximum(0,l.sub(1,l.mul(e,t)));return l.mean(n,-1)})},categoricalHinge:function(e,t){return Object(l.tidy)(()=>{const n=l.sum(l.mul(e,t),-1),r=l.max(l.mul(l.sub(1,e),t),-1);return l.maximum(0,l.add(1,l.sub(r,n)))})},logcosh:function(e,t){return Object(l.tidy)(()=>{const n=Math.log(2),r=l.sub(t,e),a=l.sub(l.add(r,l.softplus(l.mul(-2,r))),n);return l.mean(a,-1)})},categoricalCrossentropy:qi,sparseCategoricalCrossentropy:Xi,binaryCrossentropy:Zi,kullbackLeiblerDivergence:function(e,t){return Object(l.tidy)(()=>{const n=l.clipByValue(e,qa(),1),r=l.clipByValue(t,qa(),1);return l.sum(l.mul(e,l.log(l.div(n,r))),-1)})},poisson:function(e,t){return Object(l.tidy)(()=>{const n=l.log(l.add(qa(),t));return l.mean(l.sub(t,l.mul(e,n)),-1)})},cosineProximity:Yi};function Qi(e){if("string"==typeof e){if(e in Ji)return Ji[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ta(t)}return e}function eo(e,t){return Object(l.tidy)(()=>{const n=l.mul(.5,l.onesLike(t)),r=Xa(l.greater(t,n),e.dtype);return l.mean(l.equal(e,r),-1)})}function to(e,t){return Object(l.tidy)(()=>Xa(l.equal(l.argMax(e,-1),l.argMax(t,-1)),"float32"))}function no(e,t){return Object(l.tidy)(()=>l.cast(l.sum(l.logicalAnd(l.equal(e,1),l.equal(t,1))),"float32"))}function ro(e,t){return Object(l.tidy)(()=>{const n=no(e,t),r=function(e,t){return Object(l.tidy)(()=>l.cast(l.sum(l.logicalAnd(l.equal(e,0),l.equal(t,1))),"float32"))}(e,t),a=l.add(n,r);return l.cast(l.where(l.greater(a,0),l.div(n,a),0),"float32")})}function ao(e,t){return Zi(e,t)}function so(e,t){return e.rank===t.rank&&(e=l.squeeze(e,[e.rank-1])),(t=l.argMax(t,-1)).dtype!==e.dtype&&(t=l.cast(t,e.dtype)),l.cast(l.equal(e,t),"float32")}const io=qi,oo=Xi,uo={binaryAccuracy:eo,categoricalAccuracy:to,precision:ro,categoricalCrossentropy:io,sparseCategoricalCrossentropy:oo,mse:Gi,MSE:Gi,mae:Hi,MAE:Hi,mape:Ki,MAPE:Ki,cosine:Yi};function co(e){if("string"==typeof e&&e in uo)return uo[e];if("string"!=typeof e&&null!=e)return e;throw new ta(`Unknown metric ${e}`)}function lo(e){if(ia(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Ji))if(Ji[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(uo))if(uo[n]===e){t=n;break}return void 0!==t?t:e.name}}function ho(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!po(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function po(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!po(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!po(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function fo(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function mo(e,t,n){let r,a;try{a=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(s){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(s){r="multiple"}fo([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function bo(e,t,n,r){let a,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(l){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(l){a="multiple"}const i=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e)i.push(`${d.inboundLayers[e].name}[${d.nodeIndices[e]}][${d.tensorIndices[e]}]`);const o=e.name,u=e.getClassName(),c=0===i.length?"":i[0];fo([`${o} (${u})`,s,a,e.countParams().toString(),c],t,r);for(let d=1;d<i.length;++d)fo(["","","","",i[d]],t,r)}function go(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function yo(e,t){if(null===e)return null;if("string"==typeof e)return da(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];go(t,a,r)?n.push(r):n.push(yo(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=da(n);t[e]=yo(r,e)}}return t}}function xo(e,t){if(null==e)return null;if("string"==typeof e)return la(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];go(t,a,r)?n.push(r):n.push(xo(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[la(n)]="name"!==n&&"className"!==n||"string"!=typeof r?xo(r,n):r}return t}}const vo="3.18.0";class wo extends Hs{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Ta(e)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(e.inputs)?e.inputs.slice():[e.inputs],this.outputs=Array.isArray(e.outputs)?e.outputs.slice():[e.outputs],ga(this.inputs).length!==this.inputs.length)throw new ta(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);ga(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const g of this.outputs){const e=g.nodeIndex,t=g.tensorIndex;this.outputLayers.push(g.sourceLayer),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(t)}for(const g of this.inputs){const e=g.sourceLayer,t=g.nodeIndex,n=g.tensorIndex;ia(0===t,"input layer has >1 nodes"),ia(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let g=0;g<this.inputLayers.length;g++){const t=this.inputLayers[g];if(!(t instanceof qs))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${g} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const g of this.outputLayers)this.outputNames.push(g.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new ea(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(c))return;this.containerNodes.add(wo.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let s=0;s<l;s++)o(c.inputTensors[s],t,n,c.inboundLayers[s],c.nodeIndices[s],c.tensorIndices[s]);for(t.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},u=[],c=[];for(const g of this.outputs)o(g,u,c);const l=i.slice().reverse();for(const g of l){n[g.id]=g,g.id in t||(t[g.id]=0);let e=t[g.id];e=Math.max(e,null==r[g.outboundLayer.id]?0:r[g.outboundLayer.id]),r[g.outboundLayer.id]=e,a[g.outboundLayer.id]=g.outboundLayer,t[g.id]=e;for(let r=0;r<g.inboundLayers.length;r++){const a=g.inboundLayers[r].inboundNodes[g.nodeIndices[r]];t[a.id]=Math.max(e+1,null==t[a.id]?0:t[a.id]),n[a.id]=a}}const d={};for(const g in t){const e=t[g];e in d||(d[e]=[]),d[e].push(n[g])}const h={};for(const g in r){const e=r[g];e in h||(h[e]=[]),h[e].push(a[g])}let p=Object.keys(h).map(e=>parseInt(e,10)).sort(ba);this.layers=[];for(const g of p){const e=h[g];e.sort((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof wo&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map(e=>parseInt(e,10)).sort(ba);const f=this.inputs.slice(),m=[];for(const g of p)for(const e of d[g]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new ea(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const b=this.layers.map(e=>e.name);for(const g of b){const e=b.filter(e=>e===g).length;if(1!==e)throw new ea(`The name "${g}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new Us({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ta("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const s of this.layers)for(const e of s.weights){if(null!=n[e.originalName])throw new ta(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const a=[];for(const s in e){let r=s;if(null==n[s]){const e=s.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])a.push([n[r],e[s]]);else if(t)throw new ta(`Provided weight data has no target variable: ${s}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ta(`${e.length} of ${r} weights are not set: ${e}`)}Ps(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${vo}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=xo(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Object(l.tidy)(()=>{e=ca(e);const n=new Zs;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Qs(this.outputs,n,t)})}computeMask(e,t){return Object(l.tidy)(()=>{let n;return e=ca(e),n=null==t?sa(null,e.length):ca(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=Rs(e);if(t.length!==this.inputLayers.length)throw new ta(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++)n[this.inputLayers[i].name+"_0_0"]=t[i];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(ba);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++)r.push(n[`${t.inboundLayers[i].name}_${t.nodeIndices[i]}_${t.tensorIndices[i]}`]);const a=Rs(e.computeOutputShape(ua(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++)n[`${e.name}_${s}_${t}`]=a[t]}}const a=[],s=[];for(let i=0;i<this.outputLayers.length;i++)s.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`);for(let i=0;i<s.length;i++){const e=s[i];ia(e in n),a.push(n[e])}return ua(a)}runInternalGraph(e,t){null==t&&(t=sa(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o)n[this.inputs[o].id]=[e[o],t[o]];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(ba);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(const t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,i,o,u,c={};if(null!=t.callArgs&&(c=t.callArgs),1===s.length){const[t,n]=s[0];null==c.mask&&(c.mask=n),o=ca(e.call(t,c)),u=ca(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map(e=>e[0]),i=s.map(e=>e[1]),null==c.mask&&(c.mask=i),o=ca(e.call(r,c)),u=ca(e.computeMask(r,i));if(e.activityRegularizer)throw new na("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e)n[a[e].id]=[o[e],u[e]]}}}const a=[],s=[],i=[];for(const o of this.outputs){ia(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),a.push(e),s.push(t)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof wo?1:0;for(let e=0;e<r.inboundNodes.length;e++){const a=wo.nodeKey(r,e);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ta(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ta("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new ta(`No such layer: ${e}`)}calculateLosses(){return Object(l.tidy)(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=wo.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),r=i.getConfig(),a=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],r=wo.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(s){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.tensorIndices[r];let i=t[wo.nodeKey(a,e.nodeIndices[r])];null==i&&(i=0),n.push([a.name,i,s,o])}a.push(n)}}}const o={};o.name=i.name,o.className=e,o.config=r,o.inboundNodes=a,n.push(o)}e.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=wo.nodeKey(e,this.inputLayersNodeIndices[i]);if(!this.containerNodes.has(n))continue;let a=t[n];null==a&&(a=0),r.push([e.name,a,this.inputLayersTensorIndices[i]])}e.inputLayers=r;const a=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=wo.nodeKey(e,this.outputLayersNodeIndices[i]);if(!this.containerNodes.has(n))continue;let r=t[n];null==r&&(r=0),a.push([e.name,r,this.outputLayersTensorIndices[i]])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],c=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const l=a[o];if(l.inboundNodes.length<=u)return void i(e,t);n.push(l.inboundNodes[u].outputTensors[c])}n.length>0&&e.apply(ua(n),r)}function u(e){const n=e.name,s=Wi(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new ta(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)})}const c=t.name,l=t.layers;for(const m of l)u(m);for(;!ya(s);)for(const e of l){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],h=[],p=t.inputLayers;for(const m of p){const e=m[0],t=m[1],n=m[2];ia(e in a),d.push(a[e].inboundNodes[t].outputTensors[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];ia(e in a),h.push(a[e].inboundNodes[t].outputTensors[n])}return new e({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new ta("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Object(l.tidy)(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function Oo(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided classWeight is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{n.push(t in e?e[t]:null)}),n}throw new Error(`The model has multiple (${r}) outputs, so classWeight must be either an array with ${r} elements or an object with ${t} keys. Provided classWeight not understood: ${JSON.stringify(e)}`)}(e,t)}async function ko(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Object(l.tidy)(()=>{if(1===e.shape.length)return Object(l.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return Object(l.argMax)(e,t)}if(1===e.shape[1])return Object(l.reshape)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());Object(l.dispose)(t);const a=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])}),Object(l.tensor1d)(a,"float32")}return null}function So(e,t){return Object(l.mul)(e,t)}function Io(e,t){let n,r;n=t.xs,r=t.ys,l.util.assert(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=No("input",e.inputNames,n),s=No("output",e.outputNames,r),i=a[0].shape[0];l.util.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),l.util.assert(s.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let o=0;o<a.length;o++)l.util.assert(a[o].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[o]} has ${a[o].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let o=0;o<s.length;o++)l.util.assert(s[o].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[o]} has ${s[o].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:s}}function No(e,t,n){if(n instanceof l.Tensor)return[n];if(Array.isArray(n))return l.util.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const a of t){if(null==n[a])throw new ta(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function To(e){return"function"==typeof e.iterator}function Co(e){l.util.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function jo(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>Ya(e,t,n-t)):Ya(e,t,n-t)}function Eo(e,t){return l.tidy(()=>null==e?null:Array.isArray(e)?e.map(e=>Eo(e,t)):ss(e,"int32"===t.dtype?t:l.cast(t,"int32")))}function Ao(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function _o(e){const t=[];e instanceof l.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Za(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function $o(e,t){if(null==e)return;const n=[];if(t instanceof l.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const a in t)n.push(t[a].id);const r=[];if(e instanceof l.Tensor)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const a in e){const t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach(e=>{e.isDisposed||e.dispose()})}function Ro(e){return Array.isArray(e)}function Fo(e){return!function(e){return e instanceof l.Tensor}(e)&&!Ro(e)}function Do(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Ro(e)&&e.length>0)t=!0;else if(Fo(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ta(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let s;if(Fo(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new ta(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Ro(e)){if((e=e).length!==t.length)throw new ta(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new ta(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=_o(s),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new ta(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!r)continue;const s=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&s!==o)throw new ta(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return s}function Mo(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new ta(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new ta(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new ta(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=e.shape[s],u=n[i][s];if(null!=u&&u!==o)throw new ta(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class zo extends wo{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ta("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(const a of e.layers){let e=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),fo(s,n,r),r("=".repeat(t));const o=e.layers;for(let l=0;l<o.length;++l)a?mo(o[l],n,r):bo(o[l],n,i,r),r((l===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=Ms(null!=e.collectedTrainableWeights?e.collectedTrainableWeights:e.trainableWeights),t}(e),c=Ms(e.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>l.train.adagrad(.01),Adadelta:()=>l.train.adadelta(1,.95,qa()),Adam:()=>l.train.adam(.001,.9,.999,qa()),Adamax:()=>l.train.adamax(.002,.9,.999,qa(),0),RMSProp:()=>l.train.rmsprop(.001,.9,0,qa()),SGD:()=>l.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ta(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof l.Optimizer))throw new ta("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ta(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>Qi(e))}else{const n=Qi(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ta(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Qi(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s];this.feedOutputNames.push(this.outputNames[s]),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],za("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};za("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Zi?-1!==["accuracy","acc"].indexOf(i)?r=eo:-1!==["crossentropy","ce"].indexOf(i)&&(r=ao):this.lossFunctions[e]===Xi?-1!==["accuracy","acc"].indexOf(i)?r=so:-1!==["crossentropy","ce"].indexOf(i)&&(r=oo):-1!==["accuracy","acc"].indexOf(i)?r=to:-1!==["crossentropy","ce"].indexOf(i)&&(r=io),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=co(i);s=e,n=""+lo(i)}let t;za(n,()=>{t=s}),a(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Co(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);return this.makeTestFunction(),ua(this.testLoop(this.testFunction,s,r,n.verbose,n.steps))}finally{$o(a[0],e),$o(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new na("Verbose mode is not implemented yet.");l.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=l.tidy(()=>{if(t.value){const{xs:n,ys:r}=Io(e,t.value),i=n.concat(r),c=l.tidy(()=>a(i));if(l.dispose(i),0===u)for(let e=0;e<c.length;++e)s.push(Object(l.scalar)(0));const d=i[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=s[e];s[e]=l.tidy(()=>l.add(s[e],l.mul(d,t))),u>0&&l.dispose(n)}l.dispose(c),o+=d,++u}return s}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<s.length;++c){const e=s[c];s[c]=l.div(s[c],o),l.dispose(e)}return ua(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new ta(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ta(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ta("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=this.retrieveSymbolicTensors(n?t:[t]),a=new Zs;if(e instanceof l.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ta(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new ta(`No value is provided for the model's input ${i.name}`);a.add(i,t)}const s=Qs(r,a);return n?s:s[0]}retrieveSymbolicTensors(e){const t=sa(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new ta(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return l.tidy(()=>{const r=this.checkNumSamples(e);if(n)throw new na("Verbose predictLoop() is not implemented yet.");const a=Ao(r,t),s=this.outputs.map(e=>[]);for(let t=0;t<a.length;++t)l.tidy(()=>{const n=jo(e,a[t][0],a[t][1]),r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});const s=new Zs(r);return Qs(this.outputs,s)}).forEach((e,t)=>s[t].push(e));return ua(s.map(e=>l.concat(e,0)))})}predict(e,t={}){const n=_o(e);Mo(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Co(r),this.predictLoop(n,r)}finally{$o(n,e)}}predictOnBatch(e){Mo(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new ea("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let s=0;s<this.feedOutputShapes.length;++s){const e=this.feedOutputShapes[s];a.push(this.feedLossFns[s]===Xi?e.slice(0,e.length-1).concat([1]):e)}if(function(e,t,n){const r=ga(e.map(e=>e.shape[0]));r.sort();const a=ga(t.map(e=>e.shape[0]));if(a.sort(),r.length>1)throw new ta(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(a.length>1)throw new ta(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(r.length>0&&a.length>0&&!l.util.arraysEqual(r,a))throw new ta(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Do(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Do(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[Gi,Zi,qi];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===qi&&1===s.shape[s.shape.length-1])throw new ta(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new ta(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new ta(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Oo(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await ko(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return l.tidy(()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new na("Verbose mode is not implemented yet.");if(null!=a)throw new na("steps mode in testLoop() is not implemented yet");{const r=Ao(s,n),a=Object(l.tensor1d)(Ha(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=Ya(a,s,o-s),c=Eo(t,u),d=e(c);if(0===n)for(let e=0;e<d.length;++e)i.push(Object(l.scalar)(0));for(let e=0;e<d.length;++e)i[e]=l.add(i[e],l.mul(o-s,d[e]))}for(let e=0;e<i.length;++e)i[e]=l.div(i[e],s)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;oa(e,r)>1&&(a+=`_${oa(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Zs(e),o=Qs(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=a[n]&&(e=So(e,a[n]));const s=l.mean(e);t.push(s),u=0===n?e:l.add(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][1];e=l.mean((0,this.metricsTensors[n][0])(r[t],o[t]))}l.keep(e),s.push(e)}return u=l.mean(u),this.calculateLosses().forEach(e=>{u=l.add(u,e)}),u},!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>l.tidy(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Zs(s),o=Qs(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=l.mean((0,this.lossFunctions[e])(a[e],o[e]));n=0===e?r:l.add(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][1],r=l.mean((0,this.metricsTensors[e][0])(a[n],o[n]));t.push(r)}return t})}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,c,d,h,p;e.isTraining=!0;try{const f=null==r.batchSize?32:r.batchSize;Co(f);const m=!1,b=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,m,f);a=b[0],s=b[1],p=b[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new na("validationData including sample weights is not supported yet."):new ta(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],c=r.validationData[1];const t=!0,n=await e.standardizeUserData(u,c,null,null,t,f);d=n[0],h=n[1],g=d.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];d=jo(a,e,t),i=a,a=jo(a,0,e),h=jo(s,e,t),o=s,s=jo(s,0,e),g=d.concat(h)}else null!=r.validationSteps&&(y=!0);const x=a.concat(s).concat(p);e.checkTrainableWeightsConsistency();const v=e.makeTrainFunction(),w=e.getDedupedMetricsNames();let O,k;y?(e.makeTestFunction(),O=e.testFunction,k=w.slice().concat(w.map(e=>"val_"+e))):(O=null,g=[],k=w.slice());const S=Pi(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,u,c,d,h,p,f,m){null==a&&(a=32),null==s&&(s=1),null==d&&(d=!0),null==p&&(p=0);let b=!1;null!=u&&null!=c&&(b=!0);const g=e.checkNumSamples(n,a,null,"steps_per_epoch");let y;null!=g&&(y=Ha(0,g)),null==i&&(i=1);const{callbackList:x,history:v}=Vi(o,i,s,p,g,null,a,b,h);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let w=p;w<s;++w){await x.onEpochBegin(w);const s={};{if("batch"===d)throw new na("batch shuffling is not implemneted yet");d&&l.util.shuffle(y);const i=Object(l.tensor1d)(y),o=Ao(g,a);for(let d=0;d<o.length;++d){const h={};if(await x.onBatchBegin(d,h),l.tidy(()=>{const p=o[d][0],f=o[d][1],m=Ya(i,p,f-p);h.batch=d,h.size=f-p;const g=Eo(n,m),y=t(g);for(let e=0;e<r.length;++e){const t=y[e];h[r[e]]=t,l.keep(t)}if(d===o.length-1&&b){const t=e.testLoop(u,c,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];l.keep(a),s["val_"+n]=a}}}),await x.onBatchEnd(d,h),$i(h),e.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(w,s),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,v,x,w,f,r.epochs,r.verbose,S,O,g,r.shuffle,k,r.initialEpoch)}finally{e.isTraining=!1,$o(a,t),$o(s,n),$o(i,t),$o(o,n),$o(d,u),$o(h,c),null!=p&&l.dispose(p)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(l.util.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),l.util.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),l.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),l.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),l.util.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(To(n.validationData))l.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const e=function(e){if(3===e.length)throw new na("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const d=Pi(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=Vi(d,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,c);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,b=await t.iterator();for(;m<n.epochs;){const c={};await p.onEpochBegin(m);let d=0,h=0;for(r||(b=await t.iterator());!r||d<n.batchesPerEpoch;){const t=await b.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=Io(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=Oo(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await ko(a[e],null,t[e]))}const c=r.concat(a).concat(i),f=o(c);l.dispose(c);for(let e=0;e<u.length;++e){const t=f[e];s[u[e]]=t,l.keep(t)}await p.onBatchEnd(h,s),$i(s),h++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(a){let t;t=To(n.validationData)?ca(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ca(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,c),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const o of s){const e=await o.data();i.push(e[0])}return l.dispose(s),$o(n[0],e),$o(n[1],t),ua(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=l.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-l.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=la(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>la(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=la(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[la(lo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>la(lo(e)));{const e={};for(const t in this.metrics)e[t]=la(lo(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Wi(yo(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=da(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>da(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=da(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>da(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=da(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=l.io.getSaveHandlers(e);if(0===t.length)throw new ta(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ta(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ta("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await l.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${vo}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await l.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=l.io.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(ho(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){ho(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}zo.className="Model",l.serialization.registerClass(zo);class Lo extends zo{}async function Po(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=Wi(yo(n),t);if(null!=e.weightsManifest){const t=await l.io.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(e=>e.originalName)),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Object(l.dispose)(t)}return r}Lo.className="Functional",l.serialization.registerClass(Lo);class Bo extends zo{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ta("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new ta(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Bo||e instanceof zo;let n;if(t){if(n=e,1!==n.outputs.length)throw new ta("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ta("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ta("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Xs({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ta(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ta("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ks(this.outputs[0])}this.inboundNodes=[],new Us({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:sa(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ds(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new ea("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new ea("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new ea("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new ea("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ta("Legacy serialization format not supported yet.");a=t}else l.util.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Bo))throw new na(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const o of a){const e=Wi(o,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new ta("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ta("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Vo(e){return new zo(e)}function Wo(e){return new Bo(e)}function Uo(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=l.io.getLoadHandlers(e,t);if(0===n.length)n.push(l.io.browserHTTPRequest(e,t));else if(n.length>1)throw new ta(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new ta("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Wi(yo(a),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new ta("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=l.io.decodeWeights(e,t),r={},a=[];return t.forEach(e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Object(l.dispose)(e),Object(l.dispose)(t.map(e=>e.tensor))}return o}(e,0,t)}(e,t)}function Go(e){return Xs(e)}function Ho(e,t){Bi.registerCallbackConstructor(e,t)}Bo.className="Sequential",l.serialization.registerClass(Bo);class Ko extends l.serialization.Serializable{getConfig(){return{}}}class qo extends Ko{apply(e,t=1){return function(e,t=1){if(1!==t)throw new na(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return l.elu(e)}(e,t)}}qo.className="elu",l.serialization.registerClass(qo);class Xo extends Ko{apply(e){return l.selu(e)}}Xo.className="selu",l.serialization.registerClass(Xo);class Zo extends Ko{apply(e){return l.relu(e)}}Zo.className="relu",l.serialization.registerClass(Zo);class Yo extends Ko{apply(e){return Object(l.tidy)(()=>l.minimum(6,l.relu(e)))}}Yo.className="relu6",l.serialization.registerClass(Yo);class Jo extends Ko{apply(e){return e}}Jo.className="linear",l.serialization.registerClass(Jo);class Qo extends Ko{apply(e){return l.sigmoid(e)}}Qo.className="sigmoid",l.serialization.registerClass(Qo);class eu extends Ko{apply(e){return function(e){return Object(l.tidy)(()=>{const t=l.add(.5,l.mul(.2,e));return l.clipByValue(t,0,1)})}(e)}}eu.className="hardSigmoid",l.serialization.registerClass(eu);class tu extends Ko{apply(e){return l.softplus(e)}}tu.className="softplus",l.serialization.registerClass(tu);class nu extends Ko{apply(e){return function(e){return Object(l.tidy)(()=>l.div(e,l.add(l.abs(e),1)))}(e)}}nu.className="softsign",l.serialization.registerClass(nu);class ru extends Ko{apply(e){return l.tanh(e)}}ru.className="tanh",l.serialization.registerClass(ru);class au extends Ko{apply(e,t=-1){return l.softmax(e,t)}}au.className="softmax",l.serialization.registerClass(au);class su extends Ko{apply(e,t=-1){return l.logSoftmax(e,t)}}su.className="logSoftmax",l.serialization.registerClass(su);class iu extends Ko{apply(e,t=1){return Object(l.tidy)(()=>l.mul(l.sigmoid(l.mul(e,t)),e))}}iu.className="swish",l.serialization.registerClass(iu);class ou extends Ko{apply(e){return Object(l.tidy)(()=>l.mul(e,l.tanh(l.softplus(e))))}}function uu(e){return e.getClassName()}function cu(e,t={}){return ma(e,l.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function lu(e){if(null==e)return cu({className:"linear",config:{}});if("string"==typeof e){const t={};return t.className=e,t.config={},cu(t)}return e instanceof Ko?e:cu(e)}function du(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}ou.className="mish",l.serialization.registerClass(ou);class hu extends l.serialization.Serializable{}class pu extends hu{constructor(e){super(),du(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Object(l.tidy)(()=>{let t=Object(l.zeros)([1]);return this.hasL1&&(t=Object(l.add)(t,Object(l.sum)(l.mul(this.l1,Object(l.abs)(e))))),this.hasL2&&(t=Object(l.add)(t,Object(l.sum)(l.mul(this.l2,is(e))))),l.reshape(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}pu.className="L1L2",l.serialization.registerClass(pu);const fu={l1l2:"L1L2"};function mu(e){return pa(e)}function bu(e,t={}){return ma(e,l.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function gu(e){return null==e?null:"string"==typeof e?bu({className:e in fu?fu[e]:e,config:{}}):e instanceof hu?e:bu(e)}class yu extends Hs{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Fs(e);let n=Object(l.relu)(e);return null!=this.maxValue&&(n=Object(l.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}yu.className="ReLU",l.serialization.registerClass(yu);class xu extends Hs{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Fs(e);return Object(l.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}xu.className="LeakyReLU",l.serialization.registerClass(xu);class vu extends Hs{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=_s(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gu(e.alphaRegularizer),this.alphaConstraint=hi(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ta(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ds(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Bs({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Fs(e),Object(l.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:As(this.alphaInitializer),alphaRegularizer:mu(this.alphaRegularizer),alphaConstraint:li(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}vu.className="PReLU",l.serialization.registerClass(vu);class wu extends Hs{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new na(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Fs(e);return Object(l.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}wu.className="ELU",l.serialization.registerClass(wu);class Ou extends Hs{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Fs(e);return Object(l.mul)(n,Object(l.cast)(Object(l.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Ou.className="ThresholdedReLU",l.serialization.registerClass(Ou);class ku extends Hs{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new au).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Fs(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Su(e,t,n){if("number"==typeof e)return sa(e,t);if(e.length!==t)throw new ta(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new ta(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function Iu(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Nu(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Ga([n-t,0]);else{if("same"!==r)throw new ta(`Unsupport padding mode: ${r}.`);e*=t}return e}function Tu(e,t){return Object(l.tidy)(()=>(Ra(t),"channelsFirst"===t?l.transpose(e,[0,2,3,1]):e))}function Cu(e,t){return Object(l.tidy)(()=>(Ra(t),"channelsFirst"===t?l.transpose(e,[0,2,3,4,1]):e))}function ju(e,t,n,r=[1,1],a="valid",s,i,o=null){return Object(l.tidy)(()=>{if(null==s&&(s="channelsLast"),Ra(s),3!==e.rank&&4!==e.rank)throw new ta(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ta(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Tu(e,s);if("causal"===a)throw new na("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=l.fused.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=l.transpose(u,[0,3,1,2])),u})}ku.className="Softmax",l.serialization.registerClass(ku);class Eu extends Hs{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Eu.verifyArgs(t),this.rank=e,wa(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new na(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Su(t.kernelSize,e,"kernelSize"),this.strides=Su(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Fa(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ra(this.dataFormat),this.activation=lu(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=_s(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=hi(t.biasConstraint),this.biasRegularizer=gu(t.biasRegularizer),this.activityRegularizer=gu(t.activityRegularizer),this.dilationRate=Su(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ta(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ta(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ta(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ia("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!va(e.kernelSize,"number",1,3))throw new ta(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:uu(this.activation),useBias:this.useBias,biasInitializer:As(this.biasInitializer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),biasConstraint:li(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Au extends Eu{constructor(e,t){super(e,t),this.kernel=null,Au.verifyArgs(t),this.filters=t.filters,wa(this.filters,"filters"),this.kernelInitializer=_s(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=hi(t.kernelConstraint),this.kernelRegularizer=gu(t.kernelRegularizer)}build(e){e=Ds(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ta(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Object(l.tidy)(()=>{let t;e=Fs(e);const n=null==this.bias?null:this.bias.read(),r=ka(this.activation.getClassName());if(null!=r&&2===this.rank)t=ju(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return Object(l.tidy)(()=>{if(null==s&&(s="channelsLast"),Ra(s),3!==e.shape.length)throw new ta(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ta(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ta(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=l.transpose(e,[0,2,1])),"causal"===a)throw new na("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=l.conv1d(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=us(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=ju(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new na("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return Object(l.tidy)(()=>{if(null==s&&(s="channelsLast"),Ra(s),4!==e.rank&&5!==e.rank)throw new ta(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ta(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Cu(e,s);if("causal"===a)throw new na("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=l.conv3d(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=us(o,n)),"channelsFirst"===s&&(o=l.transpose(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=Ds(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){const e=Iu(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:As(this.kernelInitializer),kernelRegularizer:mu(this.kernelRegularizer),kernelConstraint:li(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ta(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class _u extends Au{constructor(e){super(2,e),_u.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!va(e.kernelSize,"number",1,2))throw new ta(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}_u.className="Conv2D",l.serialization.registerClass(_u);class $u extends Au{constructor(e){super(3,e),$u.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ta(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}$u.className="Conv3D",l.serialization.registerClass($u);class Ru extends _u{constructor(e){if(super(e),this.inputSpec=[new Bs({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ta(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ds(e)).length)throw new ta("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ta("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Bs({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return l.tidy(()=>{let t=Fs(e);if(4!==t.shape.length)throw new ta(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape;let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const s=n[a],i=this.kernelSize[1],o=this.strides[1],u=[n[0],Nu(n[r],this.strides[0],this.kernelSize[0],this.padding),Nu(s,o,i,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=l.transpose(t,[0,2,3,1]));let c=l.conv2dTranspose(t,this.kernel.read(),u,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=l.transpose(c,[0,3,1,2])),null!=this.bias&&(c=us(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c})}computeOutputShape(e){const t=(e=Ds(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Nu(t[r],o,s,this.padding),t[a]=Nu(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ru.className="Conv2DTranspose",l.serialization.registerClass(Ru);class Fu extends $u{constructor(e){if(super(e),this.inputSpec=[new Bs({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ta(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ds(e)).length)throw new ta("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ta("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Bs({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return l.tidy(()=>{let t=Fs(e);if(5!==t.shape.length)throw new ta(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape;let r,a,s;"channelsFirst"===this.dataFormat?(s=2,r=3,a=4):(s=1,r=2,a=3);const i=n[r],o=n[a],u=this.kernelSize[1],c=this.kernelSize[2],d=this.strides[1],h=this.strides[2],p=[n[0],Nu(n[s],this.strides[0],this.kernelSize[0],this.padding),Nu(i,d,u,this.padding),Nu(o,h,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=l.transpose(t,[0,2,3,4,1]));let f=l.conv3dTranspose(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=l.transpose(f,[0,4,1,2,3])),null!==this.bias&&(f=us(f,this.bias.read(),this.dataFormat)),null!==this.activation&&(f=this.activation.apply(f)),f})}computeOutputShape(e){const t=(e=Ds(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],l=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=Nu(t[r],c,i,this.padding),t[a]=Nu(t[a],l,o,this.padding),t[s]=Nu(t[s],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Fu.className="Conv3DTranspose",l.serialization.registerClass(Fu);class Du extends Au{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ta("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ta("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ta(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=_s(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gu(t.depthwiseRegularizer),this.depthwiseConstraint=hi(t.depthwiseConstraint),this.pointwiseInitializer=_s(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gu(t.pointwiseRegularizer),this.pointwiseConstraint=hi(t.pointwiseConstraint)}build(e){if((e=Ds(e)).length<this.rank+2)throw new ta(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ta(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):null,this.inputSpec=[new Bs({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Object(l.tidy)(()=>{let t;if(e=Fs(e),1===this.rank)throw new na("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=l.transpose(e,[0,2,3,1])),t=l.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=us(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=l.transpose(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=As(this.depthwiseInitializer),e.pointwiseInitializer=As(this.pointwiseInitializer),e.depthwiseRegularizer=mu(this.depthwiseRegularizer),e.pointwiseRegularizer=mu(this.pointwiseRegularizer),e.depthwiseConstraint=li(this.depthwiseConstraint),e.pointwiseConstraint=li(this.pointwiseConstraint),e}}Du.className="SeparableConv";class Mu extends Du{constructor(e){super(2,e)}}Mu.className="SeparableConv2D",l.serialization.registerClass(Mu);class zu extends Au{constructor(e){super(1,e),zu.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!va(e.kernelSize,"number",1,1))throw new ta(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}zu.className="Conv1D",l.serialization.registerClass(zu);class Lu extends Hs{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Object(l.tidy)(()=>{if(e=Fs(e),"channelsLast"===this.dataFormat){const t=Qa(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Qa(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Qa(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Qa(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Lu.className="Cropping2D",l.serialization.registerClass(Lu);class Pu extends Hs{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ra(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,xa(ja,"InterpolationFormat",this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,t){return l.tidy(()=>{let t=Fs(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=l.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?l.image.resizeNearestNeighbor(t,[e,r]):l.image.resizeBilinear(t,[e,r]);return l.transpose(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?l.image.resizeNearestNeighbor(t,[e,r]):l.image.resizeBilinear(t,[e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Pu.className="UpSampling2D",l.serialization.registerClass(Pu);class Bu extends Eu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=_s(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=hi(e.depthwiseConstraint),this.depthwiseRegularizer=gu(e.depthwiseRegularizer)}build(e){if((e=Ds(e)).length<4)throw new ta(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ta(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Object(l.tidy)(()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return Object(l.tidy)(()=>{null==a&&(a="channelsLast"),Ra(a);let i=Tu(e,a);if(4!==e.rank)throw new ta(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ta(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=l.depthwiseConv2d(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=l.transpose(i,[0,3,1,2])),i})}(e=Fs(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=us(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=Ds(e);const t="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Iu("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),a=Iu(t,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,r,a]:[e[0],r,a,n]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=As(this.depthwiseInitializer),e.depthwiseRegularizer=mu(this.depthwiseRegularizer),e.depthwiseConstraint=li(this.depthwiseRegularizer),e}}function Vu(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ta("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Wu(e,t,n,r=!1,a,s,i=!1,o=!1){return l.tidy(()=>{const u=t.shape.length;if(u<3)throw new ta(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(Ha(2,u));if(t=l.transpose(t,c),null!=s)throw new na("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=l.cast(l.cast(a,"bool"),"float32")).rank===u-1&&(a=l.expandDims(a,-1)),a=l.transpose(a,c)),r&&(t=l.reverse(t,0),null!=a&&(a=l.reverse(a,0)));const d=[];let h,p=n;const f=t.shape[0],m=l.unstack(t);let b,g;null!=a&&(b=l.unstack(a));for(let t=0;t<f;++t){const n=m[t],r=l.tidy(()=>e(n,p));if(null==a)h=r[0],p=r[1];else{const e=l.tidy(()=>{const e=b[t],n=l.sub(l.onesLike(e),e);return{output:l.add(l.mul(r[0],e),l.mul(p[0],n)),newStates:p.map((t,a)=>l.add(l.mul(r[1][a],e),l.mul(t,n)))}});h=e.output,p=e.newStates}o&&d.push(h)}return o&&(g=l.stack(d,1)),[h,g,p]})}Bu.className="DepthwiseConv2D",l.serialization.registerClass(Bu);class Uu extends Hs{constructor(e){let t;if(super(e),null==e.cell)throw new ta("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Ju({cells:e.cell}):e.cell,null==t.stateSize)throw new ta("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Bs({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Ha(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){$s(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return l.tidy(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new na("Constants support is not implemented in RNN yet.");$s(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Bs({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!l.util.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),a))throw new ta(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(e=>new Bs({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Object(l.tidy)(()=>{if(!this.stateful)throw new Qr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ta("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>l.zeros([n,e])):[l.zeros([n,this.cell.stateSize])];else if(null==e)l.dispose(this.states_),null!=this.keptStates&&(l.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>l.zeros([n,e])):this.states_[0]=l.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ta(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):l.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!l.util.arraysEqual(r.shape,s))throw new ta(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>l.keep(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Vu(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Bs({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Vs){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Object(l.tidy)(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Fs(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new ta(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Wu((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],c=o[1],l=o[2];this.stateful&&this.resetStates(l,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(l):d})}getInitialState(e){return Object(l.tidy)(()=>{let t=l.zeros(e.shape);return t=l.sum(t,[1,2]),t=Za(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?ns(t,[1,e]):t):this.cell.stateSize>1?[ns(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Uu.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Wi(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Uu.className="RNN",l.serialization.registerClass(Uu);class Gu extends Hs{}class Hu extends Gu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,wa(this.units,"units"),this.activation=lu(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=_s(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_s(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_s(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gu(e.kernelRegularizer),this.recurrentRegularizer=gu(e.recurrentRegularizer),this.biasRegularizer=gu(e.biasRegularizer),this.kernelConstraint=hi(e.kernelConstraint),this.recurrentConstraint=hi(e.recurrentConstraint),this.biasConstraint=hi(e.biasConstraint),this.dropout=Ua([1,Ga([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ua([1,Ga([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ds(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Object(l.tidy)(()=>{if(2!==(e=e).length)throw new ta(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qu({ones:()=>l.onesLike(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qu({ones:()=>l.onesLike(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=as(null!=s?l.mul(e,s):e,this.kernel.read()),null!=this.bias&&(a=us(a,this.bias.read())),null!=i&&(n=l.mul(n,i));let o=l.add(a,as(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),useBias:this.useBias,kernelInitializer:As(this.kernelInitializer),recurrentInitializer:As(this.recurrentInitializer),biasInitializer:As(this.biasInitializer),kernelRegularizer:mu(this.kernelRegularizer),recurrentRegularizer:mu(this.recurrentRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:li(this.kernelConstraint),recurrentConstraint:li(this.recurrentConstraint),biasConstraint:li(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Hu.className="SimpleRNNCell",l.serialization.registerClass(Hu);class Ku extends Uu{constructor(e){e.cell=new Hu(e),super(e)}call(e,t){return Object(l.tidy)(()=>(null!=this.cell.dropoutMask&&(l.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return new e(t)}}Ku.className="SimpleRNN",l.serialization.registerClass(Ku);class qu extends Gu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ta("GRUCell does not support reset_after parameter set to true.");this.units=e.units,wa(this.units,"units"),this.activation=lu(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=lu(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=_s(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_s(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_s(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gu(e.kernelRegularizer),this.recurrentRegularizer=gu(e.recurrentRegularizer),this.biasRegularizer=gu(e.biasRegularizer),this.kernelConstraint=hi(e.kernelConstraint),this.recurrentConstraint=hi(e.recurrentConstraint),this.biasConstraint=hi(e.biasConstraint),this.dropout=Ua([1,Ga([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ua([1,Ga([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ds(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Object(l.tidy)(()=>{if(2!==(e=e).length)throw new ta(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qu({ones:()=>l.onesLike(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qu({ones:()=>l.onesLike(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.recurrentDropoutMask;let s,i,o;0<this.dropout&&this.dropout<1&&(e=l.mul(e,this.dropoutMask[0]));let u=as(e,this.kernel.read());this.useBias&&(u=us(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=l.mul(r,a[0]));const c=this.recurrentKernel.read(),[d,h]=l.split(c,[2*this.units,this.units],c.rank-1),p=as(r,d),[f,m,b]=l.split(u,3,u.rank-1),[g,y]=l.split(p,2,p.rank-1);s=this.recurrentActivation.apply(l.add(f,g)),i=this.recurrentActivation.apply(l.add(m,y));const x=as(l.mul(i,r),h);o=this.activation.apply(l.add(b,x));const v=l.add(l.mul(s,r),l.mul(l.add(1,l.neg(s)),o));return[v,v]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),recurrentActivation:uu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:As(this.kernelInitializer),recurrentInitializer:As(this.recurrentInitializer),biasInitializer:As(this.biasInitializer),kernelRegularizer:mu(this.kernelRegularizer),recurrentRegularizer:mu(this.recurrentRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:li(this.kernelConstraint),recurrentConstraint:li(this.recurrentConstraint),biasConstraint:li(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}qu.className="GRUCell",l.serialization.registerClass(qu);class Xu extends Uu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new qu(e),super(e)}call(e,t){return Object(l.tidy)(()=>(null!=this.cell.dropoutMask&&(l.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Xu.className="GRU",l.serialization.registerClass(Xu);class Zu extends Gu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,wa(this.units,"units"),this.activation=lu(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=lu(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=_s(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_s(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_s(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=gu(e.kernelRegularizer),this.recurrentRegularizer=gu(e.recurrentRegularizer),this.biasRegularizer=gu(e.biasRegularizer),this.kernelConstraint=hi(e.kernelConstraint),this.recurrentConstraint=hi(e.recurrentConstraint),this.biasConstraint=hi(e.biasConstraint),this.dropout=Ua([1,Ga([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ua([1,Ga([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n;if(e=Ds(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,r=this.units;n=new((t=class extends ps{apply(t,n){const a=e.apply([r]),s=(new ms).apply([r]),i=e.apply([2*r]);return ts(ts(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Object(l.tidy)(()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new ta(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qu({ones:()=>l.onesLike(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qu({ones:()=>l.onesLike(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.recurrentDropoutMask;let i,o,u,c;0<this.dropout&&this.dropout<1&&(e=l.mul(e,this.dropoutMask[0]));let d=as(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=l.mul(r,s[0])),d=l.add(d,as(r,this.recurrentKernel.read())),this.useBias&&(d=us(d,this.bias.read()));const[h,p,f,m]=l.split(d,4,d.rank-1);i=this.recurrentActivation.apply(h),o=this.recurrentActivation.apply(p),u=l.add(l.mul(o,a),l.mul(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const b=l.mul(c,this.activation.apply(u));return[b,b,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:uu(this.activation),recurrentActivation:uu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:As(this.kernelInitializer),recurrentInitializer:As(this.recurrentInitializer),biasInitializer:As(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:mu(this.kernelRegularizer),recurrentRegularizer:mu(this.recurrentRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:li(this.kernelConstraint),recurrentConstraint:li(this.recurrentConstraint),biasConstraint:li(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Zu.className="LSTMCell",l.serialization.registerClass(Zu);class Yu extends Uu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Zu(e),super(e)}call(e,t){return Object(l.tidy)(()=>(null!=this.cell.dropoutMask&&(l.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Yu.className="LSTM",l.serialization.registerClass(Yu);class Ju extends Gu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Object(l.tidy)(()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)})}build(e){let t;$s(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{za(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}));return Object.assign({},e,{cells:t})}static fromConfig(e,t,n={}){const r=[];for(const a of t.cells)r.push(Wi(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ls(e)}setWeights(e){const t=[];for(const n of this.cells){const r=e.splice(n.weights.length);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Ps(t)}}function Qu(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):cs(t(),n),o=()=>ls(i,t,r);return!a||a<=1?l.keep(o().clone()):Array(a).fill(void 0).map(o).map(e=>l.keep(e.clone()))}Ju.className="StackedRNNCells",l.serialization.registerClass(Ju);class ec extends Uu{constructor(e){if(e.unroll)throw new na("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new na("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Bs({ndim:5})]}call(e,t){return l.tidy(()=>{if(null!=this.cell.dropoutMask&&(l.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(l.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ta("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return l.tidy(()=>{const{stateSize:t}=this.cell,n=this.computeSingleOutputShape(e.shape),r=[n[0],...n.slice(2)],a=l.zeros(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){l.tidy(()=>{if(!this.stateful)throw new Qr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new ta("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>l.zeros(a)):[l.zeros(a)];else if(null==e)l.dispose(this.states_),null!=this.keptStates&&(l.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>l.zeros(a)):this.states_[0]=l.zeros(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ta(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):l.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!l.util.arraysEqual(n.shape,r))throw new ta(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>l.keep(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?4:3],c=Iu(e[o?3:2],r[0],a,s[0],i[0]),l=Iu(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,l]:[c,l,n]]}}ec.className="ConvRNN2D";class tc extends Zu{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,wa(this.filters,"filters"),this.kernelSize=Su(n,2,"kernelSize"),this.kernelSize.forEach(e=>wa(e,"kernelSize")),this.strides=Su(r||1,2,"strides"),this.strides.forEach(e=>wa(e,"strides")),this.padding=a||"valid",Fa(this.padding),this.dataFormat=s||"channelsLast",Ra(this.dataFormat),this.dilationRate=Su(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>wa(e,"dilationRate"))}build(e){var t;e=Ds(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ta(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=this.kernelSize.concat([e[n],4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends ps{apply(e,t){return es([n.apply([r]),l.ones([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return l.tidy(()=>{if(3!==e.length)throw new ta(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qu({ones:()=>l.onesLike(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?l.mul(t[n],e):e;let u=o(r,i,0),c=o(r,i,1),d=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qu({ones:()=>l.onesLike(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=o(a,p,0),m=o(a,p,1),b=o(a,p,2),g=o(a,p,3);const[y,x,v,w]=l.split(this.kernel.read(),4,3),[O,k,S,I]=this.useBias?l.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,O,this.padding),c=this.inputConv(c,x,k,this.padding),d=this.inputConv(d,v,S,this.padding),h=this.inputConv(h,w,I,this.padding);const[N,T,C,j]=l.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),b=this.recurrentConv(b,C),g=this.recurrentConv(g,j);const E=this.recurrentActivation.apply(l.add(u,f)),A=this.recurrentActivation.apply(l.add(c,m)),_=l.add(l.mul(A,s),l.mul(E,this.activation.apply(l.add(d,b)))),$=l.mul(this.recurrentActivation.apply(l.add(h,g)),this.activation.apply(_));return[$,$,_]})}getConfig(){const e=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(super.getConfig(),["units"]);return Object.assign({},e,{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(e,t,n,r){const a=l.conv2d(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?us(a,n,this.dataFormat):a}recurrentConv(e,t){return l.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}tc.className="ConvLSTM2DCell",l.serialization.registerClass(tc);class nc extends ec{constructor(e){const t=new tc(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}nc.className="ConvLSTM2D",l.serialization.registerClass(nc);class rc extends Hs{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Object(l.tidy)(()=>{this.invokeCallHook(e,t);const n=Fs(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ls(()=>cs(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}rc.className="Dropout",l.serialization.registerClass(rc);class ac extends rc{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}ac.className="SpatialDropout1D",l.serialization.registerClass(ac);class sc extends Hs{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,wa(this.units,"units"),this.activation=lu(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=_s(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=_s(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=hi(e.kernelConstraint),this.biasConstraint=hi(e.biasConstraint),this.kernelRegularizer=gu(e.kernelRegularizer),this.biasRegularizer=gu(e.biasRegularizer),this.activityRegularizer=gu(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ds(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ds(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Object(l.tidy)(()=>{this.invokeCallHook(e,t);const n=Fs(e),r=ka(this.activation.getClassName());let a;return null!=r?a=as(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=as(n,this.kernel.read()),null!=this.bias&&(a=us(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const e={units:this.units,activation:uu(this.activation),useBias:this.useBias,kernelInitializer:As(this.kernelInitializer),biasInitializer:As(this.biasInitializer),kernelRegularizer:mu(this.kernelRegularizer),biasRegularizer:mu(this.biasRegularizer),activityRegularizer:mu(this.activityRegularizer),kernelConstraint:li(this.kernelConstraint),biasConstraint:li(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}sc.className="Dense",l.serialization.registerClass(sc);class ic extends Hs{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ds(e);for(const t of e.slice(1))if(null==t)throw new ta(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Wa(e,1)]}call(e,t){return Object(l.tidy)(()=>{this.invokeCallHook(e,t);let n=Fs(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Object(l.transpose)(n,e)}return function(e){if(e.rank<=1)throw new ta(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Wa(e.shape,1)];return l.reshape(e,t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ic.className="Flatten",l.serialization.registerClass(ic);class oc extends Hs{constructor(e){super(e),this.supportsMasking=!0,this.activation=lu(e.activation)}call(e,t){return Object(l.tidy)(()=>{this.invokeCallHook(e,t);const n=Fs(e);return this.activation.apply(n)})}getConfig(){const e={activation:uu(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}oc.className="Activation",l.serialization.registerClass(oc);class uc extends Hs{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Object(l.tidy)(()=>{return e=Fs(e),t=e,n=this.n,Object(l.tidy)(()=>{if(2!==t.shape.length)throw new ta(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return ns(Za(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}uc.className="RepeatVector",l.serialization.registerClass(uc);class cc extends Hs{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==s)throw new ta("Can only specifiy one unknown dimension.");s=o}else a*=e}const i=Wa(e);if(null!==s){if(0===a||i%a!=0)throw new ta(n);r[s]=i/a}else if(i!==a)throw new ta(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Object(l.tidy)(()=>{this.invokeCallHook(e,t);const n=Fs(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Object(l.reshape)(n,a)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}cc.className="Reshape",l.serialization.registerClass(cc);class lc extends Hs{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ha(1,e.dims.length+1);if(!l.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Bs({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ds(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Object(l.transpose)(Fs(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}lc.className="Permute",l.serialization.registerClass(lc);class dc extends Hs{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Fs(e);return Object(l.any)(Object(l.notEqual)(n,this.maskValue),-1)}call(e,t){return Object(l.tidy)(()=>{this.invokeCallHook(e,t);const n=Fs(e),r=Object(l.any)(Object(l.notEqual)(n,this.maskValue),-1,!0);return Object(l.mul)(n,Object(l.cast)(r,n.dtype))})}}dc.className="Masking",l.serialization.registerClass(dc);class hc extends Hs{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=null==e.inputLength?[t,null]:[t].concat(ca(e.inputLength))}this.inputDim=e.inputDim,wa(this.inputDim,"inputDim"),this.outputDim=e.outputDim,wa(this.outputDim,"outputDim"),this.embeddingsInitializer=_s(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gu(e.embeddingsRegularizer),this.activityRegularizer=gu(e.activityRegularizer),this.embeddingsConstraint=hi(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Object(l.tidy)(()=>this.maskZero?(e=Fs(e),Object(l.notEqual)(e,Object(l.zerosLike)(e))):null)}computeOutputShape(e){if(e=Ds(e),null==this.inputLength)return[...e,this.outputDim];const t=ca(this.inputLength);if(t.length!==e.length-1)throw new ta(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new ta(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Object(l.tidy)(()=>{this.invokeCallHook(e,t);let n=Fs(e);"int32"!==n.dtype&&(n=Xa(n,"int32"));const r=ss(this.embeddings.read(),Object(l.reshape)(n,[n.size]));return Object(l.reshape)(r,Ds(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:As(this.embeddingsInitializer),embeddingsRegularizer:mu(this.embeddingsRegularizer),activityRegularizer:mu(this.activityRegularizer),embeddingsConstraint:li(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}hc.className="Embedding",l.serialization.registerClass(hc);class pc extends Hs{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new na}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new ta("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ds(e)]),(e=e).length<2)throw new ta(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=ga(t),t.length>1)throw new ta(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map(e=>e.length);this.reshapeRequired=-1!==e.indexOf(null)||1!==ga(r).length}call(e,t){return Object(l.tidy)(()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=Ga(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Za(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=l.reshape(s,[r].concat(Wa(e.slice(1))));i=l.transpose(i,[1,0]),i=l.reshape(i,a),t.push(i),n=!0}else if(e>1){const r=Ha(1,e).concat([0]);t.push(l.transpose(s,r)),n=!0}else t.push(s)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=l.reshape(l.transpose(l.reshape(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Ha(0,a-1));r=l.transpose(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=ga(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return l.tidy(()=>{if(null==t)return null;if(!Array.isArray(t))throw new ta("`mask` should be an Array");if(!Array.isArray(e))throw new ta("`inputs` should be an Array");if(t.length!==e.length)throw new ta(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:l.expandDims(e,0)))[0];for(let e=1;e<t.length-1;++e)n=l.logicalAnd(n,t[e]);return n})}}class fc extends pc{constructor(e){super(e)}mergeFunction(e){return Object(l.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=l.add(t,e[n]);return t})}}fc.className="Add",l.serialization.registerClass(fc);class mc extends pc{constructor(e){super(e)}mergeFunction(e){return Object(l.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=l.mul(t,e[n]);return t})}}mc.className="Multiply",l.serialization.registerClass(mc);class bc extends pc{constructor(e){super(e)}mergeFunction(e){return Object(l.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=l.add(t,e[n]);return l.mul(1/e.length,t)})}}bc.className="Average",l.serialization.registerClass(bc);class gc extends pc{constructor(e){super(e)}mergeFunction(e){return Object(l.tidy)(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=l.maximum(t,e[n]);return t})}}gc.className="Maximum",l.serialization.registerClass(gc);class yc extends pc{constructor(e){super(e)}mergeFunction(e){return Object(l.tidy)(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=l.minimum(t,e[n]);return t})}}yc.className="Minimum",l.serialization.registerClass(yc);class xc extends pc{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ta("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(l.util.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new ta("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Object(l.tidy)(()=>es(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ta("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ta("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ta("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ta(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return l.tidy(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let s=0;s<e.length;++s)r.push(null==t[s]?l.cast(l.onesLike(e[s]),"bool"):t[s].rank<e[s].rank?l.expandDims(t[s],-1):t[s]);const a=l.concat(r,this.axis);return l.all(a,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function vc(e,t){for(;e<0;)e+=t;return e}xc.className="Concatenate",l.serialization.registerClass(xc);class wc extends pc{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){l.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new na("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ta(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ta(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>vc(t,e[n].shape.length)):[vc(this.axes,n.shape.length),vc(this.axes,r.shape.length)],this.normalize&&(n=Ui(n,t[0]),r=Ui(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new na("batchDot is not implemented for tensors of 4D or higher rank yet");if(l.util.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),l.util.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new na("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return l.tidy(()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=l.reshape(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=l.reshape(e,e.shape.concat(t))}else n=0;if(i=2===e.shape.length&&2===t.shape.length?s[0]===s[1]?l.sum(l.mul(e,t),s[0]):l.sum(l.mul(l.transpose(e,[1,0]),t),s[1]):l.matMul(e,t,s[0]!==e.shape.length-1,s[1]===t.shape.length-1),n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=l.squeeze(i,t)}return 1===i.shape.length&&(i=l.expandDims(i,1)),i})}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[vc(this.axes,e.length),vc(this.axes,t.length)],n}computeOutputShape(e){l.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new na("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}wc.className="Dot",l.serialization.registerClass(wc);class Oc extends Hs{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Object(l.tidy)(()=>{this.invokeCallHook(e,t);const n=Fs(e);return ls(()=>Object(l.add)(rs(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}Oc.className="GaussianNoise",l.serialization.registerClass(Oc);class kc extends Hs{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(l.tidy)(()=>{this.invokeCallHook(e,t);const n=Fs(e);return this.rate>0&&this.rate<1?ls(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Object(l.mul)(n,rs(n.shape,1,e))},()=>n,t.training||!1):n})}}kc.className="GaussianDropout",l.serialization.registerClass(kc);class Sc extends Hs{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Fs(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(l.tidy)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ls(()=>{const t=Fs(e),r=-1.7580993408473766;let a=Object(l.greaterEqual)(Object(l.randomUniform)(n),this.rate);a=Xa(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=Object(l.add)(Object(l.mul)(t,a),Object(l.mul)(Object(l.add)(a,-1),r));return Object(l.add)(Object(l.mul)(o,s),i)},()=>Fs(e),t.training||!1)}return e})}}function Ic(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=l.batchNorm2d(e,t,n,r,a,s);else if(3===e.rank)i=l.batchNorm3d(e,t,n,r,a,s);else{if(4!==e.rank)throw new na(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=l.batchNorm4d(e,t,n,r,a,s)}return i}Sc.className="AlphaDropout",l.serialization.registerClass(Sc);class Nc extends Hs{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=_s(e.betaInitializer||"zeros"),this.gammaInitializer=_s(e.gammaInitializer||"ones"),this.movingMeanInitializer=_s(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=_s(e.movingVarianceInitializer||"ones"),this.betaConstraint=hi(e.betaConstraint),this.gammaConstraint=hi(e.gammaConstraint),this.betaRegularizer=gu(e.betaRegularizer),this.gammaRegularizer=gu(e.gammaRegularizer)}build(e){e=Ds(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ta(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Bs({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Object(l.tidy)(()=>{const n=null!=t.training&&t.training,r=Fs(e),a=r.shape,s=a.length,i=Ha(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=sa(1,s);u[o]=a[o];const c=i.slice();c.sort();const d=!l.util.arraysEqual(c,Ha(0,s).slice(0,s-1));if(!n)return(()=>{if(d){const e=Object(l.reshape)(this.movingMean.read(),u),t=Object(l.reshape)(this.movingVariance.read(),u),n=this.center?Object(l.reshape)(this.beta.read(),u):null,a=this.scale?Object(l.reshape)(this.gamma.read(),u):null;return Ic(r,e,t,n,a,this.epsilon)}return Ic(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=function(e,t,n,r,a=.001){return l.util.arraysEqual(r.slice().sort(),Ha(0,e.rank-1))?function(e,t,n,r,a=.001){return Object(l.tidy)(()=>{const s=l.moments(e,r),i=s.mean,o=s.variance;return[Ic(e,i,o,n,t,a),i,o]})}(e,t,n,r,a):function(e,t,n,r,a=.001){return Object(l.tidy)(()=>{const s=l.moments(e,r),i=s.mean,o=s.variance,u=[];for(const t of Ha(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=Object(l.reshape)(i,u),d=Object(l.reshape)(o,u),h=null==t?null:Object(l.reshape)(t,u),p=null==n?null:Object(l.reshape)(n,u);return[Ic(e,c,d,p,h,a),i,o]})}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{l.tidy(()=>{const r=1-n,a=e.read(),s=l.mul(l.sub(a,t),r);e.write(l.sub(a,s))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:As(this.betaInitializer),gammaInitializer:As(this.gammaInitializer),movingMeanInitializer:As(this.movingMeanInitializer),movingVarianceInitializer:As(this.movingVarianceInitializer),betaRegularizer:mu(this.betaRegularizer),gammaRegularizer:mu(this.gammaRegularizer),betaConstraint:li(this.betaConstraint),gammaConstraint:li(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Nc.className="BatchNormalization",l.serialization.registerClass(Nc);class Tc extends Hs{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=_s(e.betaInitializer||"zeros"),this.gammaInitializer=_s(e.gammaInitializer||"ones"),this.betaRegularizer=gu(e.betaRegularizer),this.gammaRegularizer=gu(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ds(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==ga(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(t=>e[t]);this.gamma=this.scale?this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,t){const n=Fs(e),r=n.shape,a=r.length;return Object(l.tidy)(()=>{let{mean:e,variance:t}=Object(l.moments)(n,this.axis,!0);const s=sa(1,a);for(const n of this.axis)s[n]=r[n];const i=e=>null!=e&&e.shape.length!==a?l.reshape(e,s):e;let o=this.scale?i(this.gamma.read()):null,u=this.center?i(this.beta.read()):null;const c=[],d=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),d.push(1)):(c.push(1),d.push(r[n]));return e=l.tile(e,c),t=l.tile(t,c),null!=o&&(o=l.tile(o,d)),null!=u&&(u=l.tile(u,d)),Ic(n,e,t,u,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:As(this.betaInitializer),gammaInitializer:As(this.gammaInitializer),betaRegularizer:mu(this.betaRegularizer),gammaRegularizer:mu(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Tc.className="LayerNormalization",l.serialization.registerClass(Tc);class Cc extends Hs{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ta(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ta(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ta(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Bs({ndim:4})]}computeOutputShape(e){let t,n;return e=Ds(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Object(l.tidy)(()=>{return t=Fs(e),n=this.padding,r=this.dataFormat,Object(l.tidy)(()=>{if(4!==t.rank)throw new ta(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ta("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ta(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],l.pad(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function jc(e,t,n,r,a,s){return Object(l.tidy)(()=>{let i;Ra(a),Da(s),Fa(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Tu(e,a);const o="same"===r?"same":"valid";return i="max"===s?l.maxPool(e,t,n,o):l.avgPool(e,t,n,o),"channelsFirst"===a&&(i=l.transpose(i,[0,3,1,2])),i})}function Ec(e,t,n,r,a,s){return Object(l.tidy)(()=>{let i;Ra(a),Da(s),Fa(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Cu(e,a);const o="same"===r?"same":"valid";return i="max"===s?l.maxPool3d(e,t,n,o):l.avgPool3d(e,t,n,o),"channelsFirst"===a&&(i=l.transpose(i,[0,4,1,2,3])),i})}Cc.className="ZeroPadding2D",l.serialization.registerClass(Cc);class Ac extends Hs{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ta(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(wa(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ta(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}wa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Fa(this.padding),this.inputSpec=[new Bs({ndim:3})]}computeOutputShape(e){const t=Iu((e=Ds(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Object(l.tidy)(()=>{this.invokeCallHook(e,t),e=Za(Fs(e),2);const n=this.poolingFunction(Fs(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return l.squeeze(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class _c extends Ac{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ra(a),Fa(r),jc(e,t,n,r,a,"max")}}_c.className="MaxPooling1D",l.serialization.registerClass(_c);class $c extends Ac{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ra(a),Fa(r),jc(e,t,n,r,a,"avg")}}$c.className="AveragePooling1D",l.serialization.registerClass($c);class Rc extends Hs{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ta(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];wa(this.poolSize,"poolSize"),wa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ra(this.dataFormat),Fa(this.padding),this.inputSpec=[new Bs({ndim:4})]}computeOutputShape(e){e=Ds(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Iu(t,this.poolSize[0],this.padding,this.strides[0]),n=Iu(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Object(l.tidy)(()=>(this.invokeCallHook(e,t),this.poolingFunction(Fs(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Fc extends Rc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ra(a),Fa(r),jc(e,t,n,r,a,"max")}}Fc.className="MaxPooling2D",l.serialization.registerClass(Fc);class Dc extends Rc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ra(a),Fa(r),jc(e,t,n,r,a,"avg")}}Dc.className="AveragePooling2D",l.serialization.registerClass(Dc);class Mc extends Hs{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ta(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];wa(this.poolSize,"poolSize"),wa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ra(this.dataFormat),Fa(this.padding),this.inputSpec=[new Bs({ndim:5})]}computeOutputShape(e){e=Ds(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Iu(t,this.poolSize[0],this.padding,this.strides[0]),n=Iu(n,this.poolSize[1],this.padding,this.strides[1]),r=Iu(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Object(l.tidy)(()=>(this.invokeCallHook(e,t),this.poolingFunction(Fs(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class zc extends Mc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ra(a),Fa(r),Ec(e,t,n,r,a,"max")}}zc.className="MaxPooling3D",l.serialization.registerClass(zc);class Lc extends Mc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ra(a),Fa(r),Ec(e,t,n,r,a,"avg")}}Lc.className="AveragePooling3D",l.serialization.registerClass(Lc);class Pc extends Hs{constructor(e){super(e),this.inputSpec=[new Bs({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new na}}class Bc extends Pc{constructor(e){super(e||{})}call(e,t){return Object(l.tidy)(()=>{const t=Fs(e);return l.mean(t,1)})}}Bc.className="GlobalAveragePooling1D",l.serialization.registerClass(Bc);class Vc extends Pc{constructor(e){super(e||{})}call(e,t){return Object(l.tidy)(()=>{const t=Fs(e);return l.max(t,1)})}}Vc.className="GlobalMaxPooling1D",l.serialization.registerClass(Vc);class Wc extends Hs{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ra(this.dataFormat),this.inputSpec=[new Bs({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new na}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Uc extends Wc{call(e,t){return Object(l.tidy)(()=>{const t=Fs(e);return l.mean(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}Uc.className="GlobalAveragePooling2D",l.serialization.registerClass(Uc);class Gc extends Wc{call(e,t){return Object(l.tidy)(()=>{const t=Fs(e);return l.max(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}Gc.className="GlobalMaxPooling2D",l.serialization.registerClass(Gc);class Hc extends Hs{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Wi(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class Kc extends Hc{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ds(e)).length<3)throw new ta(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ds(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t);return[n[0],e[1]].concat(n.slice(1))}call(e,t){return Object(l.tidy)(()=>Wu((e,n)=>[Fs(this.layer.call(e,t)),[]],e=Fs(e),[],!1,null,null,!1,!0)[1])}}Kc.className="TimeDistributed",l.serialization.registerClass(Kc);class qc extends Hc{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Wi(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Wi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,xa(_a,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new na("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):ua(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Vu(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new ta("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map(e=>new Bs({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new na("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Vs;for(const u of s)if(u instanceof Vs!==o)throw new ta("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Object(l.tidy)(()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=l.reverse(a,1)),"concat"===this.mergeMode?i=es([r,a]):"sum"===this.mergeMode?i=l.add(r,a):"ave"===this.mergeMode?i=l.mul(.5,l.add(r,a)):"mul"===this.mergeMode?i=l.mul(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){za(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),za(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Wi(t.layer);if(delete t.layer,null!=t.numConstants)throw new na("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function Xc(e){return new qs(e)}function Zc(e){return new wu(e)}function Yc(e){return new yu(e)}function Jc(e){return new xu(e)}function Qc(e){return new vu(e)}function el(e){return new ku(e)}function tl(e){return new Ou(e)}function nl(e){return new zu(e)}function rl(e){return new _u(e)}function al(e){return new Ru(e)}function sl(e){return new $u(e)}function il(e){return new Fu(e)}function ol(e){return new Mu(e)}function ul(e){return new Lu(e)}function cl(e){return new Pu(e)}function ll(e){return new Bu(e)}function dl(e){return new oc(e)}function hl(e){return new sc(e)}function pl(e){return new rc(e)}function fl(e){return new ac(e)}function ml(e){return new ic(e)}function bl(e){return new uc(e)}function gl(e){return new cc(e)}function yl(e){return new lc(e)}function xl(e){return new hc(e)}function vl(e){return new fc(e)}function wl(e){return new bc(e)}function Ol(e){return new xc(e)}function kl(e){return new gc(e)}function Sl(e){return new yc(e)}function Il(e){return new mc(e)}function Nl(e){return new wc(e)}function Tl(e){return new Nc(e)}function Cl(e){return new Tc(e)}function jl(e){return new Cc(e)}function El(e){return new $c(e)}function Al(e){return El(e)}function _l(e){return El(e)}function $l(e){return new Dc(e)}function Rl(e){return $l(e)}function Fl(e){return $l(e)}function Dl(e){return new Lc(e)}function Ml(e){return Dl(e)}function zl(e){return Dl(e)}function Ll(e){return new Bc(e)}function Pl(e){return new Uc(e)}function Bl(e){return new Vc(e)}function Vl(e){return new Gc(e)}function Wl(e){return new _c(e)}function Ul(e){return new Fc(e)}function Gl(e){return new zc(e)}function Hl(e){return new Xu(e)}function Kl(e){return new qu(e)}function ql(e){return new Yu(e)}function Xl(e){return new Zu(e)}function Zl(e){return new Ku(e)}function Yl(e){return new Hu(e)}function Jl(e){return new nc(e)}function Ql(e){return new tc(e)}function ed(e){return new Uu(e)}function td(e){return new Ju(e)}function nd(e){return new qc(e)}function rd(e){return new Kc(e)}qc.className="Bidirectional",l.serialization.registerClass(qc);const ad=Bl,sd=Vl,id=Wl,od=Ul;function ud(e){return new Oc(e)}function cd(e){return new kc(e)}function ld(e){return new Sc(e)}function dd(e){return new dc(e)}function hd(e,t){return eo(e,t)}function pd(e,t){return ao(e,t)}function fd(e,t){return so(e,t)}function md(e,t){return to(e,t)}function bd(e,t){return io(e,t)}function gd(e,t){return ro(e,t)}function yd(e,t){return function(e,t){return Object(l.tidy)(()=>{const n=no(e,t),r=function(e,t){return Object(l.tidy)(()=>l.cast(l.sum(l.logicalAnd(l.equal(e,1),l.equal(t,0))),"float32"))}(e,t),a=l.add(n,r);return l.cast(l.where(l.greater(a,0),l.div(n,a),0),"float32")})}(e,t)}function xd(e,t){return Yi(e,t)}function vd(e,t){return Hi(e,t)}function wd(e,t){return Ki(e,t)}function Od(e,t){return Ki(e,t)}function kd(e,t){return Ki(e,t)}function Sd(e,t){return Gi(e,t)}function Id(e,t){return Gi(e,t)}function Nd(e,t){return Gi(e,t)}function Td(e){return new pu(e)}function Cd(e){return du(t=e),new pu({l1:null!=t?t.l1:null,l2:0});var t}function jd(e){return du(t=e),new pu({l2:null!=t?t.l2:null,l1:0});var t}class Ed extends Fi{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof zo))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Ad(e,t){return e<t}function _d(e,t){return e>t}class $d extends Ed{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new na("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.monitorFunc="min"===this.mode?Ad:"max"===this.mode||-1!==this.monitor.indexOf("acc")?_d:Ad,this.monitorFunc===Ad&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.best=null!=this.baseline?this.baseline:this.monitorFunc===Ad?1/0:-1/0}async onEpochEnd(e,t){await _i(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const Rd={earlyStopping:function(e){return new $d(e)}};var Fd,Dd=n("CtZu"),Md=n("YSVl");function zd(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(Wd(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=zd(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function Ld(e,t=Bd){return Pd(e,t)}function Pd(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(Wd(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=Pd(e.map(e=>e[s]),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function Bd(e){return null===e?null:Wd(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function Vd(e,t){const n=new Map;zd(e,t,n);for(const r of Array.from(n.keys())){const e=n.get(r);if(l.util.isPromise(e)){const t=await e;n.set(r,t)}}return zd(e,t,n)}function Wd(e){let t=!1;if(l.env().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(4);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof l.Tensor)&&!(e instanceof Promise)&&!t)}function Ud(e){return e instanceof l.Tensor?{value:e.clone(),recurse:!1}:Wd(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Gd{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Hd extends Gd{constructor(){super(Hd.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Kd(e){return new Zd(e)}function qd(e){return new Yd(e)}Hd.INITIAL_CAPACITY=32;class Xd{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ah(this,e)}filter(e){return new nh(this,e)}map(e){return new rh(this,e)}mapAsync(e){return new sh(this,e)}serialMapAsync(e){return new sh(this,e).serial()}flatmap(e){return new oh(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new th(this,e,t)}columnMajorBatch(e,t=!0,n=Bd){return this.rowMajorBatch(e,t).map(e=>Ld(e,n))}concatenate(e,t){return new uh(Kd([this,e]),t)}take(e){return e<0||null==e?this:new eh(this,e)}skip(e){return e<0||null==e?this:new Qd(this,e)}prefetch(e){return new lh(this,e)}shuffle(e,t){return new dh(this,e,t)}serial(){return new Jd(this)}}class Zd extends Xd{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,zd(t,Ud)),done:!1};var t}}class Yd extends Xd{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Jd extends Xd{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class Qd extends Xd{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;l.dispose(e.value)}return this.upstream.next()}}class eh extends Xd{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class th extends Xd{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class nh extends Xd{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;l.dispose(e.value)}}}class rh extends Xd{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=l.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=l.tensor_util.getTensorsInContainer(n);for(const a of t)l.tensor_util.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class ah extends Xd{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class sh extends Xd{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=l.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),r=l.tensor_util.getTensorsInContainer(n);for(const a of t)l.tensor_util.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class ih extends Xd{constructor(){super(),this.outputQueue=new Hd,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class oh extends ih{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=l.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=l.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const a of t)l.tensor_util.isTensorInList(a,r)||a.dispose();return!0}}class uh extends Xd{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Fd||(Fd={}));class ch extends Xd{constructor(e,t=Fd.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await Vd(this.iterators,function(e){return e instanceof Xd?{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}:{value:null,recurse:!0}});if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Fd.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Fd.SHORTEST:return{value:null,done:!0}}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class lh extends Xd{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Gd(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class dh extends lh{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Md.alea(n||l.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class hh{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return l.util.assert(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ph(async()=>(await n.iterator()).columnMajorBatch(e,t,bh),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ph(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,ph(async()=>(await t.iterator()).filter(t=>l.tidy(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ph(async()=>(await t.iterator()).map(t=>l.tidy(()=>e(t))),this.size)}mapAsync(e){const t=this;return ph(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ph(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ph(async()=>{return n=qd(async()=>({value:await t.iterator(),done:!1})).take(e),new uh(n,undefined);var n},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ph(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Md.alea(t||l.util.now().toString());return ph(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ph(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ph(e,t=null){return new class extends hh{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function fh(e){return ph(async()=>Kd(e),e.length)}function mh(e){if(!Wd(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return ph(async()=>function(e,t=Fd.FAIL){return new ch(e,t)}(await Vd(e,e=>{if(e instanceof hh)return{value:e.iterator(),recurse:!1};if(Wd(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),Fd.SHORTEST),t)}function bh(e){return null===e?null:null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof l.Tensor||l.util.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof l.Tensor?l.stack(e):l.tensor(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}hh.MAX_BUFFER_SIZE=1e4;class gh extends hh{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}}const yh='"',xh=Symbol("out"),vh=Symbol("field"),wh=Symbol("quote"),Oh=Symbol("quoteafterquote"),kh=Symbol("quoteinquote");class Sh extends hh{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new gh(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(l.util.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&l.util.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(l.util.assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");return this.parseRow(t.value,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o);break;default:u=e}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=xh;for(let i=0;i<a;i++)switch(s){case xh:switch(e.charAt(i)){case yh:r=i+1,s=wh;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=xh;break;default:s=vh,r=i}break;case vh:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=xh,r=i+1}break;case wh:switch(e.charAt(i)){case yh:s=Oh}break;case Oh:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=xh,r=i+1;break;case yh:s=wh;break;default:s=kh}break;case kh:switch(e.charAt(i)){case yh:s=wh}}if(n.push(s===Oh?e.substring(r,a-1):e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class Ih extends Xd{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Object(l.env)().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new Ih(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise(r=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(l.util.sizeFromShape(t));return n.set(e,n.length-e.length),Object(l.tensor)(n,t)}}class Nh extends Xd{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Object(l.tensor1d)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Object(l.tensor2d)([r,n,s,a],[1,4])}else this.cropBox=Object(l.tensor2d)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Object(l.env)().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new Nh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&l.util.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=l.browser.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Object(l.tidy)(()=>{const t=Object(l.expandDims)(Object(l.cast)(e,"float32"),0);let n;n=l.image.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return Object(l.reshape)(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class Th{}class Ch extends Xd{split(e){return new jh(this,e)}}class jh extends Ch{constructor(e,t){super(),this.upstream=e,this.impl=new Eh(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Eh extends ih{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}class Ah extends Xd{decodeUTF8(){return new _h(this)}}class _h extends Ch{constructor(e){super(),this.upstream=e,this.impl=new $h(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class $h extends ih{constructor(e){if(super(),this.upstream=e,Object(l.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(5);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Object(l.env)().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class Rh extends Ah{constructor(e,t={}){super(),this.file=e,this.options=t,l.util.assert(e instanceof Uint8Array||!!Object(l.env)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n});return{value:await e,done:!1}}}function Fh(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class Dh extends Th{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(Fh(this.input)&&Object(l.env)().get("IS_NODE")){const e=n(6);this.input=e.readFileSync(this.input.slice(7))}return new Rh(this.input,this.options)}}class Mh extends Th{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return Fh(this.url)?new Dh(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;var s;"string"==typeof e?r=e:(r=e.url,a={method:(s=e).method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});const i=await(n||l.util.fetch)(r,a);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new Rh(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function zh(e,t={}){return new Sh(new Mh(e),t)}function Lh(e){const t=qd(e);return ph(async()=>t)}function Ph(e){return ph(async()=>{const t=await e();return qd(()=>t.next())})}async function Bh(e,t){return Nh.create(e,t)}async function Vh(e){return Ih.create(e)}const Wh="3.18.0";var Uh=n("ix3U"),Gh=n("7n2I");const Hh={"tfjs-core":l.version_core,"tfjs-backend-cpu":Uh.a,"tfjs-backend-webgl":Gh.a,"tfjs-data":Wh,"tfjs-layers":vo,"tfjs-converter":Dd.version_converter,tfjs:"3.18.0"}},zn8P:function(e,t){function n(e){return Promise.resolve().then(function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="zn8P"},zt1N:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n("+hG3");function a(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.util.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}},zvA9:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({greater_:function(e,t){let n=Object(i.a)(e,"a","greater","string_or_numeric"),u=Object(i.a)(t,"b","greater","string_or_numeric");return[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.assertAndGetBroadcastShape)(n.shape,u.shape),r.a.runKernel(a.qb,{a:n,b:u})}})}},[[0,0]]]);